{"version":3,"sources":["src_commands/utils/npmexecutor.ts"],"names":[],"mappings":";;AACA,8CAA8C;AAK9C;IAMI,YAAoB,gBAAwB;QAAxB,qBAAgB,GAAhB,gBAAgB,CAAQ;IAE5C,CAAC;IAMM,GAAG,CAAC,UAAkB;QACzB,MAAM,CAAC,YAAY,CAAC,QAAQ,CAAC,WAAW,UAAU,EAAE,EAAE;YAClD,GAAG,EAAE,IAAI,CAAC,gBAAgB;YAC1B,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;SACnB,CAAC,CAAC;IACP,CAAC;CACJ;AApBD,kCAoBC","file":"src_commands/utils/npmexecutor.js","sourcesContent":["import * as Path from 'path';\r\nimport * as ChildProcess from 'child_process';\r\n\r\n/**\r\n * This class executes a specified NPM command synchron in a specified working directory in a child process synchronously\r\n */\r\nexport class NpmExecutor {\r\n\r\n    /**\r\n     * @constructs NpmExecutor\r\n     * @param workingDirectory {string} The path for the working directory\r\n     */\r\n    constructor(private workingDirectory: string) {\r\n\r\n    }\r\n\r\n    /**\r\n     * Runs a command in the working directory synchronously.\r\n     * @param npmCommand {string} The NPM command to be exec.\r\n     */\r\n    public Run(npmCommand: string) {\r\n        return ChildProcess.execSync(`npm run ${npmCommand}`, {\r\n            cwd: this.workingDirectory,\r\n            stdio: [0, 1, 2]\r\n        });\r\n    }\r\n}"],"sourceRoot":"/source/"}