{"version":3,"sources":["src_commands/utils/snconfig/snconfigfielddecorator.ts"],"names":[],"mappings":";;AAAA,yBAAiE;AAOjE,uBAA8B,KAAyB;IACnD,MAAM,CAAC,UAAU,MAAW,EAAE,YAAoB;QAC9C,KAAK,CAAC,SAAS,GAAG,YAAY,CAAC;QAC/B,0BAAuB,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IACvC,CAAC,CAAA;AACL,CAAC;AALD,sCAKC","file":"src_commands/utils/snconfig/snconfigfielddecorator.js","sourcesContent":["import { SnConfigFieldModel, SnConfigFieldModelStore } from './';\r\n\r\n/**\r\n * This function has to be used in the SnConfigModel class to provide additional metadata for the SnConfig fields\r\n * @param model {SnConfigFieldModel} The field model parameters\r\n * @returns {function(SnConfigModel)} A factory method which fills the SnConfigModelStore with for the decorated field with the provided field model data\r\n */\r\nexport function SnConfigField(model: SnConfigFieldModel) {\r\n    return function (target: any, propertyName: string) {\r\n        model.FieldName = propertyName;\r\n        SnConfigFieldModelStore.Add(model);\r\n    }\r\n}"],"sourceRoot":"/source/"}