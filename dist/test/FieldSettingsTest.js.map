{"version":3,"sources":["test/FieldSettingsTest.ts"],"names":[],"mappings":"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","file":"test/FieldSettingsTest.js","sourcesContent":["///<reference path=\"../node_modules/@types/mocha/index.d.ts\"/>\r\nimport { FieldSettings } from '../src/FieldSettings'\r\nimport * as Chai from 'chai';\r\nimport * as sinon from 'sinon';\r\nconst expect = Chai.expect;\r\n\r\ndescribe(\"FieldSettings\", () => {\r\n    describe(\"#FieldSetting constructor\", function () {\r\n        const fieldSetting = new FieldSettings.FieldSetting({ name: 'ShortText' });\r\n        it('should return a FieldSetting object', function () {\r\n            expect(fieldSetting).to.be.an.instanceof(FieldSettings.FieldSetting);\r\n        });\r\n        it('should return a FieldSetting object with a name Shorttext', function () {\r\n            expect(fieldSetting.Name).to.be.eq('Shorttext');\r\n        });\r\n        it('should return null as the Icon of the FieldSetting object', function () {\r\n            let spy = sinon.spy(FieldSettings, 'FieldSetting');\r\n            let MyClass = FieldSettings.FieldSetting;\r\n            let inst = new MyClass({ name: 'ShortText' });\r\n            expect(spy.calledOnce).to.be.true;\r\n            expect(spy.called).to.be.equal(true);\r\n        });\r\n        it('returns the name', () => {\r\n            fieldSetting.Name.should.equal('ShortText');\r\n        });\r\n        it('can be changed', () => {\r\n            fieldSetting.Name = 'Number';\r\n            fieldSetting.Name.should.equal('Number');\r\n        });\r\n        it('should return a FieldSetting object with a name Shorttext', function () {\r\n            let obj1 = JSON.stringify({ Name: 'ShortText', DisplayName: null });\r\n            expect(JSON.stringify(fieldSetting)).to.be.eq(obj1);\r\n        });\r\n        it('should return a FieldSetting object with a name Shorttext', function () {\r\n\r\n            const fieldSetting = new FieldSettings.FieldSetting({ name: 'ShortText', displayName: 'AAA' });\r\n            let obj1 = JSON.stringify({ Name: 'ShortText', DisplayName: 'AAA' });\r\n            expect(JSON.stringify(fieldSetting)).to.be.eq(obj1);\r\n        });\r\n    });\r\n    describe(\"#TextFieldSetting constructor\", function () {\r\n        const fieldSetting = new FieldSettings.TextFieldSetting({ name: 'ShortText', displayName: 'ShortText', maxLength: 2, minLength: 0 });\r\n        it('should return a TextFieldSetting object', function () {\r\n            expect(fieldSetting).to.be.an.instanceof(FieldSettings.TextFieldSetting);\r\n        });\r\n        it('should return a TextFieldSetting object with a name Shorttext', function () {\r\n            expect(fieldSetting.Name).to.be.eq('Shorttext');\r\n        });\r\n        it('should return a TextFieldSetting object with the given params', function () {\r\n            const obj1 = JSON.stringify(fieldSetting);\r\n            const obj2 = JSON.stringify({ name: 'ShortText', displayName: 'ShortText', maxLength: 2, minLength: 0 })\r\n            expect(obj1).to.be.eq(obj2);\r\n        });\r\n        it('should return null as the Icon of the TextFieldSetting object', function () {\r\n            let spy = sinon.spy(FieldSettings, 'TextFieldSetting');\r\n            let MyClass = FieldSettings.TextFieldSetting;\r\n            let inst = new MyClass({ name: 'ShortText' });\r\n            expect(spy.calledOnce).to.be.true;\r\n        });\r\n    });\r\n    describe('#ShortText', function () {\r\n        const shorttext = new FieldSettings.ShortTextFieldSetting('text');\r\n        it('should return a ShortText fieldSetting object', function () {\r\n            expect(shorttext).to.be.an.instanceof(FieldSettings.ShortTextFieldSetting);\r\n        });\r\n    });\r\n    describe('#Number', function () {\r\n        const number = new FieldSettings.NumberFieldSetting('text');\r\n        it('should return a Number fieldSetting object', function () {\r\n            expect(number).to.be.an.instanceof(FieldSettings.NumberFieldSetting);\r\n        });\r\n    });\r\n    describe('#Binary', function () {\r\n        const binary = new FieldSettings.BinaryFieldSetting('text');\r\n        it('should return a Binary fieldSetting object', function () {\r\n            expect(binary).to.be.an.instanceof(FieldSettings.BinaryFieldSetting);\r\n        });\r\n    });\r\n    describe('#Color', function () {\r\n        const color = new FieldSettings.ColorFieldSetting('text');\r\n        it('should return a Color fieldSetting object', function () {\r\n            expect(color).to.be.an.instanceof(FieldSettings.ColorFieldSetting);\r\n        });\r\n    });\r\n    describe('#Currency', function () {\r\n        const currency = new FieldSettings.CurrencyFieldSetting('text');\r\n        it('should return a Currency fieldSetting object', function () {\r\n            expect(currency).to.be.an.instanceof(FieldSettings.CurrencyFieldSetting);\r\n        });\r\n    });\r\n    describe('#Captcha', function () {\r\n        const captcha = new FieldSettings.CaptchaFieldSetting({'displayName': 'Captcha'});\r\n        it('should return a Captcha fieldSetting object', function () {\r\n            expect(captcha).to.be.an.instanceof(FieldSettings.CaptchaFieldSetting);\r\n        });\r\n    });\r\n});"],"sourceRoot":"/source/"}