{"version":3,"sources":["test/CollectionTests.ts"],"names":[],"mappings":"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","file":"test/CollectionTests.js","sourcesContent":["///<reference path=\"../node_modules/@types/mocha/index.d.ts\"/>\r\nimport { Content } from '../src/Content'\r\nimport { Collection } from '../src/Collection'\r\nimport * as Chai from 'chai';\r\nconst expect = Chai.expect;\r\n\r\ndescribe('Collection', () => {\r\n  let collection,\r\n    children;\r\n    let window = {}\r\n  beforeEach(function () {\r\n    children = [{ Id: 1, }, { Id: 2, }];\r\n    collection = new Collection(children);\r\n    collection.Path = 'https://daily.demo.sensenet.com/lorem';\r\n    window['serviceToken'] = 'OData.svc';\r\n    window['siteUrl'] = \"https://daily.demo.sensenet.com\";\r\n  });\r\n  describe('#Items()', () => {\r\n    it('should return an array', function () {\r\n      const items = collection.Items();\r\n      expect(typeof items).to.eq('object');\r\n    });\r\n    it('should return an array with the same children objects', function () {\r\n      const items = collection.Items();\r\n      expect(items).to.deep.members(children);\r\n    });\r\n  });\r\n  describe('#Item(id)', () => {\r\n    it('should return an object with a given id', function () {\r\n      const item = collection.Item(1);\r\n      expect(typeof item).to.be.eq('object');\r\n      expect(item.Id).to.be.eq(1);\r\n    });\r\n  });\r\n  describe('#Count()', () => {\r\n    it('should return the number of items, in this case 2', function () {\r\n      const count = collection.Count();\r\n      expect(count).to.be.eq(2);\r\n    });\r\n  });\r\n  describe('#Add()', () => {\r\n    const content = Content.Create('Article', { DisplayName: 'content' });\r\n    it(\"should return an observable\", function () {\r\n      expect(typeof collection.Add(content)).to.be.eq('object');\r\n    });\r\n  });\r\n  describe('#Remove()', () => {\r\n    it(\"should return an observable\", function () {\r\n      expect(typeof collection.Remove(1, true)).to.be.eq('object');\r\n    });\r\n  });\r\n  describe('#Remove()', () => {\r\n    it(\"should return an observable\", function () {\r\n      expect(typeof collection.Remove(1)).to.be.eq('object');\r\n    });\r\n  });\r\n  describe('#Remove()', () => {\r\n    it(\"should return an observable\", function () {\r\n      collection['Path'] = '/workspaces/project'\r\n      expect(typeof collection.Remove([0, 1], true)).to.be.eq('object');\r\n    });\r\n  });\r\n  describe('#Remove()', () => {\r\n    it(\"should return an observable\", function () {\r\n      collection['Path'] = '/workspaces/project'\r\n      expect(typeof collection.Remove([0, 1])).to.be.eq('object');\r\n    });\r\n  });\r\n  describe('#Move()', () => {\r\n    it(\"should return an observable\", function () {\r\n      expect(typeof collection.Move(1, '/workspaces/Project')).to.be.eq('object');\r\n    });\r\n  });\r\n  describe('#Move()', () => {\r\n    it(\"should return an observable\", function () {\r\n      collection['Path'] = '/workspaces/project'\r\n      expect(typeof collection.Move([0, 1], '/workspaces/Project')).to.be.eq('object');\r\n    });\r\n  });\r\n  describe('#Copy()', () => {\r\n    it(\"should return an observable\", function () {\r\n      expect(typeof collection.Copy(1, '/workspaces/Project')).to.be.eq('object');\r\n    });\r\n  });\r\n  describe('#Copy()', () => {\r\n    it(\"should return an observable\", function () {\r\n      collection['Path'] = '/workspaces/project'\r\n      expect(typeof collection.Copy([0, 1], '/workspaces/Project')).to.be.eq('object');\r\n    });\r\n  });\r\n  describe('#AllowedChildTypes()', () => {\r\n    it(\"should return an observable\", function () {\r\n      collection['Path'] = '/workspaces/project';\r\n      expect(typeof collection.AllowedChildTypes()).to.be.eq('object');\r\n    });\r\n  });\r\n  describe('#AllowedChildTypes()', () => {\r\n    it(\"should return an observable\", function () {\r\n      collection['Path'] = '/workspaces/project';\r\n      expect(typeof collection.AllowedChildTypes({ select: 'Name' })).to.be.eq('object');\r\n    });\r\n  });\r\n});"],"sourceRoot":"/source/"}