{"version":3,"sources":["test/ContentTypeTests.ts"],"names":[],"mappings":";AACA,+BAA4C,qBAAqB,CAAC,CAAA;AAClE,MAAY,IAAI,WAAM,MAAM,CAAC,CAAA;AAE7B,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;AAE3B,QAAQ,CAAC,cAAc,EAAE;IACrB,QAAQ,CAAC,iBAAiB,EAAE;QACxB,MAAM,EAAE,GAAG,IAAI,2BAAY,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;QAC/C,EAAE,CAAC,4CAA4C,EAAE;YAC7C,MAAM,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,UAAU,CAAC,2BAAY,CAAC,cAAc,CAAC,CAAC;QAChE,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;IACH,QAAQ,CAAC,UAAU,EAAE;QACjB,MAAM,OAAO,GAAG,IAAI,2BAAY,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QAC7C,EAAE,CAAC,sCAAsC,EAAE;YACvC,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,UAAU,CAAC,2BAAY,CAAC,OAAO,CAAC,CAAC;QAC9D,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;IACH,QAAQ,CAAC,OAAO,EAAE;QACd,MAAM,IAAI,GAAG,IAAI,2BAAY,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACvC,EAAE,CAAC,sCAAsC,EAAE;YACvC,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,UAAU,CAAC,2BAAY,CAAC,IAAI,CAAC,CAAC;QACxD,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;IACH,QAAQ,CAAC,gBAAgB,EAAE;QACvB,MAAM,OAAO,GAAG,4BAAa,CAAC,SAAS,CAAC,CAAC;QACzC,EAAE,CAAC,sCAAsC,EAAE;YACvC,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,UAAU,CAAC,2BAAY,CAAC,OAAO,CAAC,CAAC;QAC9D,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC","file":"test/ContentTypeTests.js","sourcesContent":["///<reference path=\"../node_modules/@types/mocha/index.d.ts\"/>\r\nimport { ContentTypes, CreateContent } from '../src/ContentTypes';\r\nimport * as Chai from 'chai';\r\nimport * as sinon from 'sinon';\r\nconst expect = Chai.expect;\r\n\r\ndescribe('ContentTypes', () => {\r\n    describe('#GenericContent', function(){\r\n        const gc = new ContentTypes.GenericContent({});\r\n        it('should return a GenericContent type object', function(){\r\n            expect(gc).to.be.an.instanceof(ContentTypes.GenericContent);\r\n        });\r\n    });\r\n    describe('#Article', function(){\r\n        const article = new ContentTypes.Article({});\r\n        it('should return an Article type object', function(){\r\n            expect(article).to.be.an.instanceof(ContentTypes.Article);\r\n        });\r\n    });\r\n    describe('#Task', function(){\r\n        const task = new ContentTypes.Task({});\r\n        it('should return an Article type object', function(){\r\n            expect(task).to.be.an.instanceof(ContentTypes.Task);\r\n        });\r\n    });\r\n    describe('#CreateContent', function(){\r\n        const content = CreateContent('Article');\r\n        it('should return an Article type object', function(){\r\n            expect(content).to.be.an.instanceof(ContentTypes.Article);\r\n        });\r\n    });\r\n});"],"sourceRoot":"/source/"}