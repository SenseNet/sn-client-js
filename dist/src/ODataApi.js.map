{"version":3,"sources":["src/ODataApi.ts"],"names":[],"mappings":"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","file":"src/ODataApi.js","sourcesContent":["import { ODataHelper } from './ODataHelper';\r\nimport { Content } from './Content';\r\nimport 'isomorphic-fetch';\r\nimport * as Rx from '@reactivex/rxjs';\r\nconst { ajax } = Rx.Observable;\r\n\r\n/**\r\n * This module contains methods and classes for sending requests and getting responses from the Content Repository through OData REST API. \r\n * \r\n * Following methods return Rxjs Observables which are made from the ajax requests' promises. Action methods like Delete or Rename on Content calls this methods,\r\n * gets their responses as Observables and returns them so that you can subscribe them in your code.\r\n */\r\nexport module ODataApi {\r\n    /**\r\n     * Constant to hold the service token. By default it is OData.svc but before you start developing with sn-client-js check the related config in your Sense/Net portal's\r\n     * web.config. If there's no ```ODataServiceToken``` config it fallbcks to the default so you also have to use the default 'OData.svc' in your TypeScript or JavaScript code.\r\n     * If it has a value in the web.config use the same value as your service token on client-side.\r\n     */\r\n    export const ODATA_SERVICE_TOKEN = () => {\r\n        if (typeof window !== 'undefined' && typeof window['serviceToken'] !== 'undefined') {\r\n            return `${window['serviceToken']}`;\r\n        }\r\n        else {\r\n            return '/OData.svc';\r\n        }\r\n    };\r\n    export const ROOT_URL = () => {\r\n        if (typeof window !== 'undefined' && typeof window['siteUrl'] !== 'undefined') {\r\n            return `${window['siteUrl']}/${ODATA_SERVICE_TOKEN()}`;\r\n        }\r\n        else {\r\n            return ODATA_SERVICE_TOKEN();\r\n        }\r\n    };\r\n    export const crossDomainParam = () => {\r\n        if (typeof window !== 'undefined' && typeof window['siteUrl'] !== 'undefined') {\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * Method to get a Content from the Content Repository through OData REST API.\r\n     * \r\n     * This method creates an Observable, sends an ajax request to the server and convert the reponse to promise which will be the argument of the Observable.\r\n     * @params options {ODataRequestOptions} Object with the params of the ajax request.\r\n     * @returns {Observable} Returns an Rxjs observable that you can subscribe of in your code.\r\n     */\r\n    export let GetContent = (options: ODataRequestOptions) => {\r\n        let Observable = Rx.Observable;\r\n        let promise: Promise<any> = fetch(`${ROOT_URL()}${options.path}${ODataHelper.buildUrlParamString(options.params)}`);\r\n        let source = Observable.fromPromise(promise);\r\n        return source;\r\n    }\r\n    /**\r\n     * Method to fetch children of a Content from the Content Repository through OData REST API.\r\n     * \r\n     * This method creates an Observable, sends an ajax request to the server and convert the reponse to promise which will be the argument of the Observable.\r\n     * @params options {ODataRequestOptions} Object with the params of the ajax request.\r\n     * @returns {Observable} Returns an Rxjs observable that you can subscribe of in your code.\r\n     */\r\n    export const FetchContent = (options: ODataRequestOptions) =>\r\n        ajax({ url: `${ROOT_URL()}${options.path}${ODataHelper.buildUrlParamString(options.params)}`, crossDomain: crossDomainParam(), method: 'GET' });\r\n\r\n    export const CreateContent = (path: string, content: Content) => {\r\n        let contentItem = { __contentType: content.Type };\r\n        for (let prop in content) {\r\n            if (prop !== 'Type') {\r\n                contentItem[prop] = content[prop];\r\n            }\r\n        }\r\n        return ajax({\r\n            url: `${ROOT_URL()}${ODataHelper.getContentURLbyPath(path)}`,\r\n            method: 'POST',\r\n            crossDomain: crossDomainParam(),\r\n            body: `models=[${JSON.stringify(contentItem)}]`\r\n        });\r\n    }\r\n    /**\r\n     * Method to delete a Content from the Content Repository through OData REST API.\r\n     * \r\n     * This method creates an Observable, sends an ajax request to the server and convert the reponse to promise which will be the argument of the Observable.\r\n     * @params id {number} Id of the Content that will be deleted.\r\n     * @params permanent {boolean} Determines whether the Content should be moved to the Trash or be deleted permanently.\r\n     * @returns {Observable} Returns an Rxjs observable that you can subscribe of in your code.\r\n     */\r\n    export const DeleteContent = (id: number, permanent: boolean) => ajax({\r\n        url: `${ROOT_URL()}/content(${id})/Delete`,\r\n        method: 'POST',\r\n        crossDomain: crossDomainParam(),\r\n        body: JSON.stringify({ 'permanent': permanent })\r\n    });\r\n    /**\r\n     * Method to modify a single or multiple fields of a Content through OData REST API.\r\n     * \r\n     * This method creates an Observable, sends an ajax request to the server and convert the reponse to promise which will be the argument of the Observable.\r\n     * @params id {number} Id of the Content that will be modified.\r\n     * @params fields {Object} Contains the modifiable fieldnames as keys and their values.\r\n     * @returns {Observable} Returns an Rxjs observable that you can subscribe of in your code.\r\n     */\r\n    export const PatchContent = (id: number, fields: Object) => ajax({\r\n            url: `${ROOT_URL()}/content(${id})`,\r\n            method: 'PATCH',\r\n            responseType: 'json',\r\n            crossDomain: crossDomainParam(),\r\n            body: `models=[${JSON.stringify(fields)}]`\r\n        })\r\n    /**\r\n     * Method to set multiple fields of a Content and clear the rest through OData REST API.\r\n     * \r\n     * This method creates an Observable, sends an ajax request to the server and convert the reponse to promise which will be the argument of the Observable.\r\n     * @params id {number} Id of the Content that will be modified.\r\n     * @params fields {Object} Contains the modifiable fieldnames as keys and their values.\r\n     * @returns {Observable} Returns an Rxjs observable that you can subscribe of in your code.\r\n     */\r\n    export const PutContent = (id: number, fields: Object) => ajax({\r\n            url: `${ROOT_URL()}/content(${id})`,\r\n            method: 'PUT',\r\n            responseType: 'json',\r\n            crossDomain: crossDomainParam(),\r\n            body: `models=[${JSON.stringify(fields)}]`\r\n        })\r\n    /**\r\n     * Creates a wrapper function for a callable custom OData action.\r\n     * \r\n     * This method creates an Observable, sends an ajax request to the server and convert the reponse to promise which will be the argument of the Observable.\r\n     * @params action {CustomAction} A CustomAction configuration object.\r\n     * @params options {IODataParams} An object that holds the config of the ajax request like urlparameters or data.\r\n     * @returns {Observable} Returns an Rxjs observable that you can subscribe of in your code.\r\n     */\r\n    export const CreateCustomAction = (action: CustomAction, options?: IODataParams) => {\r\n        let cacheParam = (action.noCache) ? '' : '&nocache=' + new Date().getTime();\r\n        let path = '';\r\n        if (typeof action.id !== 'undefined') {\r\n            path = `${ROOT_URL()}${ODataHelper.getContentUrlbyId(action.id)}/${action.name}`;\r\n        }\r\n        else {\r\n            path = `${ROOT_URL()}${ODataHelper.getContentURLbyPath(action.path)}/${action.name}`;\r\n        }\r\n        if (cacheParam.length > 0) {\r\n            path = `${path}?${cacheParam}`\r\n        }\r\n\r\n        if (path.indexOf('OData.svc(') > -1) {\r\n            const start = path.indexOf('(');\r\n            path = path.slice(0, start) + '/' + path.slice(start);\r\n            console.log(path);\r\n        }\r\n\r\n        let body = action.params.length > 0 ? JSON.stringify(options.data) : '';\r\n\r\n        if (typeof action.isAction === 'undefined' || !action.isAction) {\r\n            return ajax({\r\n                url: `${path}${ODataHelper.buildUrlParamString(action.params)}`,\r\n                method: 'GET',\r\n                responseType: 'json',\r\n                crossDomain: crossDomainParam(),\r\n            })\r\n        }\r\n        else {\r\n            if (typeof options !== 'undefined' && typeof options.data !== 'undefined') {\r\n                return ajax({\r\n                    url: `${path}`,\r\n                    method: 'POST',\r\n                    crossDomain: crossDomainParam(),\r\n                    body: JSON.stringify(options.data)\r\n                });\r\n            }\r\n            else {\r\n                return ajax({\r\n                    url: `${path}`,\r\n                    method: 'POST',\r\n                    crossDomain: crossDomainParam()\r\n                });\r\n            }\r\n        }\r\n    }\r\n    export const Upload = (path: string, data: Object, creation: boolean) => {\r\n        let Observable = Rx.Observable;\r\n        let url = `${ROOT_URL()}${ODataHelper.getContentURLbyPath(path)}/Upload`;\r\n        if (creation) {\r\n            url = `${url}?create=1`;\r\n        }\r\n        else {\r\n            url = url;\r\n        }\r\n        let promise: Promise<any> = fetch(url, JSON.stringify(data));\r\n        let source = Observable.fromPromise(promise);\r\n        return source;\r\n    }\r\n\r\n    export const Login = (action: CustomAction, options?: IODataParams) => {\r\n        let cacheParam = (action.noCache) ? '' : '&nocache=' + new Date().getTime();\r\n        let rootUrl = ROOT_URL();\r\n        let path = `${rootUrl}/('Root')/Login`;\r\n        if (cacheParam.length > 0) {\r\n            path = `${path}?${cacheParam}`\r\n        }\r\n\r\n        let body = action.params.length > 0 ? JSON.stringify(options.data) : '';\r\n\r\n        if (typeof options !== 'undefined' && typeof options.data !== 'undefined') {\r\n            return ajax({\r\n                url: `${path}`,\r\n                method: 'POST',\r\n                crossDomain: crossDomainParam(),\r\n                body: JSON.stringify(options.data)\r\n            });\r\n        }\r\n        else {\r\n            return ajax({\r\n                url: `${path}`,\r\n                method: 'POST',\r\n                crossDomain: crossDomainParam()\r\n            });\r\n        }\r\n    }\r\n\r\n    export const Logout = (action: CustomAction, options?: IODataParams) => {\r\n        let cacheParam = (action.noCache) ? '' : '&nocache=' + new Date().getTime();\r\n        let path = `${ROOT_URL()}/('Root')/Logout`;\r\n        if (cacheParam.length > 0) {\r\n            path = `${path}?${cacheParam}`\r\n        }\r\n\r\n        let body = action.params.length > 0 ? JSON.stringify(options.data) : '';\r\n\r\n        if (typeof options !== 'undefined' && typeof options.data !== 'undefined') {\r\n            return ajax({\r\n                url: `${path}`,\r\n                method: 'POST',\r\n                crossDomain: crossDomainParam(),\r\n                body: JSON.stringify(options.data)\r\n            });\r\n        }\r\n        else {\r\n            return ajax({\r\n                url: `${path}`,\r\n                method: 'POST',\r\n                crossDomain: crossDomainParam()\r\n            });\r\n        }\r\n    }\r\n\r\n    export class ODataRequestOptions {\r\n        path: string;\r\n        params: ODataParams[];\r\n        async: boolean;\r\n        type: string;\r\n        success: Function;\r\n        error: Function;\r\n        complete: Function;\r\n\r\n        constructor(options: IODataRequestOptions) {\r\n            this.params = options.params || [];\r\n            this.path = `${options.path}`;\r\n            this.async = options.async || true;\r\n            this.type = options.type || 'GET';\r\n            this.success = options.success;\r\n            this.error = options.error;\r\n            this.complete = options.complete;\r\n        }\r\n    }\r\n\r\n    export interface IODataRequestOptions {\r\n        path: string;\r\n        params?: ODataParams[];\r\n        async?: boolean;\r\n        type?: string;\r\n        success?: Function;\r\n        error?: Function;\r\n        complete?: Function;\r\n    }\r\n\r\n    /**\r\n     * Type of the OData option Object. Contains the possible OData params as properties.\r\n     */\r\n    export class ODataParams {\r\n        select: string | string[];\r\n        expand: string | string[] = null;\r\n        orderby: string | string[];\r\n        top: string;\r\n        skip: string;\r\n        filter: string;\r\n        format: string;\r\n        inlinecount: string;\r\n        query: string;\r\n        metadata: string;\r\n        data: Object;\r\n\r\n        constructor(options: IODataParams) {\r\n            this.select = options.select;\r\n            this.expand = options.expand;\r\n            this.orderby = options.orderby;\r\n            this.top = options.top;\r\n            this.skip = options.skip;\r\n            this.filter = options.filter;\r\n            this.format = options.filter;\r\n            this.inlinecount = options.inlinecount;\r\n            this.query = options.query;\r\n            this.metadata = options.metadata;\r\n            this.data = options.data || [];\r\n        }\r\n    }\r\n\r\n    export interface IODataParams {\r\n        select?: string | string[];\r\n        expand?: string | string[];\r\n        orderby?: string | string[];\r\n        top?: string;\r\n        skip?: string;\r\n        filter?: string;\r\n        format?: string;\r\n        inlinecount?: string;\r\n        query?: string;\r\n        metadata?: string;\r\n        data?: Object;\r\n    }\r\n\r\n    export class CustomAction {\r\n        name: string;\r\n        id: number;\r\n        path: string;\r\n        params: string[] = [];\r\n        requiredParams: string[] = [];\r\n        isAction: boolean = false;\r\n        noCache: boolean = false;\r\n        constructor(options: ICustomActionOptions) {\r\n            this.name = options.name;\r\n            this.id = options.id;\r\n            this.path = options.path;\r\n            this.isAction = options.isAction || false;\r\n            this.noCache = options.noCache || false;\r\n            if (options.params) {\r\n                for (let i = 0; i < options.params.length; i++) {\r\n                    this.params.push(options.params[i]);\r\n                }\r\n            }\r\n            if (options.requiredParams) {\r\n                for (let i = 0; i < options.requiredParams.length; i++) {\r\n                    this.params.push(options.requiredParams[i]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    interface ICustomActionOptions {\r\n        name: string;\r\n        id?: number;\r\n        path?: string;\r\n        params?: string[];\r\n        requiredParams?: string[];\r\n        isAction?: boolean;\r\n        noCache?: boolean;\r\n    }\r\n}"],"sourceRoot":"/source/"}