{"version":3,"sources":["src/ODataAPIActionObservables.ts"],"names":[],"mappings":"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","file":"src/ODataAPIActionObservables.js","sourcesContent":["import * as Rx from '@reactivex/rxjs';\r\nimport { ODataHelper } from './ODataHelper';\r\nimport { Content } from './Content';\r\nimport { ODataApi } from './ODataApi';\r\nimport 'isomorphic-fetch';\r\nconst { ajax } = Rx.Observable;\r\nimport { Value, Properties } from 'ts-json-properties';\r\n\r\n/**\r\n * This module contains methods for sending requests and getting responses from the Content Repository through OData REST API. \r\n * \r\n * Following methods return Rxjs ActionObservables which are made from the ajax requests' promises. \r\n */\r\n\r\nexport module ODataApiActionObservables {\r\n    /**\r\n     * Constant to hold the service token. By default it is OData.svc but before you start developing with sn-client-js check the related config in your Sense/Net portal's\r\n     * web.config. If there's no ```ODataServiceToken``` config it fallbcks to the default so you also have to use the default 'OData.svc' in your TypeScript or JavaScript code.\r\n     * If it has a value in the web.config use the same value as your service token on client-side.\r\n     */\r\n    export const ODATA_SERVICE_TOKEN = () => {\r\n        if (typeof window !== 'undefined' && typeof window['serviceToken'] !== 'undefined') {\r\n            return `${window['serviceToken']}`;\r\n        }\r\n        else {\r\n            return '/OData.svc';\r\n        }\r\n    };\r\n    export const ROOT_URL = () => {\r\n        if (typeof window !== 'undefined' && typeof window['siteUrl'] !== 'undefined') {\r\n            return `${window['siteUrl']}${ODATA_SERVICE_TOKEN()}`;\r\n        }\r\n        else {\r\n            return ODATA_SERVICE_TOKEN();\r\n        }\r\n    };\r\n    export const crossDomainParam = () => {\r\n        if (typeof window !== 'undefined' && typeof window['siteUrl'] !== 'undefined') {\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * Method to get a Content from the Content Repository through OData REST API.\r\n     * \r\n     * This method creates an Observable, sends an ajax request to the server and convert the reponse to promise which will be the argument of the Observable.\r\n     * @params options {ODataRequestOptions} Object with the params of the ajax request.\r\n     * @returns {Observable} Returns an Rxjs observable that you can subscribe of in your code.\r\n     */\r\n    export const GetContent = (options: ODataApi.ODataRequestOptions) => ajax({ url: `${options.path}${ODataHelper.buildUrlParamString(options.params)}`, crossDomain: crossDomainParam(), method: 'GET' });\r\n    /**\r\n     * Method to fetch children of a Content from the Content Repository through OData REST API.\r\n     * \r\n     * This method returns an ActionObservable, sends an ajax request to the server and convert the reponse to promise which will be the argument of the ActionObservable.\r\n     * @params path {string} Path of the parent Content.\r\n     * @params params {string} A string with the neccessarry request url params.\r\n     * @returns {ActionObservable} Returns an ActionObservable.\r\n     */\r\n    export const FetchContent = (path: string, params: string) => ajax({ url: `${ROOT_URL()}${path}${params}`, crossDomain: crossDomainParam(), method: 'GET' });\r\n    // TODO: id-val is menjen a create\r\n    /**\r\n     * Method to create a Content as a children of a given parent Content in the Content Repository through OData REST API.\r\n     * \r\n     * This method returns an ActionObservable, sends an ajax request to the server and convert the reponse to promise which will be the argument of the ActionObservable.\r\n     * @params path {string} Path of the parent Content.\r\n     * @params content {Content} A Content object with the saveable fields as properties.\r\n     * @returns {ActionObservable} Returns an ActionObservable.\r\n     */\r\n    export const CreateContent = (path: string, content: Content) => ajax({\r\n        url: `${ROOT_URL()}${path}`,\r\n        method: 'POST',\r\n        crossDomain: crossDomainParam(),\r\n        body: `models=[${JSON.stringify(content)}]`\r\n    });\r\n    /**\r\n     * Method to delete a Content from the Content Repository through OData REST API.\r\n     * \r\n     * This method returns an ActionObservable, sends an ajax request to the server and convert the reponse to promise which will be the argument of the ActionObservable.\r\n     * @params id {number} Id of the Content.\r\n     * @params permanently {boolean} Defines whether the Content should be moved to the Trash or deleted permanently.\r\n     * @returns {ActionObservable} Returns an ActionObservable.\r\n     */\r\n    export const DeleteContent = (id: number, permanently: boolean = false) => ajax({\r\n        url: `${ROOT_URL()}/content(${id})/Delete`,\r\n        method: 'POST',\r\n        crossDomain: crossDomainParam(),\r\n        body: JSON.stringify({ 'permanent': permanently })\r\n    });\r\n\r\n    /**\r\n     * Method to modify a single or multiple fields of a Content through OData REST API.\r\n     * \r\n     * This method returns an ActionObservable, sends an ajax request to the server and convert the reponse to promise which will be the argument of the ActionObservable.\r\n     * @params id {number} Id of the Content.\r\n     * @params fields {Object} An Object with the fieldsnames and values that must be saved.\r\n     * @returns {ActionObservable} Returns an ActionObservable.\r\n     */\r\n    export const PatchContent = (id: number, fields: Object) =>\r\n        ajax({\r\n            url: `${ROOT_URL()}/content(${id})`,\r\n            method: 'PATCH',\r\n            responseType: 'json',\r\n            crossDomain: crossDomainParam(),\r\n            body: `models=[${JSON.stringify(fields)}]`\r\n        })\r\n    /**\r\n     * Method to set multiple fields of a Content and clear the rest through OData REST API.\r\n     * \r\n     * This method returns an ActionObservable, sends an ajax request to the server and convert the reponse to promise which will be the argument of the ActionObservable.\r\n     * @params id {number} Id of the Content.\r\n     * @params fields {Object} An Object with the fieldsnames and values that must be saved.\r\n     * @returns {ActionObservable} Returns an ActionObservable.\r\n     */\r\n    export const PutContent = (id: number, fields: Object) =>\r\n        ajax({\r\n            url: `${ROOT_URL()}/content(${id})`,\r\n            method: 'PUT',\r\n            responseType: 'json',\r\n            crossDomain: crossDomainParam(),\r\n            body: `models=[${JSON.stringify(fields)}]`\r\n        })\r\n    // TODO: custom action\r\n    /**\r\n     * Creates a wrapper function for a callable custom OData action.\r\n     * \r\n     * This method creates an Observable, sends an ajax request to the server and convert the reponse to promise which will be the argument of the Observable.\r\n     * @params action {CustomAction} A CustomAction configuration object.\r\n     * @params options {IODataParams} An object that holds the config of the ajax request like urlparameters or data.\r\n     * @returns {Observable} Returns an Rxjs observable that you can subscribe of in your code.\r\n     */\r\n    export const CreateCustomAction = (action: ODataApi.CustomAction, options?: ODataApi.IODataParams) => {\r\n        let cacheParam = (action.noCache) ? '' : '&nocache=' + new Date().getTime();\r\n        let path = '';\r\n        if (typeof action.id !== 'undefined') {\r\n            path = `${ROOT_URL()}${ODataHelper.getContentUrlbyId(action.id)}/${action.name}`;\r\n        }\r\n        else {\r\n            path = `${ROOT_URL()}${ODataHelper.getContentURLbyPath(action.path)}/${action.name}`;\r\n        }\r\n        if (cacheParam.length > 0) {\r\n            path = `${path}?${cacheParam}`\r\n        }\r\n\r\n        if (path.indexOf('OData.svc(') > -1) {\r\n            const start = path.indexOf('(');\r\n            path = path.slice(0, start) + '/' + path.slice(start);\r\n            console.log(path);\r\n        }\r\n\r\n        let body = action.params.length > 0 ? JSON.stringify(options.data) : '';\r\n\r\n        if (typeof action.isAction === 'undefined' || !action.isAction) {\r\n            return ajax({\r\n                url: `${path}${ODataHelper.buildUrlParamString(action.params)}`,\r\n                method: 'GET',\r\n                responseType: 'json',\r\n                crossDomain: crossDomainParam(),\r\n            })\r\n        }\r\n        else {\r\n            if (typeof options !== 'undefined' && typeof options.data !== 'undefined') {\r\n                return ajax({\r\n                    url: `${path}`,\r\n                    method: 'POST',\r\n                    crossDomain: crossDomainParam(),\r\n                    body: JSON.stringify(options.data)\r\n                });\r\n            }\r\n            else {\r\n                return ajax({\r\n                    url: `${path}`,\r\n                    method: 'POST',\r\n                    crossDomain: crossDomainParam()\r\n                });\r\n            }\r\n        }\r\n    }\r\n    export const Login = (action: ODataApi.CustomAction, options?: ODataApi.IODataParams) => {\r\n        let cacheParam = (action.noCache) ? '' : '&nocache=' + new Date().getTime();\r\n        let rootUrl = ROOT_URL();\r\n        let path = `${rootUrl}/('Root')/Login`;\r\n        if (cacheParam.length > 0) {\r\n            path = `${path}?${cacheParam}`\r\n        }\r\n\r\n        let body = action.params.length > 0 ? JSON.stringify(options.data) : '';\r\n\r\n        if (typeof options !== 'undefined' && typeof options.data !== 'undefined') {\r\n            return ajax({\r\n                url: `${path}`,\r\n                method: 'POST',\r\n                crossDomain: crossDomainParam(),\r\n                body: JSON.stringify(options.data)\r\n            });\r\n        }\r\n        else {\r\n            return ajax({\r\n                url: `${path}`,\r\n                method: 'POST',\r\n                crossDomain: crossDomainParam()\r\n            });\r\n        }\r\n    }\r\n\r\n    export const Logout = (action: ODataApi.CustomAction, options?: ODataApi.IODataParams) => {\r\n        let cacheParam = (action.noCache) ? '' : '&nocache=' + new Date().getTime();\r\n        let path = `${ROOT_URL()}/('Root')/Logout`;\r\n        if (cacheParam.length > 0) {\r\n            path = `${path}?${cacheParam}`\r\n        }\r\n\r\n        let body = action.params.length > 0 ? JSON.stringify(options.data) : '';\r\n\r\n        if (typeof options !== 'undefined' && typeof options.data !== 'undefined') {\r\n            return ajax({\r\n                url: `${path}`,\r\n                method: 'POST',\r\n                crossDomain: crossDomainParam(),\r\n                body: JSON.stringify(options.data)\r\n            });\r\n        }\r\n        else {\r\n            return ajax({\r\n                url: `${path}`,\r\n                method: 'POST',\r\n                crossDomain: crossDomainParam()\r\n            });\r\n        }\r\n    }\r\n\r\n    export const Upload = (path: string, data: Object, creation: boolean) => {\r\n        let Observable = Rx.Observable;\r\n        let url = `${ODataHelper.getContentURLbyPath(path)}/Upload`;\r\n        if (creation) {\r\n            url = `${url}?create=1`;\r\n        }\r\n        let promise: Promise<any> = fetch(url, JSON.stringify(data));\r\n        let source = Observable.fromPromise(promise);\r\n        return source;\r\n    }\r\n}"],"sourceRoot":"/source/"}