{"version":3,"sources":["src/Schema.ts"],"names":[],"mappings":"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","file":"src/Schema.js","sourcesContent":["import { FieldSettings } from './FieldSettings';\r\n/**\r\n * Module for ContentType schemas.\r\n *\r\n * A Content Type Definition in Sense/Net is an xml-format configuration file for defining Content Types. The xml configuration (CTD) holds information about the types name and description\r\n * properties that control how content of this type look and behave (icon, preview generation, indexing), set of fields, etc. This information about the type and its Fields helps us for example\r\n * building forms. Based on the Field definitions we can render a Field with its DisplayName as a label or validate the Field on save by its validation related configs.\r\n *\r\n * This module provides us description of this Content schemas in Typesript.\r\n *\r\n * The ```Schema``` class represents an object that holds the basic information about the Content Type (name, icon, ect.) and an array of its ```FieldSettings``` and their full configuration.\r\n */\r\n\r\nexport module Schemas {\r\n    /**\r\n     * Class that represents a Schema.\r\n     *\r\n     * It represents an object that holds the basic information about the Content Type (name, icon, ect.) and an array of its ```FieldSettings``` and their full configuration.\r\n     */\r\n    export class Schema {\r\n        Icon: string;\r\n        DisplayName: string;\r\n        Description: string;\r\n        AllowIndexing: boolean;\r\n        AllowIncrementalNaming: boolean;\r\n        AllowedChildTypes: string[];\r\n        FieldSettings: FieldSettings.FieldSetting[];\r\n        /**\r\n         * @constructs Schema\r\n         * @param options {Object} An object implementing ISchemaOptions interface;\r\n         */\r\n        constructor(options: ISchemaOptions) {\r\n            this.Icon = options.Icon;\r\n            this.DisplayName = options.DisplayName;\r\n            this.Description = options.Description;\r\n            this.FieldSettings = options.FieldSettings;\r\n            this.AllowIndexing = options.AllowIndexing;\r\n            this.AllowIncrementalNaming = options.AllowIncrementalNaming;\r\n            this.AllowedChildTypes = options.AllowedChildTypes;\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Interface for classes that represent a Schema.\r\n    *\r\n    * @interface ISchemaOptions\r\n    */\r\n    export interface ISchemaOptions {\r\n        Icon?: string;\r\n        DisplayName?: string;\r\n        Description?: string;\r\n        AllowIndexing?: boolean;\r\n        AllowIncrementalNaming?: boolean;\r\n        AllowedChildTypes?: string[];\r\n        FieldSettings?: FieldSettings.FieldSetting[];\r\n    }\r\n\r\n    /**\r\n     * Method that returns the Content Type Definition of the ContentType\r\n     * @returns {Schema}\r\n     */\r\n    export function ContentTypeCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-ContentType,DisplayName',\r\n            Description: '$Ctd-ContentType,Description',\r\n            Icon: 'ContentType',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: [],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.IntegerFieldSetting({\r\n                name: 'Id',\r\n                displayName: 'Id',\r\n                description: 'A unique ID for the Content.',\r\n                readOnly: true,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.IntegerFieldSetting({\r\n                name: 'ParentId',\r\n                displayName: 'Id',\r\n                description: 'A unique ID for the Content.',\r\n                readOnly: true,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.IntegerFieldSetting({\r\n                name: 'VersionId',\r\n                readOnly: true,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.NullFieldSetting({\r\n                name: 'Type',\r\n                displayName: 'NodeType',\r\n                description: 'The type of the Node in the Repository.',\r\n                readOnly: true,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'Name',\r\n                displayName: 'Uri name',\r\n                readOnly: false,\r\n                compulsory: true,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.IntegerFieldSetting({\r\n                name: 'CreatedById',\r\n                readOnly: true,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.IntegerFieldSetting({\r\n                name: 'ModifiedById',\r\n                readOnly: true,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.NullFieldSetting({\r\n                name: 'Version',\r\n                displayName: 'Version',\r\n                description: 'Latest version number.',\r\n                readOnly: true,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'Path',\r\n                displayName: 'Path',\r\n                description: 'Content type path.',\r\n                readOnly: true,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.IntegerFieldSetting({\r\n                name: 'Depth',\r\n                readOnly: true,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.NullFieldSetting({\r\n                name: 'IsSystemContent',\r\n                displayName: 'System Content',\r\n                description: 'This field is true if content is in a system folder/trash or the content is a system folder/file.',\r\n                readOnly: true,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'HandlerName',\r\n                displayName: 'Handler Name',\r\n                description: 'Fully Qualified Name.',\r\n                readOnly: true,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'ParentTypeName',\r\n                displayName: 'Parent Type Name',\r\n                description: 'Name of the parent content type.',\r\n                readOnly: true,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'DisplayName',\r\n                displayName: 'Name',\r\n                description: 'User friendly name of the content type.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.LongTextFieldSetting({\r\n                name: 'Description',\r\n                displayName: 'Description',\r\n                description: 'Longer description of the content type.',\r\n                readOnly: true,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'Icon',\r\n                displayName: 'Icon',\r\n                description: 'Content type icon.',\r\n                readOnly: true,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.BinaryFieldSetting({\r\n                isText: true,\r\n                name: 'Binary',\r\n                displayName: 'Binary',\r\n                description: 'The content type definition in XML format.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                defaultValue: '<?xml version=\"1.0\" encoding=\"utf-8\"?>\\<ContentType name=\"MyType\" parentType=\"GenericContent\" handler=\"SenseNet.ContentRepository.GenericContent\" xmlns=\"http://schemas.sensenet.com/SenseNet/ContentRepository/ContentTypeDefinition\">\\  <DisplayName>MyType</DisplayName>\\  <Description></Description>\\  <Icon>Content</Icon>\\  <AllowIncrementalNaming>true</AllowIncrementalNaming>\\  <AllowedChildTypes>ContentTypeName1,ContentTypeName2</AllowedChildTypes>\\  <Fields>\\    <Field name=\"ShortTextField\" type=\"ShortText\">\\      <DisplayName>ShortTextField</DisplayName>\\      <Description></Description>\\      <Configuration>\\        <MaxLength>100</MaxLength>\\        <MinLength>0</MinLength>\\        <Regex>[a-zA-Z0-9]*$</Regex>\\        <ReadOnly>false</ReadOnly>\\        <Compulsory>false</Compulsory>\\        <DefaultValue></DefaultValue>\\        <VisibleBrowse>Show|Hide|Advanced</VisibleBrowse>\\        <VisibleEdit>Show|Hide|Advanced</VisibleEdit>\\        <VisibleNew>Show|Hide|Advanced</VisibleNew>\\      </Configuration>\\    </Field>\\    <Field name=\"LongTextField\" type=\"LongText\">\\      <DisplayName>LongTextField</DisplayName>\\      <Description></Description>\\      <Configuration>\\        <MaxLength>100</MaxLength>\\        <MinLength>0</MinLength>\\        <TextType>LongText|RichText|AdvancedRichText</TextType>\\        <ReadOnly>false</ReadOnly>\\        <Compulsory>false</Compulsory>\\        <DefaultValue></DefaultValue>\\        <VisibleBrowse>Show|Hide|Advanced</VisibleBrowse>\\        <VisibleEdit>Show|Hide|Advanced</VisibleEdit>\\        <VisibleNew>Show|Hide|Advanced</VisibleNew>\\      </Configuration>\\    </Field>\\    <Field name=\"NumberField\" type=\"Number\">\\      <DisplayName>NumberField</DisplayName>\\      <Description></Description>\\      <Configuration>\\        <MinValue>0</MinValue>\\        <MaxValue>100.5</MaxValue>\\        <Digits>2</Digits>\\        <ReadOnly>false</ReadOnly>\\        <Compulsory>false</Compulsory>\\        <DefaultValue></DefaultValue>\\        <VisibleBrowse>Show|Hide|Advanced</VisibleBrowse>\\        <VisibleEdit>Show|Hide|Advanced</VisibleEdit>\\        <VisibleNew>Show|Hide|Advanced</VisibleNew>\\      </Configuration>\\    </Field>\\    <Field name=\"IntegerField\" type=\"Integer\">\\      <DisplayName>IntegerField</DisplayName>\\      <Description></Description>\\      <Configuration>\\        <MinValue>0</MinValue>\\        <MaxValue>100</MaxValue>\\        <ReadOnly>false</ReadOnly>\\        <Compulsory>false</Compulsory>\\        <DefaultValue></DefaultValue>\\        <VisibleBrowse>Show|Hide|Advanced</VisibleBrowse>\\        <VisibleEdit>Show|Hide|Advanced</VisibleEdit>\\        <VisibleNew>Show|Hide|Advanced</VisibleNew>\\      </Configuration>\\    </Field>\\    <Field name=\"BooleanField\" type=\"Boolean\">\\      <DisplayName>BooleanField</DisplayName>\\      <Description></Description>\\      <Configuration>\\        <ReadOnly>false</ReadOnly>\\        <Compulsory>false</Compulsory>\\        <DefaultValue></DefaultValue>\\        <VisibleBrowse>Show|Hide|Advanced</VisibleBrowse>\\        <VisibleEdit>Show|Hide|Advanced</VisibleEdit>\\        <VisibleNew>Show|Hide|Advanced</VisibleNew>\\      </Configuration>\\    </Field>\\    <Field name=\"ChoiceField\" type=\"Choice\">\\      <DisplayName>ChoiceField</DisplayName>\\      <Description></Description>\\      <Configuration>\\        <AllowMultiple>false</AllowMultiple>\\        <AllowExtraValue>false</AllowExtraValue>\\        <Options>\\          <Option selected=\"true\">1</Option>\\          <Option>2</Option>\\        </Options>\\        <ReadOnly>false</ReadOnly>\\        <Compulsory>false</Compulsory>\\        <DefaultValue></DefaultValue>\\        <VisibleBrowse>Show|Hide|Advanced</VisibleBrowse>\\        <VisibleEdit>Show|Hide|Advanced</VisibleEdit>\\        <VisibleNew>Show|Hide|Advanced</VisibleNew>\\      </Configuration>\\    </Field>\\    <Field name=\"DateTimeField\" type=\"DateTime\">\\      <DisplayName>DateTimeField</DisplayName>\\      <Description></Description>\\      <Configuration>\\        <DateTimeMode>DateAndTime</DateTimeMode>\\        <Precision>Second</Precision>\\        <ReadOnly>false</ReadOnly>\\        <Compulsory>false</Compulsory>\\        <DefaultValue></DefaultValue>\\        <VisibleBrowse>Show|Hide|Advanced</VisibleBrowse>\\        <VisibleEdit>Show|Hide|Advanced</VisibleEdit>\\        <VisibleNew>Show|Hide|Advanced</VisibleNew>\\      </Configuration>\\    </Field>\\    <Field name=\"ReferenceField\" type=\"Reference\">\\      <DisplayName>ReferenceField</DisplayName>\\      <Description></Description>\\      <Configuration>\\        <AllowMultiple>true</AllowMultiple>\\        <AllowedTypes>\\          <Type>Type1</Type>\\          <Type>Type2</Type>\\        </AllowedTypes>\\        <SelectionRoot>\\          <Path>/Root/Path1</Path>\\          <Path>/Root/Path2</Path>\\        </SelectionRoot>\\        <DefaultValue>/Root/Path1,/Root/Path2</DefaultValue>\\        <ReadOnly>false</ReadOnly>\\        <Compulsory>false</Compulsory>\\        <VisibleBrowse>Show|Hide|Advanced</VisibleBrowse>\\        <VisibleEdit>Show|Hide|Advanced</VisibleEdit>\\        <VisibleNew>Show|Hide|Advanced</VisibleNew>\\      </Configuration>\\    </Field>\\    <Field name=\"BinaryField\" type=\"Binary\">\\      <DisplayName>BinaryField</DisplayName>\\      <Description></Description>\\      <Configuration>\\        <IsText>true</IsText>\\        <ReadOnly>false</ReadOnly>\\        <Compulsory>false</Compulsory>\\        <DefaultValue></DefaultValue>\\        <VisibleBrowse>Show|Hide|Advanced</VisibleBrowse>\\        <VisibleEdit>Show|Hide|Advanced</VisibleEdit>\\        <VisibleNew>Show|Hide|Advanced</VisibleNew>\\      </Configuration>\\    </Field>\\  </Fields>\\</ContentType>',\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ReferenceFieldSetting({\r\n                name: 'CreatedBy',\r\n                displayName: 'Created by',\r\n                description: 'Content creator.',\r\n                readOnly: true,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.DateTimeFieldSetting({\r\n                dateTimeMode: FieldSettings.DateTimeMode.DateAndTime,\r\n                name: 'CreationDate',\r\n                displayName: 'Creation date',\r\n                description: 'Content creation date.',\r\n                readOnly: true,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ReferenceFieldSetting({\r\n                name: 'ModifiedBy',\r\n                displayName: 'Modified by',\r\n                description: 'Content was last modified by the given user.',\r\n                readOnly: true,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.DateTimeFieldSetting({\r\n                name: 'ModificationDate',\r\n                displayName: 'Modification date',\r\n                description: 'Content was last modified on the given date.',\r\n                readOnly: true,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.NullFieldSetting({\r\n                name: 'EnableLifespan',\r\n                displayName: 'Enable Lifespan handling',\r\n                readOnly: true,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the GenericContent\r\n     * @returns {Schema}\r\n     */\r\n    export function GenericContentCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-GenericContent,DisplayName',\r\n            Description: '$Ctd-GenericContent,Description',\r\n            Icon: 'Content',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: [],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.IntegerFieldSetting({\r\n                name: 'Id',\r\n                displayName: 'Id',\r\n                description: 'Unique Id for the content.',\r\n                readOnly: true,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.IntegerFieldSetting({\r\n                name: 'ParentId',\r\n                displayName: 'Parent Id',\r\n                description: 'Id of the parent content.',\r\n                readOnly: true,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.IntegerFieldSetting({\r\n                name: 'OwnerId',\r\n                displayName: 'Owner Id',\r\n                description: 'Id of the owner.',\r\n                readOnly: true,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ReferenceFieldSetting({\r\n                name: 'Owner',\r\n                displayName: 'Owner',\r\n                description: 'Content owner.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.IntegerFieldSetting({\r\n                name: 'VersionId',\r\n                displayName: 'Version Id',\r\n                description: 'Database row Id of current version.',\r\n                readOnly: true,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.NullFieldSetting({\r\n                name: 'Type',\r\n                displayName: 'Content Type Name',\r\n                description: 'Content type of the node in the repository.',\r\n                readOnly: true,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'Icon',\r\n                displayName: 'Icon',\r\n                description: 'Icon',\r\n                readOnly: true,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'Name',\r\n                displayName: 'Name',\r\n                description: 'Specify a name that will appear in the address bar of the browser.',\r\n                readOnly: false,\r\n                compulsory: true,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0,\r\n                controlHint: 'sn:Name'\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.IntegerFieldSetting({\r\n                name: 'CreatedById',\r\n                displayName: 'Created By (Id)',\r\n                description: 'Id of creator.',\r\n                readOnly: true,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.IntegerFieldSetting({\r\n                name: 'ModifiedById',\r\n                displayName: 'Last Modified By (Id)',\r\n                description: 'Id of last modifier.',\r\n                readOnly: true,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.NullFieldSetting({\r\n                name: 'Version',\r\n                displayName: 'Version',\r\n                description: 'Version number.',\r\n                readOnly: true,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Advanced,\r\n                visibleEdit: FieldSettings.FieldVisibility.Advanced,\r\n                visibleNew: FieldSettings.FieldVisibility.Advanced,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'Path',\r\n                displayName: 'Path',\r\n                description: 'Content path in the repository.',\r\n                readOnly: true,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.IntegerFieldSetting({\r\n                name: 'Depth',\r\n                displayName: 'Tree Depth',\r\n                description: 'Content level in the tree. Root level is 0.',\r\n                readOnly: true,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.NullFieldSetting({\r\n                name: 'IsSystemContent',\r\n                displayName: 'System Content',\r\n                description: 'This field is true if content is in a system folder/trash or the content is a system folder/file.',\r\n                readOnly: true,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.NullFieldSetting({\r\n                name: 'IsFolder',\r\n                displayName: 'Folder',\r\n                description: 'This field is true if content can contain other content.',\r\n                readOnly: true,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'DisplayName',\r\n                displayName: 'Display Name',\r\n                description: 'Content name. You can set any name you prefer without any restrictions.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0,\r\n                controlHint: 'sn:DisplayName'\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.LongTextFieldSetting({\r\n                name: 'Description',\r\n                displayName: 'Description',\r\n                description: 'Description of the content.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0,\r\n                controlHint: 'sn:RichText'\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.NullFieldSetting({\r\n                name: 'Hidden',\r\n                displayName: 'Hidden',\r\n                description: 'If checked, content will not show up in navigation.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.IntegerFieldSetting({\r\n                name: 'Index',\r\n                displayName: 'Index',\r\n                description: 'Content order in navigation. Numbers closer to 0 will appear first.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Advanced,\r\n                visibleEdit: FieldSettings.FieldVisibility.Advanced,\r\n                visibleNew: FieldSettings.FieldVisibility.Advanced,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.NullFieldSetting({\r\n                name: 'EnableLifespan',\r\n                displayName: 'Enable Lifespan',\r\n                description: 'Specify whether you want to define starting and end date for the validity of this content.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.DateTimeFieldSetting({\r\n                dateTimeMode: FieldSettings.DateTimeMode.DateAndTime,\r\n                name: 'ValidFrom',\r\n                displayName: 'Valid From',\r\n                description: 'This content will appear on the date you set if lifespan handling is enabled for this content.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.DateTimeFieldSetting({\r\n                dateTimeMode: FieldSettings.DateTimeMode.DateAndTime,\r\n                name: 'ValidTill',\r\n                displayName: 'Valid Till',\r\n                description: 'This content will disappear on the date you set if lifespan handling is enabled for this content.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.NullFieldSetting({\r\n                name: 'AllowedChildTypes',\r\n                displayName: 'Allowed child types',\r\n                description: 'You can get and set which content types are explicitly allowed to be created under this content. It is a local setting.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.NullFieldSetting({\r\n                name: 'EffectiveAllowedChildTypes',\r\n                displayName: 'Effective allowed child types',\r\n                description: 'You can get which content types are effective allowed to be created under this content. If there is no local setting, the global setting takes effect.',\r\n                readOnly: true,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ChoiceFieldSetting({\r\n                allowExtraValue: false,\r\n                allowMultiple: false,\r\n                options: [\r\n                    {Value: '0', Text: 'Inherited', Enabled: true, Selected: true },\r\n                    {Value: '1', Text: 'None', Enabled: true, Selected: false },\r\n                    {Value: '2', Text: 'Major only', Enabled: true, Selected: false },\r\n                    {Value: '3', Text: 'Major and minor', Enabled: true, Selected: false }\r\n                ],\r\n                displayChoice: FieldSettings.DisplayChoice.DropDown,\r\n                enumTypeName: '',\r\n                name: 'VersioningMode',\r\n                displayName: 'Versioning Mode For Current Content',\r\n                description: 'It shows the versioning mode of the current content.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ChoiceFieldSetting({\r\n                allowExtraValue: false,\r\n                allowMultiple: false,\r\n                options: [\r\n                    {Value: '0', Text: 'Inherited', Enabled: true, Selected: true },\r\n                    {Value: '1', Text: 'None', Enabled: true, Selected: false },\r\n                    {Value: '2', Text: 'Major only', Enabled: true, Selected: false },\r\n                    {Value: '3', Text: 'Major and minor', Enabled: true, Selected: false }\r\n                ],\r\n                displayChoice: FieldSettings.DisplayChoice.DropDown,\r\n                enumTypeName: '',\r\n                name: 'InheritableVersioningMode',\r\n                displayName: 'Version history',\r\n                description: 'Specify whether the system should create a new version whenever you create or modify a content below this content.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0,\r\n                controlHint: 'sn:VersioningModeChoice'\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ReferenceFieldSetting({\r\n                name: 'CreatedBy',\r\n                displayName: 'Created by',\r\n                description: 'Content creator.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.DateTimeFieldSetting({\r\n                dateTimeMode: FieldSettings.DateTimeMode.DateAndTime,\r\n                name: 'CreationDate',\r\n                displayName: 'Creation date',\r\n                description: 'Content creation date.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ReferenceFieldSetting({\r\n                name: 'ModifiedBy',\r\n                displayName: 'Modified By',\r\n                description: 'Content was last modified by this user.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.DateTimeFieldSetting({\r\n                dateTimeMode: FieldSettings.DateTimeMode.DateAndTime,\r\n                name: 'ModificationDate',\r\n                displayName: 'Modification Date',\r\n                description: 'Content was last modified on this date.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ChoiceFieldSetting({\r\n                allowExtraValue: false,\r\n                allowMultiple: false,\r\n                options: [\r\n                    {Value: '0', Text: 'Inherited', Enabled: true, Selected: true },\r\n                    {Value: '1', Text: 'Off', Enabled: true, Selected: false },\r\n                    {Value: '2', Text: 'On', Enabled: true, Selected: false }\r\n                ],\r\n                displayChoice: FieldSettings.DisplayChoice.DropDown,\r\n                enumTypeName: '',\r\n                name: 'ApprovingMode',\r\n                displayName: 'Content Approval For Current Content',\r\n                description: 'It shows the approval mode of the current content.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ChoiceFieldSetting({\r\n                allowExtraValue: false,\r\n                allowMultiple: false,\r\n                options: [\r\n                    {Value: '0', Text: 'Inherited', Enabled: true, Selected: true },\r\n                    {Value: '1', Text: 'Off', Enabled: true, Selected: false },\r\n                    {Value: '2', Text: 'On', Enabled: true, Selected: false }\r\n                ],\r\n                displayChoice: FieldSettings.DisplayChoice.DropDown,\r\n                enumTypeName: '',\r\n                name: 'InheritableApprovingMode',\r\n                displayName: 'Content approval',\r\n                description: 'Specify whether new or changed content below the current one should remain in a draft state until they have been approved.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0,\r\n                controlHint: 'sn:ApprovingModeChoice'\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.NullFieldSetting({\r\n                name: 'Locked',\r\n                displayName: 'Locked',\r\n                description: 'It shows whether the content is checked out or not.',\r\n                readOnly: true,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ReferenceFieldSetting({\r\n                name: 'CheckedOutTo',\r\n                displayName: 'Checked Out To',\r\n                description: 'The user currently locking the content.',\r\n                readOnly: true,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.NullFieldSetting({\r\n                name: 'TrashDisabled',\r\n                displayName: 'Disable Trash',\r\n                description: 'You can disable trash for this content and its children. If set, you can not restore deleted content.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                defaultValue: 'false',\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ChoiceFieldSetting({\r\n                allowExtraValue: false,\r\n                allowMultiple: false,\r\n                options: [\r\n                    {Value: '0', Text: 'Finalized', Enabled: true, Selected: false },\r\n                    {Value: '1', Text: 'Creating', Enabled: true, Selected: false },\r\n                    {Value: '2', Text: 'Modifying', Enabled: true, Selected: false },\r\n                    {Value: '3', Text: 'ModifyingLocked', Enabled: true, Selected: false }\r\n                ],\r\n                displayChoice: FieldSettings.DisplayChoice.DropDown,\r\n                enumTypeName: 'SenseNet.ContentRepository.Storage.ContentSavingState',\r\n                name: 'SavingState',\r\n                displayName: 'Saving state',\r\n                description: 'State of multi-step saving.',\r\n                readOnly: true,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Advanced,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.LongTextFieldSetting({\r\n                name: 'ExtensionData',\r\n                displayName: 'Extension data',\r\n                description: 'You can set extra data in this field which is useful when extending a content.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ReferenceFieldSetting({\r\n                allowMultiple: false,\r\n                name: 'BrowseApplication',\r\n                displayName: 'Reference To Browse Application',\r\n                description: 'Set this, if you would like to override the default browse application.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.NullFieldSetting({\r\n                name: 'Approvable',\r\n                displayName: 'Approvable By Current User',\r\n                description: 'This fileld is true if the content is in \\'pending\\' state and can be approved by the current user.',\r\n                readOnly: true,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.NullFieldSetting({\r\n                name: 'IsTaggable',\r\n                displayName: 'Enable Tagging',\r\n                description: 'Specify whether you would like to enable tagging capability for this content.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                defaultValue: 'false',\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.LongTextFieldSetting({\r\n                name: 'Tags',\r\n                displayName: 'Tags',\r\n                description: 'List of tags and creators of them separated by commas.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0,\r\n                controlHint: 'sn:TagList'\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.NullFieldSetting({\r\n                name: 'IsRateable',\r\n                displayName: 'Enable Rating',\r\n                description: 'Specify whether you would like to enable rating capability for this content.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                defaultValue: 'false',\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'RateStr',\r\n                displayName: 'Raw value of rating',\r\n                description: '',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.NumberFieldSetting({\r\n                name: 'RateAvg',\r\n                displayName: 'Average rate',\r\n                description: 'Average rate of the content.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.IntegerFieldSetting({\r\n                name: 'RateCount',\r\n                displayName: 'Rate count',\r\n                description: 'Count of rates.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.RatingFieldSetting({\r\n                range: 5,\r\n                split: 1,\r\n                name: 'Rate',\r\n                displayName: 'Rate',\r\n                description: '',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.NullFieldSetting({\r\n                name: 'Publishable',\r\n                displayName: 'Publishable By Current User',\r\n                description: 'This fileld is true if the content can be published by the current user.',\r\n                readOnly: true,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ReferenceFieldSetting({\r\n                allowMultiple: true,\r\n                name: 'Versions',\r\n                displayName: 'Versions',\r\n                description: 'Content version history.',\r\n                readOnly: true,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.LongTextFieldSetting({\r\n                name: 'CheckInComments',\r\n                displayName: 'Checkin comments',\r\n                description: 'Comments for a new version.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.LongTextFieldSetting({\r\n                name: 'RejectReason',\r\n                displayName: 'Reject reason',\r\n                description: 'The reason why the content was rejected.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ReferenceFieldSetting({\r\n                allowMultiple: false,\r\n                allowedTypes: ['Workspace'],\r\n                name: 'Workspace',\r\n                displayName: 'Workspace',\r\n                description: 'The container workspace of the content.',\r\n                readOnly: true,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'BrowseUrl',\r\n                displayName: 'Browse url',\r\n                description: '',\r\n                readOnly: true,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the ContentLink\r\n     * @returns {Schema}\r\n     */\r\n    export function ContentLinkCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-ContentLink,DisplayName',\r\n            Description: '$Ctd-ContentLink,Description',\r\n            Icon: 'Folder',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: [],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ReferenceFieldSetting({\r\n                allowMultiple: false,\r\n                name: 'Link',\r\n                displayName: 'Linked content',\r\n                description: 'Set this reference to the Content to link.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the File\r\n     * @returns {Schema}\r\n     */\r\n    export function FileCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-File,DisplayName',\r\n            Description: '$Ctd-File,Description',\r\n            Icon: 'File',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: [],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.BinaryFieldSetting({\r\n                name: 'Binary',\r\n                displayName: 'Binary',\r\n                description: 'The binary content of the document.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.NumberFieldSetting({\r\n                name: 'Size',\r\n                displayName: 'Size',\r\n                description: 'Size of the binary document.',\r\n                readOnly: true,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.NumberFieldSetting({\r\n                name: 'FullSize',\r\n                displayName: 'Full size',\r\n                description: 'The total amount of space the Document occupies, counting all versions.',\r\n                readOnly: true,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.IntegerFieldSetting({\r\n                name: 'PageCount',\r\n                displayName: 'Page count',\r\n                description: 'Read-only field for storing the number of pages in the document. It is filled by the document preview generator.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                defaultValue: '-4',\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'MimeType',\r\n                displayName: 'Document MIME type',\r\n                readOnly: true,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.LongTextFieldSetting({\r\n                name: 'Shapes',\r\n                displayName: 'Shapes',\r\n                description: 'Stores data used for document preview (redaction, highlight, annotation shapes). This value can be modified by the document preview plugin.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Advanced,\r\n                visibleEdit: FieldSettings.FieldVisibility.Advanced,\r\n                visibleNew: FieldSettings.FieldVisibility.Advanced,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.LongTextFieldSetting({\r\n                name: 'PageAttributes',\r\n                displayName: 'Page attributes',\r\n                description: 'Stores data used for document preview (for example page rotation). This value can be modified by the document preview plugin.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Advanced,\r\n                visibleEdit: FieldSettings.FieldVisibility.Advanced,\r\n                visibleNew: FieldSettings.FieldVisibility.Advanced,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'Watermark',\r\n                displayName: 'Watermark',\r\n                description: 'The text that is displayed as a watermark on the document preview. The format can be set by modifying the Document Preview settings.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Advanced,\r\n                visibleEdit: FieldSettings.FieldVisibility.Advanced,\r\n                visibleNew: FieldSettings.FieldVisibility.Advanced,\r\n                defaultOrder: 0\r\n            }));\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the ContentView\r\n     * @returns {Schema}\r\n     */\r\n    export function ContentViewCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-ContentView,DisplayName',\r\n            Description: '$Ctd-ContentView,Description',\r\n            Icon: 'ContentView',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: [],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the Contract\r\n     * @returns {Schema}\r\n     */\r\n    export function ContractCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-Contract,DisplayName',\r\n            Description: '$Ctd-Contract,Description',\r\n            Icon: 'Document',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: [],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'ContractId',\r\n                displayName: 'Contract ID',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ReferenceFieldSetting({\r\n                selectionRoots: ['/Root/Sites/Default_Site/workspaces/Sales'],\r\n                name: 'Project',\r\n                displayName: 'Project',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ChoiceFieldSetting({\r\n                allowExtraValue: true,\r\n                allowMultiple: false,\r\n                options: [\r\n                    {Value: 'hu', Text: 'Magyar', Enabled: true, Selected: true },\r\n                    {Value: 'en', Text: 'English', Enabled: true, Selected: false },\r\n                    {Value: 'de', Text: 'Deutsch', Enabled: true, Selected: false }\r\n                ],\r\n                displayChoice: FieldSettings.DisplayChoice.DropDown,\r\n                enumTypeName: '',\r\n                name: 'Language',\r\n                displayName: 'Language',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ReferenceFieldSetting({\r\n                allowMultiple: false,\r\n                allowedTypes: ['User'],\r\n                selectionRoots: ['/Root/IMS'],\r\n                name: 'Responsee',\r\n                displayName: 'Account',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'Lawyer',\r\n                displayName: 'Lawyer',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.LongTextFieldSetting({\r\n                name: 'Keywords',\r\n                displayName: 'Keywords',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ReferenceFieldSetting({\r\n                allowMultiple: true,\r\n                selectionRoots: ['/Root/Sites/Default_Site/workspaces/Sales'],\r\n                name: 'RelatedDocs',\r\n                displayName: 'Related documents',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the DynamicJsonContent\r\n     * @returns {Schema}\r\n     */\r\n    export function DynamicJsonContentCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: 'Dynamic JSON content',\r\n            Description: '',\r\n            Icon: 'Settings',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: [],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the ExecutableFile\r\n     * @returns {Schema}\r\n     */\r\n    export function ExecutableFileCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-ExecutableFile,DisplayName',\r\n            Description: '$Ctd-ExecutableFile,Description',\r\n            Icon: 'Application',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: [],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the FieldControlTemplate\r\n     * @returns {Schema}\r\n     */\r\n    export function FieldControlTemplateCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-FieldControlTemplate,DisplayName',\r\n            Description: '$Ctd-FieldControlTemplate,Description',\r\n            Icon: 'Content',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: [],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the HtmlTemplate\r\n     * @returns {Schema}\r\n     */\r\n    export function HtmlTemplateCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-HtmlTemplate,DisplayName',\r\n            Description: '$Ctd-HtmlTemplate,Description',\r\n            Icon: 'File',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: [],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.LongTextFieldSetting({\r\n                name: 'TemplateText',\r\n                displayName: 'Template text',\r\n                description: 'Shows the contents of the html file as a text.',\r\n                readOnly: true,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Advanced,\r\n                visibleEdit: FieldSettings.FieldVisibility.Advanced,\r\n                visibleNew: FieldSettings.FieldVisibility.Advanced,\r\n                defaultOrder: 0\r\n            }));\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the Image\r\n     * @returns {Schema}\r\n     */\r\n    export function ImageCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-Image,DisplayName',\r\n            Description: '$Ctd-Image,Description',\r\n            Icon: 'Image',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: [],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.LongTextFieldSetting({\r\n                name: 'Keywords',\r\n                displayName: 'Keywords',\r\n                description: 'Keywords describing the image.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.DateTimeFieldSetting({\r\n                dateTimeMode: FieldSettings.DateTimeMode.DateAndTime,\r\n                name: 'DateTaken',\r\n                displayName: 'Date taken',\r\n                description: 'Date the photo was taken, if applicable.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.IntegerFieldSetting({\r\n                name: 'Width',\r\n                displayName: 'Width',\r\n                readOnly: true,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.IntegerFieldSetting({\r\n                name: 'Height',\r\n                displayName: 'Height',\r\n                readOnly: true,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the PreviewImage\r\n     * @returns {Schema}\r\n     */\r\n    export function PreviewImageCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-PreviewImage,DisplayName',\r\n            Description: '$Ctd-PreviewImage,Description',\r\n            Icon: 'Image',\r\n            AllowIndexing: false,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: [],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the OrderForm\r\n     * @returns {Schema}\r\n     */\r\n    export function OrderFormCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-OrderForm,DisplayName',\r\n            Description: '$Ctd-OrderForm,Description',\r\n            Icon: 'Document',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: [],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'CompanyName',\r\n                displayName: 'Company Name',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'OrderFormId',\r\n                displayName: 'Order Form Id',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.LongTextFieldSetting({\r\n                name: 'CompanySeat',\r\n                displayName: 'Company Seat',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'RepresentedBy',\r\n                displayName: 'Represented by',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'ContactEmailAddress',\r\n                displayName: 'Contact email address',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'ContactPhoneNr',\r\n                displayName: 'Contact phone nr',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the Settings\r\n     * @returns {Schema}\r\n     */\r\n    export function SettingsCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-Settings,DisplayName',\r\n            Description: '$Ctd-Settings,Description',\r\n            Icon: 'Settings',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: [],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.NullFieldSetting({\r\n                name: 'GlobalOnly',\r\n                displayName: 'Global only',\r\n                description: 'Switching this ON will prevent the creation of local settings with the same name preventing others to gain access to the contents of this settings file through inheritance.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the ADSettings\r\n     * @returns {Schema}\r\n     */\r\n    export function ADSettingsCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-ADSettings,DisplayName',\r\n            Description: '$Ctd-ADSettings,Description',\r\n            Icon: 'Settings',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: [],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the IndexingSettings\r\n     * @returns {Schema}\r\n     */\r\n    export function IndexingSettingsCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-IndexingSettings,DisplayName',\r\n            Description: '$Ctd-IndexingSettings,Description',\r\n            Icon: 'Settings',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: [],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.NullFieldSetting({\r\n                name: 'TextExtractorInstances',\r\n                displayName: 'Text extractor instances',\r\n                description: 'Dynamically generated text extractor instance collection.',\r\n                readOnly: true,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the LoggingSettings\r\n     * @returns {Schema}\r\n     */\r\n    export function LoggingSettingsCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-LoggingSettings,DisplayName',\r\n            Description: '$Ctd-LoggingSettings,Description',\r\n            Icon: 'Settings',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: [],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the PortalSettings\r\n     * @returns {Schema}\r\n     */\r\n    export function PortalSettingsCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-PortalSettings,DisplayName',\r\n            Description: '$Ctd-PortalSettings,Description',\r\n            Icon: 'Settings',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: [],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the SystemFile\r\n     * @returns {Schema}\r\n     */\r\n    export function SystemFileCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-SystemFile,DisplayName',\r\n            Description: '$Ctd-SystemFile,Description',\r\n            Icon: 'File',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: [],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the MasterPage\r\n     * @returns {Schema}\r\n     */\r\n    export function MasterPageCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-MasterPage,DisplayName',\r\n            Description: '$Ctd-MasterPage,Description',\r\n            Icon: 'MasterPage',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: [],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the PageTemplate\r\n     * @returns {Schema}\r\n     */\r\n    export function PageTemplateCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-PageTemplate,DisplayName',\r\n            Description: '$Ctd-PageTemplate,Description',\r\n            Icon: 'PageTemplate',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: [],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ReferenceFieldSetting({\r\n                allowedTypes: ['MasterPage'],\r\n                name: 'MasterPageNode',\r\n                displayName: 'MasterPage node',\r\n                description: 'Master page reference. Only for internal use.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the Resource\r\n     * @returns {Schema}\r\n     */\r\n    export function ResourceCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-Resource,DisplayName',\r\n            Description: '$Ctd-Resource,Description',\r\n            Icon: 'Resource',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: [],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.NumberFieldSetting({\r\n                name: 'Downloads',\r\n                displayName: 'Downloads',\r\n                description: 'The number of downloads.',\r\n                readOnly: true,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the UserControl\r\n     * @returns {Schema}\r\n     */\r\n    export function UserControlCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-UserControl,DisplayName',\r\n            Description: '$Ctd-UserControl,Description',\r\n            Icon: 'File',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: [],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the ViewBase\r\n     * @returns {Schema}\r\n     */\r\n    export function ViewBaseCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-ViewBase,DisplayName',\r\n            Description: '$Ctd-ViewBase,Description',\r\n            Icon: 'File',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: [],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.NullFieldSetting({\r\n                name: 'IsDefault',\r\n                displayName: 'Default',\r\n                description: 'Whether this is the default view on the parent ContentList.',\r\n                readOnly: true,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Advanced,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ReferenceFieldSetting({\r\n                allowMultiple: false,\r\n                name: 'Template',\r\n                displayName: 'Markup template',\r\n                description: 'The Xslt template used to generate the view.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                defaultValue: '/Root/System/SystemPlugins/Templates/ListView.xslt',\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.LongTextFieldSetting({\r\n                name: 'FilterXml',\r\n                displayName: 'Filtering',\r\n                description: 'Define filtering rules for the view.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ChoiceFieldSetting({\r\n                allowExtraValue: false,\r\n                allowMultiple: false,\r\n                options: [\r\n                    {Value: '0', Text: 'Default', Enabled: true, Selected: false },\r\n                    {Value: '1', Text: 'Enabled', Enabled: true, Selected: false },\r\n                    {Value: '2', Text: 'Disabled', Enabled: true, Selected: false }\r\n                ],\r\n                displayChoice: FieldSettings.DisplayChoice.DropDown,\r\n                enumTypeName: 'SenseNet.Search.FilterStatus',\r\n                name: 'EnableAutofilters',\r\n                displayName: 'Enable autofilters',\r\n                description: 'If autofilters are enabled system content will be filtered from the query.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ChoiceFieldSetting({\r\n                allowExtraValue: false,\r\n                allowMultiple: false,\r\n                options: [\r\n                    {Value: '0', Text: 'Default', Enabled: true, Selected: false },\r\n                    {Value: '1', Text: 'Enabled', Enabled: true, Selected: false },\r\n                    {Value: '2', Text: 'Disabled', Enabled: true, Selected: false }\r\n                ],\r\n                displayChoice: FieldSettings.DisplayChoice.DropDown,\r\n                enumTypeName: 'SenseNet.Search.FilterStatus',\r\n                name: 'EnableLifespanFilter',\r\n                displayName: 'Enable lifespan filter',\r\n                description: 'If lifespan filter is enabled only valid content will be in the result.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.IntegerFieldSetting({\r\n                name: 'QueryTop',\r\n                displayName: 'Top',\r\n                description: 'If you do not want to display all content please specify here a value greater than 0.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.IntegerFieldSetting({\r\n                name: 'QuerySkip',\r\n                displayName: 'Skip',\r\n                description: 'If you do not want to display the first several content please specify here a value greater than 0.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the ListView\r\n     * @returns {Schema}\r\n     */\r\n    export function ListViewCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-ListView,DisplayName',\r\n            Description: '$Ctd-ListView,Description',\r\n            Icon: 'File',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: [],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.LongTextFieldSetting({\r\n                name: 'Columns',\r\n                displayName: 'View composition',\r\n                description: 'Select the fields of the Content List to be displayed.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0,\r\n                controlHint: 'sn:ColumnSelector'\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'SortBy',\r\n                displayName: 'Sort by',\r\n                description: 'Select the column to sort by.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0,\r\n                controlHint: 'sn:SortingEditor'\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'GroupBy',\r\n                displayName: 'Group by',\r\n                description: 'Select the column to group by. This setting only works if the view template is capable of rendering grouped items.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0,\r\n                controlHint: 'sn:GroupingEditor'\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.NullFieldSetting({\r\n                name: 'Flat',\r\n                displayName: 'Flat',\r\n                description: 'Flatten contained content structure to a single list (display content from all depths).',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'MainScenario',\r\n                displayName: 'Main scenario',\r\n                description: 'Name of the scenario that is used for the list item menus. If you leave this empty, this will be the default \\'ListItem\\' scenario.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Advanced,\r\n                visibleNew: FieldSettings.FieldVisibility.Advanced,\r\n                defaultOrder: 0\r\n            }));\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the Video\r\n     * @returns {Schema}\r\n     */\r\n    export function VideoCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-Video,DisplayName',\r\n            Description: '$Ctd-Video,Description',\r\n            Icon: 'File',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: [],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.LongTextFieldSetting({\r\n                name: 'Keywords',\r\n                displayName: 'Keywords',\r\n                description: 'Add keywords',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the WorkflowDefinition\r\n     * @returns {Schema}\r\n     */\r\n    export function WorkflowDefinitionCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-WorkflowDefinition,DisplayName',\r\n            Description: '$Ctd-WorkflowDefinition,Description',\r\n            Icon: 'workflowdef',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: [],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.NullFieldSetting({\r\n                name: 'ContentWorkflow',\r\n                displayName: 'Content workflow',\r\n                description: 'True for workflow types that are related to one content (e.g. approval or printing). Related content must be an existing content.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.NullFieldSetting({\r\n                name: 'AssignableToContentList',\r\n                displayName: 'Assignable to content list',\r\n                description: 'Set this for workflow types that users should be able to assign to content lists (e.g. a Document Library).',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.NullFieldSetting({\r\n                name: 'AbortOnRelatedContentChange',\r\n                displayName: 'Abort on related content change',\r\n                description: 'If set to true workflow will be automatically aborted whenever the Related Content changes.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ChoiceFieldSetting({\r\n                allowExtraValue: false,\r\n                allowMultiple: false,\r\n                options: [\r\n                    {Value: '0', Text: 'Delete when completed', Enabled: true, Selected: false },\r\n                    {Value: '1', Text: 'Delete when completed or aborted', Enabled: true, Selected: false },\r\n                    {Value: '2', Text: 'Always keep', Enabled: true, Selected: false }\r\n                ],\r\n                displayChoice: FieldSettings.DisplayChoice.DropDown,\r\n                enumTypeName: 'SenseNet.Workflow.WorkflowDeletionStrategy',\r\n                name: 'DeleteInstanceAfterFinished',\r\n                displayName: 'Automatic deletion',\r\n                description: 'Automatic deletion of the workflow instance when it is finished. Choose the deletion method.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the Folder\r\n     * @returns {Schema}\r\n     */\r\n    export function FolderCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-Folder,DisplayName',\r\n            Description: '$Ctd-Folder,Description',\r\n            Icon: 'Folder',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: [],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the ADFolder\r\n     * @returns {Schema}\r\n     */\r\n    export function ADFolderCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-ADFolder,DisplayName',\r\n            Description: '$Ctd-ADFolder,Description',\r\n            Icon: 'Folder',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: ['User', 'RegisteredUser', 'Group', 'OrganizationalUnit', 'ADFolder'],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'SyncGuid',\r\n                displayName: 'SyncGuid',\r\n                description: 'GUID of corresponding AD object.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Advanced,\r\n                visibleEdit: FieldSettings.FieldVisibility.Advanced,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.DateTimeFieldSetting({\r\n                dateTimeMode: FieldSettings.DateTimeMode.DateAndTime,\r\n                name: 'LastSync',\r\n                displayName: 'LastSync',\r\n                description: 'Date of last synchronization.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Advanced,\r\n                visibleEdit: FieldSettings.FieldVisibility.Advanced,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the ArticleSection\r\n     * @returns {Schema}\r\n     */\r\n    export function ArticleSectionCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-ArticleSection,DisplayName',\r\n            Description: '$Ctd-ArticleSection,Description',\r\n            Icon: 'Folder',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: ['ArticleSection', 'Article'],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the ContentList\r\n     * @returns {Schema}\r\n     */\r\n    export function ContentListCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-ContentList,DisplayName',\r\n            Description: '$Ctd-ContentList,Description',\r\n            Icon: 'ContentList',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: [],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.LongTextFieldSetting({\r\n                name: 'ContentListDefinition',\r\n                displayName: 'List Definition',\r\n                description: 'XML definition for additional fields.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'DefaultView',\r\n                displayName: 'Default view',\r\n                description: 'The default View to use.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ReferenceFieldSetting({\r\n                allowMultiple: true,\r\n                allowedTypes: ['ListView'],\r\n                name: 'AvailableViews',\r\n                displayName: 'Available views',\r\n                description: 'Select global content list views here that you want to offer users to choose from.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ReferenceFieldSetting({\r\n                allowMultiple: true,\r\n                allowedTypes: ['FieldSettingContent'],\r\n                name: 'FieldSettingContents',\r\n                displayName: 'FieldSetting content',\r\n                readOnly: true,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ReferenceFieldSetting({\r\n                allowMultiple: true,\r\n                allowedTypes: ['FieldSettingContent'],\r\n                name: 'AvailableContentTypeFields',\r\n                displayName: 'Available ContentType Field content.',\r\n                readOnly: true,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'ListEmail',\r\n                displayName: 'Email address of Content List',\r\n                description: 'Emails sent to this address will be imported as Email content into the Document Library.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'ExchangeSubscriptionId',\r\n                displayName: 'Exchange Subscription Id',\r\n                description: 'Ctd-ContentListen-USExchangeSubscriptionId-Descriptione',\r\n                readOnly: true,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.NullFieldSetting({\r\n                name: 'OverwriteFiles',\r\n                displayName: 'Overwrite files with same name',\r\n                description: 'If checked new emails and attachments with the same name will overwrite existing items in list. Otherwise increment suffix is used in the name of new mail items.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ChoiceFieldSetting({\r\n                allowExtraValue: false,\r\n                allowMultiple: false,\r\n                options: [\r\n                    {Value: 'email', Text: 'Save all attachments as children of separate Email content', Enabled: true, Selected: true },\r\n                    {Value: 'root', Text: 'Save all attachments in root', Enabled: true, Selected: false },\r\n                    {Value: 'subject', Text: 'Save all attachments in folders grouped by subject', Enabled: true, Selected: false },\r\n                    {Value: 'sender', Text: 'Save all attachments in folders grouped by sender', Enabled: true, Selected: false }\r\n                ],\r\n                displayChoice: FieldSettings.DisplayChoice.DropDown,\r\n                enumTypeName: '',\r\n                name: 'GroupAttachments',\r\n                displayName: 'Group attachments',\r\n                description: 'Select the appropriate option to group attachment files under folders or email content or not.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.NullFieldSetting({\r\n                name: 'SaveOriginalEmail',\r\n                displayName: 'Save original email',\r\n                description: 'A separate .eml file will be created for every incoming email.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ReferenceFieldSetting({\r\n                allowMultiple: false,\r\n                selectionRoots: ['/Root/System/Schema/ContentTypes/GenericContent/Workflow/MailProcessorWorkflow'],\r\n                name: 'IncomingEmailWorkflow',\r\n                displayName: 'Incoming email workflow',\r\n                description: 'Select the workflow to be executed on every incoming email.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                defaultValue: '/Root/System/Schema/ContentTypes/GenericContent/Workflow/MailProcessorWorkflow',\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.NullFieldSetting({\r\n                name: 'OnlyFromLocalGroups',\r\n                displayName: 'Accept e-mails only from users in local groups',\r\n                description: 'If set, only users that are members of any local group are able to send e-mails to this library.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'InboxFolder',\r\n                displayName: 'Inbox folder',\r\n                description: 'A relative path of a folder to store incoming e-mails.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ReferenceFieldSetting({\r\n                allowMultiple: false,\r\n                allowedTypes: ['User'],\r\n                selectionRoots: ['/Root/IMS'],\r\n                name: 'OwnerWhenVisitor',\r\n                displayName: 'Owner of items created by visitor',\r\n                description: 'If a Visitor adds content to this list, this user will be set as the creator instead of the Visitor. This prevents visitors see each others\\' content.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                defaultValue: '/Root/IMS/BuiltIn/Portal/Admin',\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the Aspect\r\n     * @returns {Schema}\r\n     */\r\n    export function AspectCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-Aspect,DisplayName',\r\n            Description: '$Ctd-Aspect,Description',\r\n            Icon: 'Aspect',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: [],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.LongTextFieldSetting({\r\n                name: 'AspectDefinition',\r\n                displayName: 'Aspect definition',\r\n                description: 'Definition of the extension in XML format.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the ItemList\r\n     * @returns {Schema}\r\n     */\r\n    export function ItemListCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-ItemList,DisplayName',\r\n            Description: '$Ctd-ItemList,Description',\r\n            Icon: 'ContentList',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: [],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the CustomList\r\n     * @returns {Schema}\r\n     */\r\n    export function CustomListCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-CustomList,DisplayName',\r\n            Description: '$Ctd-CustomList,Description',\r\n            Icon: 'ContentList',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: ['ListItem'],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the EventList\r\n     * @returns {Schema}\r\n     */\r\n    export function EventListCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-EventList,DisplayName',\r\n            Description: '$Ctd-EventList,Description',\r\n            Icon: 'ContentList',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: ['CalendarEvent'],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ReferenceFieldSetting({\r\n                allowMultiple: false,\r\n                allowedTypes: ['Folder'],\r\n                name: 'RegistrationFolder',\r\n                displayName: 'Registration folder',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the Form\r\n     * @returns {Schema}\r\n     */\r\n    export function FormCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-Form,DisplayName',\r\n            Description: '$Ctd-Form,Description',\r\n            Icon: 'Form',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: ['FormItem'],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'TitleSubmitter',\r\n                displayName: 'Submitter Mail Title',\r\n                description: 'This is the title of the submitter mail.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.LongTextFieldSetting({\r\n                textType: FieldSettings.TextType.RichText,\r\n                name: 'AfterSubmitText',\r\n                displayName: 'AfterSubmitText',\r\n                description: 'This is the text displayed after the form is submitted.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0,\r\n                controlHint: 'sn:RichText'\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.LongTextFieldSetting({\r\n                name: 'EmailList',\r\n                displayName: 'Email List',\r\n                description: 'The list of email addresses to where a notification message containing submitted values are sent after submitting the form. The addresses should be separated by \";\" or \",\".',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'EmailFrom',\r\n                displayName: 'Email From',\r\n                description: 'This address is displayed in the \"From\" field of the notification email. Default is \"mailerservice@example.com\".',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'EmailFromSubmitter',\r\n                displayName: 'Submitter Email From',\r\n                description: 'This address is displayed in the \"From\" field of the user notification email. Default is \"mailerservice@example.com\".',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'EmailField',\r\n                displayName: 'Email Field',\r\n                description: 'The name of the field specified among ContentList fields containing the submitter\\'s email address. Ie.: \"#Email\" or \"#SubmitterEmail\".',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.LongTextFieldSetting({\r\n                textType: FieldSettings.TextType.RichText,\r\n                name: 'EmailTemplate',\r\n                displayName: 'EmailTemplate',\r\n                description: 'The template of the email message sent to the administrators. By default the template of notification email sent to the submitter is the same as the one sent to the recipients given in the email list above. Form content can be inserted with the \"{0}\" string.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0,\r\n                controlHint: 'sn:RichText'\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.LongTextFieldSetting({\r\n                textType: FieldSettings.TextType.RichText,\r\n                name: 'EmailTemplateSubmitter',\r\n                displayName: 'SubmitterEmailTemplate',\r\n                description: 'The template of the email message sent to the submitter. By default the template of notification email sent to the submitter is the same as the one sent to the recipients given in the email list above. Form content can be inserted with the \"{0}\" string.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0,\r\n                controlHint: 'sn:RichText'\r\n            }));\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the EventRegistrationForm\r\n     * @returns {Schema}\r\n     */\r\n    export function EventRegistrationFormCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-EventRegistrationForm,DisplayName',\r\n            Description: '$Ctd-EventRegistrationForm,Description',\r\n            Icon: 'Form',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: ['EventRegistrationFormItem'],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the ForumTopic\r\n     * @returns {Schema}\r\n     */\r\n    export function ForumTopicCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-ForumTopic,DisplayName',\r\n            Description: '$Ctd-ForumTopic,Description',\r\n            Icon: 'forumtopic',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: ['ForumEntry'],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the LinkList\r\n     * @returns {Schema}\r\n     */\r\n    export function LinkListCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-LinkList,DisplayName',\r\n            Description: '$Ctd-LinkList,Description',\r\n            Icon: 'ContentList',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: ['Link'],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the MemoList\r\n     * @returns {Schema}\r\n     */\r\n    export function MemoListCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-MemoList,DisplayName',\r\n            Description: '$Ctd-MemoList,Description',\r\n            Icon: 'ContentList',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: ['Memo'],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the Survey\r\n     * @returns {Schema}\r\n     */\r\n    export function SurveyCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-Survey,DisplayName',\r\n            Description: '$Ctd-Survey,Description',\r\n            Icon: 'ContentList',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: ['SurveyItem'],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ReferenceFieldSetting({\r\n                name: 'LandingPage',\r\n                displayName: 'Landing page',\r\n                description: '',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Advanced,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ReferenceFieldSetting({\r\n                name: 'PageContentView',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Advanced,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ReferenceFieldSetting({\r\n                name: 'InvalidSurveyPage',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Advanced,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.NullFieldSetting({\r\n                name: 'EnableNotificationMail',\r\n                displayName: 'Enable notification e-mail',\r\n                description: 'Enable sending notification e-mails.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'SenderAddress',\r\n                displayName: 'Sender Address',\r\n                description: 'The e-mail address which will appear in the From field of the message.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ReferenceFieldSetting({\r\n                allowMultiple: true,\r\n                allowedTypes: ['User','Group'],\r\n                selectionRoots: ['/Root/IMS'],\r\n                name: 'Evaluators',\r\n                displayName: 'Evaluators',\r\n                description: 'Users or groups who will receive a notification e-mail after the survey was filled and can be evaluated.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ReferenceFieldSetting({\r\n                name: 'MailTemplatePage',\r\n                displayName: 'Notification e-mail template file',\r\n                description: 'The path of the HTML file which gives the template of the notification e-mail.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Advanced,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.NullFieldSetting({\r\n                name: 'EnableMoreFilling',\r\n                displayName: 'Allow multiple responses',\r\n                description: 'Do You want to allow a user to submit this survey more than once?',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the Voting\r\n     * @returns {Schema}\r\n     */\r\n    export function VotingCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-Voting,DisplayName',\r\n            Description: '$Ctd-Voting,Description',\r\n            Icon: 'ContentList',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: ['VotingItem', 'Folder'],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ReferenceFieldSetting({\r\n                name: 'LandingPageContentView',\r\n                displayName: 'Landing page content view',\r\n                description: '',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Advanced,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ReferenceFieldSetting({\r\n                name: 'ResultPageContentView',\r\n                displayName: 'Result page content view',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Advanced,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ReferenceFieldSetting({\r\n                name: 'VotingPageContentView',\r\n                displayName: 'Voting Page Content View',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Advanced,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ReferenceFieldSetting({\r\n                name: 'CannotSeeResultContentView',\r\n                displayName: 'Cannot see result page',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Advanced,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.NullFieldSetting({\r\n                name: 'IsResultVisibleBefore',\r\n                displayName: 'Is Result Visible Before',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the SurveyList\r\n     * @returns {Schema}\r\n     */\r\n    export function SurveyListCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-SurveyList,DisplayName',\r\n            Description: '$Ctd-SurveyList,Description',\r\n            Icon: 'ContentList',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: true,\r\n            AllowedChildTypes: ['SurveyListItem', 'Folder'],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.LongTextFieldSetting({\r\n                name: 'RawJson',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.LongTextFieldSetting({\r\n                textType: FieldSettings.TextType.RichText,\r\n                name: 'IntroText',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.LongTextFieldSetting({\r\n                textType: FieldSettings.TextType.RichText,\r\n                name: 'OutroText',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ReferenceFieldSetting({\r\n                name: 'OutroRedirectLink',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ReferenceFieldSetting({\r\n                allowMultiple: false,\r\n                selectionRoots: [],\r\n                name: 'LandingPage',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.NullFieldSetting({\r\n                name: 'OnlySingleResponse',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.NullFieldSetting({\r\n                name: 'EnableNotificationMail',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.LongTextFieldSetting({\r\n                name: 'EmailList',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'EmailField',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'EmailFrom',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'MailSubject',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.LongTextFieldSetting({\r\n                textType: FieldSettings.TextType.RichText,\r\n                name: 'AdminEmailTemplate',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0,\r\n                controlHint: 'sn:RichText'\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.LongTextFieldSetting({\r\n                textType: FieldSettings.TextType.RichText,\r\n                name: 'SubmitterEmailTemplate',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0,\r\n                controlHint: 'sn:RichText'\r\n            }));\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the TaskList\r\n     * @returns {Schema}\r\n     */\r\n    export function TaskListCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-TaskList,DisplayName',\r\n            Description: '$Ctd-TaskList,Description',\r\n            Icon: 'ContentList',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: ['Task', 'ApprovalWorkflowTask', 'ExpenseClaimWorkflowTask'],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the Library\r\n     * @returns {Schema}\r\n     */\r\n    export function LibraryCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-Library,DisplayName',\r\n            Description: '$Ctd-Library,Description',\r\n            Icon: 'ContentList',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: [],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the DocumentLibrary\r\n     * @returns {Schema}\r\n     */\r\n    export function DocumentLibraryCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-DocumentLibrary,DisplayName',\r\n            Description: '$Ctd-DocumentLibrary,Description',\r\n            Icon: 'ContentList',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: ['Folder', 'File'],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the ImageLibrary\r\n     * @returns {Schema}\r\n     */\r\n    export function ImageLibraryCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-ImageLibrary,DisplayName',\r\n            Description: '$Ctd-ImageLibrary,Description',\r\n            Icon: 'ContentList',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: ['Folder', 'Image'],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ReferenceFieldSetting({\r\n                allowMultiple: false,\r\n                allowedTypes: ['Image'],\r\n                name: 'CoverImage',\r\n                displayName: 'Cover image',\r\n                description: 'Select cover image',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the ContentViews\r\n     * @returns {Schema}\r\n     */\r\n    export function ContentViewsCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-ContentViews,DisplayName',\r\n            Description: '$Ctd-ContentViews,Description',\r\n            Icon: 'Folder',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: ['ContentView', 'ContentViews'],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the Device\r\n     * @returns {Schema}\r\n     */\r\n    export function DeviceCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-Device,DisplayName',\r\n            Description: '$Ctd-Device,Description',\r\n            Icon: 'Device',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: [],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'UserAgentPattern',\r\n                displayName: 'User agent string',\r\n                description: 'A regular expression to match the user agent string of the browser.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the DiscussionForum\r\n     * @returns {Schema}\r\n     */\r\n    export function DiscussionForumCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-DiscussionForum,DisplayName',\r\n            Description: '$Ctd-DiscussionForum,Description',\r\n            Icon: 'forum',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: ['ForumTopic'],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the DocumentWorkspaceFolder\r\n     * @returns {Schema}\r\n     */\r\n    export function DocumentWorkspaceFolderCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-DocumentWorkspaceFolder,DisplayName',\r\n            Description: '$Ctd-DocumentWorkspaceFolder,Description',\r\n            Icon: 'Folder',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: ['DocumentWorkspace', 'DocumentWorkspaceFolder'],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the Domain\r\n     * @returns {Schema}\r\n     */\r\n    export function DomainCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-Domain,DisplayName',\r\n            Description: '$Ctd-Domain,Description',\r\n            Icon: 'Domain',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: ['User', 'RegisteredUser', 'Group', 'OrganizationalUnit', 'ADFolder'],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'SyncGuid',\r\n                displayName: 'SyncGuid',\r\n                description: 'GUID of corresponding AD object.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Advanced,\r\n                visibleEdit: FieldSettings.FieldVisibility.Advanced,\r\n                visibleNew: FieldSettings.FieldVisibility.Advanced,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.DateTimeFieldSetting({\r\n                dateTimeMode: FieldSettings.DateTimeMode.DateAndTime,\r\n                name: 'LastSync',\r\n                displayName: 'LastSync',\r\n                description: 'Date of last synchronization.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Advanced,\r\n                visibleEdit: FieldSettings.FieldVisibility.Advanced,\r\n                visibleNew: FieldSettings.FieldVisibility.Advanced,\r\n                defaultOrder: 0\r\n            }));\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the Domains\r\n     * @returns {Schema}\r\n     */\r\n    export function DomainsCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-Domains,DisplayName',\r\n            Description: '$Ctd-Domains,Description',\r\n            Icon: 'Folder',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: ['Domain'],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the Email\r\n     * @returns {Schema}\r\n     */\r\n    export function EmailCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-Email,DisplayName',\r\n            Description: '$Ctd-Email,Description',\r\n            Icon: 'Document',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: true,\r\n            AllowedChildTypes: ['File'],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'From',\r\n                displayName: 'From',\r\n                description: 'Sender name and address.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.LongTextFieldSetting({\r\n                textType: FieldSettings.TextType.RichText,\r\n                name: 'Body',\r\n                displayName: 'Body',\r\n                description: 'Body of email.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0,\r\n                controlHint: 'sn:RichText'\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.DateTimeFieldSetting({\r\n                dateTimeMode: FieldSettings.DateTimeMode.DateAndTime,\r\n                name: 'Sent',\r\n                displayName: 'Sent',\r\n                description: 'Date of sending.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the ExpenseClaim\r\n     * @returns {Schema}\r\n     */\r\n    export function ExpenseClaimCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-ExpenseClaim,DisplayName',\r\n            Description: '$Ctd-ExpenseClaim,Description',\r\n            Icon: 'expenseclaim',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: ['ExpenseClaimItem'],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.IntegerFieldSetting({\r\n                name: 'Sum',\r\n                displayName: 'Sum',\r\n                description: 'The summation of the children items\\' money.',\r\n                readOnly: true,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the FieldControlTemplates\r\n     * @returns {Schema}\r\n     */\r\n    export function FieldControlTemplatesCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-FieldControlTemplates,DisplayName',\r\n            Description: '$Ctd-FieldControlTemplates,Description',\r\n            Icon: 'Folder',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: ['FieldControlTemplates', 'FieldControlTemplate'],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the KPIDatasource\r\n     * @returns {Schema}\r\n     */\r\n    export function KPIDatasourceCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-KPIDatasource,DisplayName',\r\n            Description: '$Ctd-KPIDatasource,Description',\r\n            Icon: 'Folder',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: ['File'],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.LongTextFieldSetting({\r\n                name: 'KPIData',\r\n                displayName: 'KPI data',\r\n                description: 'XML presenting KPI data.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the KPIDatasources\r\n     * @returns {Schema}\r\n     */\r\n    export function KPIDatasourcesCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-KPIDatasources,DisplayName',\r\n            Description: '$Ctd-KPIDatasources,Description',\r\n            Icon: 'Folder',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: ['KPIDatasource'],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the OrganizationalUnit\r\n     * @returns {Schema}\r\n     */\r\n    export function OrganizationalUnitCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-OrganizationalUnit,DisplayName',\r\n            Description: '$Ctd-OrganizationalUnit,Description',\r\n            Icon: 'OrgUnit',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: ['User', 'RegisteredUser', 'Group', 'OrganizationalUnit', 'ADFolder'],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'SyncGuid',\r\n                displayName: 'SyncGuid',\r\n                description: 'GUID of corresponding AD object.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Advanced,\r\n                visibleEdit: FieldSettings.FieldVisibility.Advanced,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.DateTimeFieldSetting({\r\n                dateTimeMode: FieldSettings.DateTimeMode.DateAndTime,\r\n                name: 'LastSync',\r\n                displayName: 'LastSync',\r\n                description: 'Date of last synchronization.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Advanced,\r\n                visibleEdit: FieldSettings.FieldVisibility.Advanced,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the OtherWorkspaceFolder\r\n     * @returns {Schema}\r\n     */\r\n    export function OtherWorkspaceFolderCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-OtherWorkspaceFolder,DisplayName',\r\n            Description: '$Ctd-OtherWorkspaceFolder,Description',\r\n            Icon: 'Folder',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: ['Workspace'],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the PortalRoot\r\n     * @returns {Schema}\r\n     */\r\n    export function PortalRootCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-PortalRoot,DisplayName',\r\n            Description: '$Ctd-PortalRoot,Description',\r\n            Icon: 'PortalRoot',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: ['Folder', 'TrashBin', 'DocumentLibrary', 'CustomList', 'Sites', 'KPIDatasources', 'Domains', 'Profiles', 'Portlets', 'Resources', 'Skins'],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the PortletCategory\r\n     * @returns {Schema}\r\n     */\r\n    export function PortletCategoryCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-PortletCategory,DisplayName',\r\n            Description: '$Ctd-PortletCategory,Description',\r\n            Icon: 'Folder',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: ['Portlet', 'Image'],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the Posts\r\n     * @returns {Schema}\r\n     */\r\n    export function PostsCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-Posts,DisplayName',\r\n            Description: '$Ctd-Posts,Description',\r\n            Icon: 'Folder',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: ['Post'],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the ProfileDomain\r\n     * @returns {Schema}\r\n     */\r\n    export function ProfileDomainCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-ProfileDomain,DisplayName',\r\n            Description: '$Ctd-ProfileDomain,Description',\r\n            Icon: 'Domain',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: ['UserProfile'],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the Profiles\r\n     * @returns {Schema}\r\n     */\r\n    export function ProfilesCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-Profiles,DisplayName',\r\n            Description: '$Ctd-Profiles,Description',\r\n            Icon: 'Folder',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: ['ProfileDomain'],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the ProjectWorkspaceFolder\r\n     * @returns {Schema}\r\n     */\r\n    export function ProjectWorkspaceFolderCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-ProjectWorkspaceFolder,DisplayName',\r\n            Description: '$Ctd-ProjectWorkspaceFolder,Description',\r\n            Icon: 'Folder',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: ['ProjectWorkspace', 'ProjectWorkspaceFolder'],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the RuntimeContentContainer\r\n     * @returns {Schema}\r\n     */\r\n    export function RuntimeContentContainerCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-RuntimeContentContainer,DisplayName',\r\n            Description: '$Ctd-RuntimeContentContainer,Description',\r\n            Icon: 'Folder',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: [],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the SalesWorkspaceFolder\r\n     * @returns {Schema}\r\n     */\r\n    export function SalesWorkspaceFolderCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-SalesWorkspaceFolder,DisplayName',\r\n            Description: '$Ctd-SalesWorkspaceFolder,Description',\r\n            Icon: 'Folder',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: ['SalesWorkspace', 'SalesWorkspaceFolder'],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the Sites\r\n     * @returns {Schema}\r\n     */\r\n    export function SitesCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-Sites,DisplayName',\r\n            Description: '$Ctd-Sites,Description',\r\n            Icon: 'Site',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: ['Site'],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the SmartFolder\r\n     * @returns {Schema}\r\n     */\r\n    export function SmartFolderCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-SmartFolder,DisplayName',\r\n            Description: '$Ctd-SmartFolder,Description',\r\n            Icon: 'SmartFolder',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: [],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.LongTextFieldSetting({\r\n                name: 'Query',\r\n                displayName: 'Query',\r\n                description: 'Please give a query here that you want to use for collecting the children of this smart folder.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0,\r\n                controlHint: 'sn:QueryBuilder'\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ChoiceFieldSetting({\r\n                allowExtraValue: false,\r\n                allowMultiple: false,\r\n                options: [\r\n                    {Value: '0', Text: 'Default', Enabled: true, Selected: false },\r\n                    {Value: '1', Text: 'Enabled', Enabled: true, Selected: false },\r\n                    {Value: '2', Text: 'Disabled', Enabled: true, Selected: false }\r\n                ],\r\n                displayChoice: FieldSettings.DisplayChoice.DropDown,\r\n                enumTypeName: 'SenseNet.Search.FilterStatus',\r\n                name: 'EnableAutofilters',\r\n                displayName: 'Enable autofilters',\r\n                description: 'If autofilters are enabled, system content will be filtered from the query.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ChoiceFieldSetting({\r\n                allowExtraValue: false,\r\n                allowMultiple: false,\r\n                options: [\r\n                    {Value: '0', Text: 'Default', Enabled: true, Selected: false },\r\n                    {Value: '1', Text: 'Enabled', Enabled: true, Selected: false },\r\n                    {Value: '2', Text: 'Disabled', Enabled: true, Selected: false }\r\n                ],\r\n                displayChoice: FieldSettings.DisplayChoice.DropDown,\r\n                enumTypeName: 'SenseNet.Search.FilterStatus',\r\n                name: 'EnableLifespanFilter',\r\n                displayName: 'Enable lifespan filter',\r\n                description: 'If lifespan filter is enabled, only valid content will be in the result.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the ContentRotator\r\n     * @returns {Schema}\r\n     */\r\n    export function ContentRotatorCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-ContentRotator,DisplayName',\r\n            Description: '$Ctd-ContentRotator,Description',\r\n            Icon: 'SmartFolder',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: [],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ChoiceFieldSetting({\r\n                allowExtraValue: false,\r\n                allowMultiple: false,\r\n                options: [\r\n                    {Value: 'Random', Text: 'Random', Enabled: true, Selected: true },\r\n                    {Value: 'First', Text: 'First', Enabled: true, Selected: false }\r\n                ],\r\n                displayChoice: FieldSettings.DisplayChoice.DropDown,\r\n                enumTypeName: '',\r\n                name: 'SelectionMode',\r\n                displayName: 'Selection Mode',\r\n                description: 'Choose selection mode that defines which node (content) should be selected.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ChoiceFieldSetting({\r\n                allowExtraValue: false,\r\n                allowMultiple: false,\r\n                options: [\r\n                    {Value: 'DefaultOrder', Text: 'Default order', Enabled: true, Selected: true },\r\n                    {Value: 'ValidityOrder', Text: 'Validity order', Enabled: true, Selected: false }\r\n                ],\r\n                displayChoice: FieldSettings.DisplayChoice.DropDown,\r\n                enumTypeName: '',\r\n                name: 'OrderingMode',\r\n                displayName: 'Ordering Mode',\r\n                description: 'Choose ordering mode that defines the order of nodes before selection.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the SystemFolder\r\n     * @returns {Schema}\r\n     */\r\n    export function SystemFolderCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-SystemFolder,DisplayName',\r\n            Description: '$Ctd-SystemFolder,Description',\r\n            Icon: 'Folder',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: [],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the Portlets\r\n     * @returns {Schema}\r\n     */\r\n    export function PortletsCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-Portlets,DisplayName',\r\n            Description: '$Ctd-Portlets,Description',\r\n            Icon: 'Folder',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: ['PortletCategory'],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the Resources\r\n     * @returns {Schema}\r\n     */\r\n    export function ResourcesCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-Resources,DisplayName',\r\n            Description: '$Ctd-Resources,Description',\r\n            Icon: 'Folder',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: ['Resource'],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the Skin\r\n     * @returns {Schema}\r\n     */\r\n    export function SkinCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-Skin,DisplayName',\r\n            Description: '$Ctd-Skin,Description',\r\n            Icon: 'Folder',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: ['SystemFolder'],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.NullFieldSetting({\r\n                name: 'NewSkin',\r\n                displayName: 'New skin',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                defaultValue: 'false',\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the Skins\r\n     * @returns {Schema}\r\n     */\r\n    export function SkinsCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-Skins,DisplayName',\r\n            Description: '$Ctd-Skins,Description',\r\n            Icon: 'Folder',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: ['Skin'],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the TrashBag\r\n     * @returns {Schema}\r\n     */\r\n    export function TrashBagCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-TrashBag,DisplayName',\r\n            Description: '$Ctd-TrashBag,Description',\r\n            Icon: 'Folder',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: true,\r\n            AllowedChildTypes: [],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.DateTimeFieldSetting({\r\n                name: 'KeepUntil',\r\n                displayName: 'Keep until',\r\n                description: 'The bag must be kept until this date.',\r\n                readOnly: true,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'OriginalPath',\r\n                displayName: 'Original path',\r\n                description: 'The path where the bag content were deleted from.',\r\n                readOnly: true,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'WorkspaceRelativePath',\r\n                displayName: 'Ctd-TrashBagen-USWorkspaceRelativePath-DisplayName',\r\n                description: 'Ctd-TrashBagen-USWorkspaceRelativePath-Description',\r\n                readOnly: true,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.IntegerFieldSetting({\r\n                name: 'WorkspaceId',\r\n                displayName: 'Ctd-TrashBagen-USWorkspaceId-DisplayName',\r\n                description: 'Ctd-TrashBagen-USWorkspaceId-Description',\r\n                readOnly: true,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ReferenceFieldSetting({\r\n                allowMultiple: false,\r\n                name: 'DeletedContent',\r\n                displayName: 'Deleted content',\r\n                description: 'The actual deleted content inside this trash bag.',\r\n                readOnly: true,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the Workspace\r\n     * @returns {Schema}\r\n     */\r\n    export function WorkspaceCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-Workspace,DisplayName',\r\n            Description: '$Ctd-Workspace,Description',\r\n            Icon: 'Workspace',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: ['Page', 'Folder', 'Blog', 'DocumentLibrary', 'ImageLibrary', 'EventList', 'MemoList', 'LinkList', 'TaskList', 'Survey', 'Voting', 'DiscussionForum', 'Form', 'CustomList', 'Posts', 'Workspace', 'DocumentWorkspace', 'ProjectWorkspace', 'SalesWorkspace', 'Wiki'],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ReferenceFieldSetting({\r\n                allowMultiple: false,\r\n                allowedTypes: ['User'],\r\n                selectionRoots: ['/Root/IMS','/Root'],\r\n                name: 'Manager',\r\n                displayName: 'Project manager',\r\n                description: 'The person responsible for the project.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.DateTimeFieldSetting({\r\n                dateTimeMode: FieldSettings.DateTimeMode.DateAndTime,\r\n                name: 'Deadline',\r\n                displayName: 'Project deadline',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.NullFieldSetting({\r\n                name: 'IsActive',\r\n                displayName: 'Active',\r\n                description: 'This workspace is currently active.',\r\n                readOnly: false,\r\n                compulsory: true,\r\n                defaultValue: 'true',\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ReferenceFieldSetting({\r\n                allowMultiple: false,\r\n                allowedTypes: ['Skin'],\r\n                selectionRoots: ['/Root/Skins'],\r\n                name: 'WorkspaceSkin',\r\n                displayName: 'Skin',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.NullFieldSetting({\r\n                name: 'IsCritical',\r\n                displayName: 'Is critical',\r\n                description: 'This workspace is currently in a critical status.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Advanced,\r\n                visibleNew: FieldSettings.FieldVisibility.Advanced,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.NullFieldSetting({\r\n                name: 'IsWallContainer',\r\n                displayName: 'Wall Container',\r\n                description: 'This workspace is configured to contain a wall - this indicates that posts are created under this workspace if Content are shared anywhere below this path.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.NullFieldSetting({\r\n                name: 'IsFollowed',\r\n                readOnly: true,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the Blog\r\n     * @returns {Schema}\r\n     */\r\n    export function BlogCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-Blog,DisplayName',\r\n            Description: '$Ctd-Blog,Description',\r\n            Icon: 'Wiki',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: ['Folder', 'BlogPost'],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.NullFieldSetting({\r\n                name: 'ShowAvatar',\r\n                displayName: 'Show avatar',\r\n                description: 'According to your settings the blogger\\'s avatar is shown by the title of the post.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the DocumentWorkspace\r\n     * @returns {Schema}\r\n     */\r\n    export function DocumentWorkspaceCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-DocumentWorkspace,DisplayName',\r\n            Description: '$Ctd-DocumentWorkspace,Description',\r\n            Icon: 'workspace-document',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: ['Page', 'Folder', 'Blog', 'DocumentLibrary', 'ImageLibrary', 'EventList', 'MemoList', 'LinkList', 'TaskList', 'Survey', 'Voting', 'DiscussionForum', 'Form', 'CustomList', 'Posts'],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the ProjectWorkspace\r\n     * @returns {Schema}\r\n     */\r\n    export function ProjectWorkspaceCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-ProjectWorkspace,DisplayName',\r\n            Description: '$Ctd-ProjectWorkspace,Description',\r\n            Icon: 'workspace-project',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: ['Page', 'Folder', 'Blog', 'DocumentLibrary', 'ImageLibrary', 'EventList', 'MemoList', 'LinkList', 'TaskList', 'Survey', 'Voting', 'DiscussionForum', 'Form', 'CustomList', 'Posts'],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.NumberFieldSetting({\r\n                minValue: 0,\r\n                maxValue: 1,\r\n                digits: 2,\r\n                showAsPercentage: true,\r\n                name: 'Completion',\r\n                displayName: 'Completion',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the SalesWorkspace\r\n     * @returns {Schema}\r\n     */\r\n    export function SalesWorkspaceCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-SalesWorkspace,DisplayName',\r\n            Description: '$Ctd-SalesWorkspace,Description',\r\n            Icon: 'workspace-sales',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: ['Page', 'Folder', 'Blog', 'DocumentLibrary', 'ImageLibrary', 'EventList', 'MemoList', 'LinkList', 'TaskList', 'Survey', 'Voting', 'DiscussionForum', 'Form', 'CustomList', 'Posts'],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.LongTextFieldSetting({\r\n                name: 'Customer',\r\n                displayName: 'Customer',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.CurrencyFieldSetting({\r\n                format: 'en-US',\r\n                minValue: 0,\r\n                digits: 0,\r\n                name: 'ExpectedRevenue',\r\n                displayName: 'Expected revenue',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.NumberFieldSetting({\r\n                minValue: 0,\r\n                maxValue: 1,\r\n                digits: 2,\r\n                showAsPercentage: true,\r\n                name: 'ChanceOfWinning',\r\n                displayName: 'Chance of winning',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.DateTimeFieldSetting({\r\n                dateTimeMode: FieldSettings.DateTimeMode.DateAndTime,\r\n                name: 'StartDate',\r\n                displayName: 'Start date',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                defaultValue: '[Script:jScript] DateTime.UtcNow; [/Script]',\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.LongTextFieldSetting({\r\n                name: 'Contacts',\r\n                displayName: 'Contacts',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.LongTextFieldSetting({\r\n                name: 'Notes',\r\n                displayName: 'Notes',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.NumberFieldSetting({\r\n                minValue: 0,\r\n                maxValue: 1,\r\n                digits: 2,\r\n                showAsPercentage: true,\r\n                name: 'Completion',\r\n                displayName: 'Progress',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.NullFieldSetting({\r\n                name: 'ContractSigned',\r\n                displayName: 'Contract signed',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.DateTimeFieldSetting({\r\n                dateTimeMode: FieldSettings.DateTimeMode.DateAndTime,\r\n                name: 'ContractSignedDate',\r\n                displayName: 'Contract signed date',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the Site\r\n     * @returns {Schema}\r\n     */\r\n    export function SiteCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-Site,DisplayName',\r\n            Description: '$Ctd-Site,Description',\r\n            Icon: 'Site',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: ['Folder', 'Page', 'Workspace', 'DocumentWorkspace', 'ProjectWorkspace', 'SalesWorkspace', 'Image', 'GoogleSitemap', 'Blog', 'DocumentLibrary', 'ImageLibrary', 'EventList', 'MemoList', 'LinkList', 'TaskList', 'Survey', 'Voting', 'DiscussionForum', 'Form', 'CustomList', 'SmartFolder'],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ChoiceFieldSetting({\r\n                allowExtraValue: false,\r\n                allowMultiple: false,\r\n                options: [\r\n                    {Value: 'en', Text: 'English', Enabled: true, Selected: true },\r\n                    {Value: 'hu', Text: 'Hungarian', Enabled: true, Selected: false }\r\n                ],\r\n                displayChoice: FieldSettings.DisplayChoice.DropDown,\r\n                enumTypeName: '',\r\n                name: 'Language',\r\n                displayName: 'Language',\r\n                description: 'Please define the default language of this site.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.NullFieldSetting({\r\n                name: 'EnableClientBasedCulture',\r\n                displayName: 'Enable client-based culture',\r\n                description: 'Enable this to allow user browser settings override default site language settings.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.NullFieldSetting({\r\n                name: 'EnableUserBasedCulture',\r\n                displayName: 'Enable user-based culture',\r\n                description: 'Enable this to allow user language settings override default site language settings.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.NullFieldSetting({\r\n                name: 'UrlList',\r\n                displayName: 'URL list',\r\n                description: 'Select the URLs to associate with this Site.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ReferenceFieldSetting({\r\n                allowMultiple: false,\r\n                selectionRoots: ['.'],\r\n                name: 'StartPage',\r\n                displayName: 'Alternative start page',\r\n                description: 'If set, the site will use this start page instead of the default.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ReferenceFieldSetting({\r\n                allowMultiple: false,\r\n                selectionRoots: ['.'],\r\n                name: 'LoginPage',\r\n                displayName: 'Login page',\r\n                description: 'The login page to display when a user tries to access restricted Content (Forms authentication only).',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ReferenceFieldSetting({\r\n                allowMultiple: false,\r\n                allowedTypes: ['Skin'],\r\n                selectionRoots: ['/Root/Skins'],\r\n                name: 'SiteSkin',\r\n                displayName: 'Skin',\r\n                description: '',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.NullFieldSetting({\r\n                name: 'DenyCrossSiteAccess',\r\n                displayName: 'Deny cross-site access',\r\n                description: 'If set, content under this site can only be accessed via this site and not via other sites using a Root relative path.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the TeamWorkspace\r\n     * @returns {Schema}\r\n     */\r\n    export function TeamWorkspaceCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-TeamWorkspace,DisplayName',\r\n            Description: '$Ctd-TeamWorkspace,Description',\r\n            Icon: 'workspace',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: ['Page', 'Folder', 'Blog', 'DocumentLibrary', 'ImageLibrary', 'EventList', 'MemoList', 'LinkList', 'TaskList', 'Survey', 'Voting', 'DiscussionForum', 'Form', 'CustomList', 'Posts'],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the TrashBin\r\n     * @returns {Schema}\r\n     */\r\n    export function TrashBinCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-TrashBin,DisplayName',\r\n            Description: '$Ctd-TrashBin,Description',\r\n            Icon: 'trash',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: ['TrashBag'],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.IntegerFieldSetting({\r\n                minValue: 0,\r\n                name: 'MinRetentionTime',\r\n                displayName: 'Minimum retention time (in days)',\r\n                description: '',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.IntegerFieldSetting({\r\n                minValue: 0,\r\n                name: 'SizeQuota',\r\n                displayName: 'Size quota',\r\n                description: 'Set the size quote for the trash bin (Megabytes).',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.IntegerFieldSetting({\r\n                minValue: 0,\r\n                name: 'BagCapacity',\r\n                displayName: 'Trashbag capacity',\r\n                description: 'The maximum number of nodes accepted for trash in a single operation.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                defaultValue: '100',\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the UserProfile\r\n     * @returns {Schema}\r\n     */\r\n    export function UserProfileCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-UserProfile,DisplayName',\r\n            Description: '$Ctd-UserProfile,Description',\r\n            Icon: 'UserProfile',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: ['Blog', 'DocumentLibrary', 'EventList', 'MemoList', 'LinkList', 'TaskList', 'ImageLibrary', 'Posts', 'CustomList'],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ReferenceFieldSetting({\r\n                allowMultiple: false,\r\n                allowedTypes: ['User'],\r\n                selectionRoots: ['/Root/IMS'],\r\n                name: 'User',\r\n                displayName: 'User',\r\n                readOnly: true,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the Wiki\r\n     * @returns {Schema}\r\n     */\r\n    export function WikiCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-Wiki,DisplayName',\r\n            Description: '$Ctd-Wiki,Description',\r\n            Icon: 'Wiki',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: ['Page', 'Folder', 'WikiArticle', 'Image'],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the Group\r\n     * @returns {Schema}\r\n     */\r\n    export function GroupCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-Group,DisplayName',\r\n            Description: '$Ctd-Group,Description',\r\n            Icon: 'Group',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: [],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ReferenceFieldSetting({\r\n                allowMultiple: true,\r\n                allowedTypes: ['User','Group'],\r\n                selectionRoots: ['/Root/IMS','/Root'],\r\n                name: 'Members',\r\n                displayName: 'Members',\r\n                description: 'The members of this group.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'SyncGuid',\r\n                displayName: 'Sync Guid',\r\n                description: 'GUID of corresponding AD object.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Advanced,\r\n                visibleEdit: FieldSettings.FieldVisibility.Advanced,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.DateTimeFieldSetting({\r\n                dateTimeMode: FieldSettings.DateTimeMode.DateAndTime,\r\n                name: 'LastSync',\r\n                displayName: 'Last synchronization',\r\n                description: 'Date of last synchronization.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Advanced,\r\n                visibleEdit: FieldSettings.FieldVisibility.Advanced,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the ListItem\r\n     * @returns {Schema}\r\n     */\r\n    export function ListItemCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-ListItem,DisplayName',\r\n            Description: '$Ctd-ListItem,Description',\r\n            Icon: 'FormItem',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: [],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the BlogPost\r\n     * @returns {Schema}\r\n     */\r\n    export function BlogPostCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-BlogPost,DisplayName',\r\n            Description: '$Ctd-BlogPost,Description',\r\n            Icon: 'WikiArticle',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: [],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.LongTextFieldSetting({\r\n                name: 'LeadingText',\r\n                displayName: 'Blog post leading text',\r\n                readOnly: false,\r\n                compulsory: true,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0,\r\n                controlHint: 'sn:RichText'\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.LongTextFieldSetting({\r\n                name: 'BodyText',\r\n                displayName: 'Blog post body text',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0,\r\n                controlHint: 'sn:RichText'\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.NullFieldSetting({\r\n                name: 'IsPublished',\r\n                displayName: 'Published',\r\n                description: 'Specifies whether this blog post is published and can be seen in the blog.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.DateTimeFieldSetting({\r\n                dateTimeMode: FieldSettings.DateTimeMode.DateAndTime,\r\n                name: 'PublishedOn',\r\n                displayName: 'Publish date',\r\n                description: 'The blog post will appear after this date.',\r\n                readOnly: false,\r\n                compulsory: true,\r\n                defaultValue: '[Script:jScript] DateTime.UtcNow; [/Script]',\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the CalendarEvent\r\n     * @returns {Schema}\r\n     */\r\n    export function CalendarEventCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-CalendarEvent,DisplayName',\r\n            Description: '$Ctd-CalendarEvent,Description',\r\n            Icon: 'CalendarEvent',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: [],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'Location',\r\n                displayName: 'Location',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.DateTimeFieldSetting({\r\n                dateTimeMode: FieldSettings.DateTimeMode.DateAndTime,\r\n                name: 'StartDate',\r\n                displayName: 'Start date',\r\n                readOnly: false,\r\n                compulsory: true,\r\n                defaultValue: '[Script:jScript] DateTime.UtcNow; [/Script]',\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.DateTimeFieldSetting({\r\n                dateTimeMode: FieldSettings.DateTimeMode.DateAndTime,\r\n                name: 'EndDate',\r\n                displayName: 'End date',\r\n                readOnly: false,\r\n                compulsory: true,\r\n                defaultValue: '[Script:jScript] DateTime.UtcNow; [/Script]',\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.LongTextFieldSetting({\r\n                name: 'Lead',\r\n                displayName: 'Lead',\r\n                description: 'Short lead of the event.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0,\r\n                controlHint: 'sn:RichText'\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.NullFieldSetting({\r\n                name: 'AllDay',\r\n                displayName: 'All-day event',\r\n                description: 'The event encompasses one or more entire days.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'EventUrl',\r\n                displayName: 'URL',\r\n                description: 'Further information on event.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.NullFieldSetting({\r\n                name: 'RequiresRegistration',\r\n                displayName: 'Requires registration',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Advanced,\r\n                visibleNew: FieldSettings.FieldVisibility.Advanced,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ReferenceFieldSetting({\r\n                allowMultiple: false,\r\n                allowedTypes: ['EventRegistrationForm'],\r\n                selectionRoots: ['/Root'],\r\n                name: 'RegistrationForm',\r\n                displayName: 'Registration form',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Advanced,\r\n                visibleNew: FieldSettings.FieldVisibility.Advanced,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'OwnerEmail',\r\n                displayName: 'Event owner\\'s e-mail',\r\n                description: 'The list of email addresses to where a notification message containing submitted values are sent after submitting the form. The addresses should be separated by \";\", \",\" or new line.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Advanced,\r\n                visibleNew: FieldSettings.FieldVisibility.Advanced,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ChoiceFieldSetting({\r\n                allowExtraValue: false,\r\n                allowMultiple: false,\r\n                options: [\r\n                    {Value: 'E-mail', Text: 'Email', Enabled: true, Selected: true },\r\n                    {Value: 'E-mail digest', Text: 'Email Digest', Enabled: true, Selected: false },\r\n                    {Value: 'None', Text: 'None', Enabled: true, Selected: false }\r\n                ],\r\n                displayChoice: FieldSettings.DisplayChoice.DropDown,\r\n                enumTypeName: '',\r\n                name: 'NotificationMode',\r\n                displayName: 'Notification mode',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Advanced,\r\n                visibleNew: FieldSettings.FieldVisibility.Advanced,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.LongTextFieldSetting({\r\n                name: 'EmailTemplate',\r\n                displayName: 'Email template',\r\n                description: 'The template of the email message sent to the administrators. By default the template of notification email sent to the submitter is the same as the one sent to the recipients given in the email list above. Form content can be inserted with the \"{0}\" string.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Advanced,\r\n                visibleNew: FieldSettings.FieldVisibility.Advanced,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.LongTextFieldSetting({\r\n                name: 'EmailTemplateSubmitter',\r\n                displayName: 'Submitter email template',\r\n                description: 'The template of the email message sent to the submitter. By default the template of notification email sent to the submitter is the same as the one sent to the recipients given in the email list above. Form content can be inserted with the \"{0}\" string.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Advanced,\r\n                visibleNew: FieldSettings.FieldVisibility.Advanced,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'EmailFrom',\r\n                displayName: 'Email from',\r\n                description: 'This address is displayed in the \"From\" field of the notification email sen to the admin.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Advanced,\r\n                visibleNew: FieldSettings.FieldVisibility.Advanced,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'EmailFromSubmitter',\r\n                displayName: 'Subbmitter email from',\r\n                description: 'This address is displayed in the \"From\" field of the user notification email sent to submitters. Default is \"mailerservice@example.com\".',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Advanced,\r\n                visibleNew: FieldSettings.FieldVisibility.Advanced,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'EmailField',\r\n                displayName: 'Email field',\r\n                description: 'The name of the field specified among ContentList fields containing the submitter\\'s email address. Ie.: \"#Email\" or \"#SubmitterEmail\".',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Advanced,\r\n                visibleNew: FieldSettings.FieldVisibility.Advanced,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.IntegerFieldSetting({\r\n                name: 'MaxParticipants',\r\n                displayName: 'Max Participants',\r\n                description: 'The maximum number of participants which can apply for the event.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Advanced,\r\n                visibleNew: FieldSettings.FieldVisibility.Advanced,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.IntegerFieldSetting({\r\n                name: 'NumParticipants',\r\n                displayName: 'Current number of participants',\r\n                description: 'Current number of participants',\r\n                readOnly: true,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Advanced,\r\n                visibleNew: FieldSettings.FieldVisibility.Advanced,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ChoiceFieldSetting({\r\n                allowExtraValue: false,\r\n                allowMultiple: false,\r\n                options: [\r\n                    {Value: 'Deadline', Text: 'Deadline', Enabled: true, Selected: true },\r\n                    {Value: 'Meeting', Text: 'Meeting', Enabled: true, Selected: false },\r\n                    {Value: 'Demo', Text: 'Demo', Enabled: true, Selected: false }\r\n                ],\r\n                displayChoice: FieldSettings.DisplayChoice.DropDown,\r\n                enumTypeName: '',\r\n                name: 'EventType',\r\n                displayName: 'Event type',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the Car\r\n     * @returns {Schema}\r\n     */\r\n    export function CarCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-Car,DisplayName',\r\n            Description: '$Ctd-Car,Description',\r\n            Icon: 'Car',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: true,\r\n            AllowedChildTypes: [],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'Make',\r\n                displayName: 'Make',\r\n                description: 'e.g. Mazda, Ferrari etc.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'Model',\r\n                displayName: 'Model',\r\n                description: 'e.g. RX-8, F-40 etc.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ChoiceFieldSetting({\r\n                allowExtraValue: true,\r\n                allowMultiple: false,\r\n                options: [\r\n                    {Value: 'Sedan', Text: 'Sedan', Enabled: true, Selected: true },\r\n                    {Value: 'Coupe', Text: 'Coupe', Enabled: true, Selected: false },\r\n                    {Value: 'Cabrio', Text: 'Cabrio', Enabled: true, Selected: false },\r\n                    {Value: 'Roadster', Text: 'Roadster', Enabled: true, Selected: false },\r\n                    {Value: 'SUV', Text: 'SUV', Enabled: true, Selected: false },\r\n                    {Value: 'Van', Text: 'Van', Enabled: true, Selected: false }\r\n                ],\r\n                displayChoice: FieldSettings.DisplayChoice.DropDown,\r\n                enumTypeName: '',\r\n                name: 'Style',\r\n                displayName: 'Style',\r\n                description: 'Select one of the car build-ups.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.DateTimeFieldSetting({\r\n                dateTimeMode: FieldSettings.DateTimeMode.DateAndTime,\r\n                name: 'StartingDate',\r\n                displayName: 'Starting date',\r\n                description: '',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ColorFieldSetting({\r\n                palette: '#ff0000;#f0d0c9;#e2a293;#d4735e;#65281a',\r\n                name: 'Color',\r\n                displayName: 'Color',\r\n                description: '',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                defaultValue: '#ff0000',\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'EngineSize',\r\n                displayName: 'EngineSize',\r\n                description: 'EngineSize (litres).',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'Power',\r\n                displayName: 'Power in hp',\r\n                description: '',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.NumberFieldSetting({\r\n                name: 'Price',\r\n                displayName: 'Base price',\r\n                description: 'Base price $.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the Comment\r\n     * @returns {Schema}\r\n     */\r\n    export function CommentCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-Comment,DisplayName',\r\n            Description: '$Ctd-Comment,Description',\r\n            Icon: 'File',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: [],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the ConfirmationItem\r\n     * @returns {Schema}\r\n     */\r\n    export function ConfirmationItemCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-ConfirmationItem,DisplayName',\r\n            Description: '$Ctd-ConfirmationItem,Description',\r\n            Icon: 'FormItem',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: [],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.NullFieldSetting({\r\n                name: 'Confirmed',\r\n                displayName: 'Confirmed',\r\n                description: 'Set to true to confirm the operation.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the CustomListItem\r\n     * @returns {Schema}\r\n     */\r\n    export function CustomListItemCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-CustomListItem,DisplayName',\r\n            Description: '$Ctd-CustomListItem,Description',\r\n            Icon: 'FormItem',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: true,\r\n            AllowedChildTypes: [],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.NullFieldSetting({\r\n                name: 'WorkflowsRunning',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the ExpenseClaimItem\r\n     * @returns {Schema}\r\n     */\r\n    export function ExpenseClaimItemCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-ExpenseClaimItem,DisplayName',\r\n            Description: '$Ctd-ExpenseClaimItem,Description',\r\n            Icon: 'expenseclaimitem',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: [],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.CurrencyFieldSetting({\r\n                format: 'en-US',\r\n                minValue: 0,\r\n                digits: 0,\r\n                name: 'Amount',\r\n                displayName: 'Amount',\r\n                description: 'The amount of money.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.DateTimeFieldSetting({\r\n                dateTimeMode: FieldSettings.DateTimeMode.DateAndTime,\r\n                name: 'Date',\r\n                displayName: 'Date',\r\n                description: 'The date of the claim.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ReferenceFieldSetting({\r\n                allowMultiple: false,\r\n                name: 'ImageRef',\r\n                displayName: 'Image of the Expense Claim (reference)',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.BinaryFieldSetting({\r\n                name: 'ImageData',\r\n                displayName: 'Image of the Expense Claim (binarydata)',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.NullFieldSetting({\r\n                name: 'ScannedImage',\r\n                displayName: 'Scanned image',\r\n                description: 'Scanned image of the invoice.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0,\r\n                controlHint: 'sn:Image'\r\n            }));\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the FormItem\r\n     * @returns {Schema}\r\n     */\r\n    export function FormItemCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-FormItem,DisplayName',\r\n            Description: '$Ctd-FormItem,Description',\r\n            Icon: 'FormItem',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: [],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the EventRegistrationFormItem\r\n     * @returns {Schema}\r\n     */\r\n    export function EventRegistrationFormItemCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-EventRegistrationFormItem,DisplayName',\r\n            Description: '$Ctd-EventRegistrationFormItem,Description',\r\n            Icon: 'FormItem',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: [],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                regex: '^[a-zA-Z0-9._%+-]+@(?:[a-zA-Z0-9-]+\\\\.)+[a-zA-Z]{2,4}$',\r\n                name: 'Email',\r\n                displayName: 'E-mail',\r\n                readOnly: false,\r\n                compulsory: true,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.IntegerFieldSetting({\r\n                minValue: 0,\r\n                name: 'GuestNumber',\r\n                displayName: 'Additional guests',\r\n                readOnly: false,\r\n                compulsory: true,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the ForumEntry\r\n     * @returns {Schema}\r\n     */\r\n    export function ForumEntryCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-ForumEntry,DisplayName',\r\n            Description: '$Ctd-ForumEntry,Description',\r\n            Icon: 'forumentry',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: true,\r\n            AllowedChildTypes: [],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ReferenceFieldSetting({\r\n                allowMultiple: false,\r\n                allowedTypes: ['ForumEntry'],\r\n                name: 'ReplyTo',\r\n                displayName: 'Reply to',\r\n                description: 'The previous message in the thread.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.IntegerFieldSetting({\r\n                name: 'ReplyToNo',\r\n                displayName: 'Reply to number',\r\n                description: 'The number of the previous message in the thread.',\r\n                readOnly: true,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.IntegerFieldSetting({\r\n                name: 'SerialNo',\r\n                displayName: 'Number',\r\n                description: 'Entry number.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ReferenceFieldSetting({\r\n                name: 'PostedBy',\r\n                displayName: 'Posted by',\r\n                description: 'The user who posted the message.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the Like\r\n     * @returns {Schema}\r\n     */\r\n    export function LikeCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-Like,DisplayName',\r\n            Description: '$Ctd-Like,Description',\r\n            Icon: 'File',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: [],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the Link\r\n     * @returns {Schema}\r\n     */\r\n    export function LinkCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-Link,DisplayName',\r\n            Description: '$Ctd-Link,Description',\r\n            Icon: 'link',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: true,\r\n            AllowedChildTypes: [],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                regex: '^(http|https)\\\\://([a-zA-Z0-9\\\\.\\\\-]+(\\\\:[a-zA-Z0-9\\\\.&%\\\\$\\\\-]+)*@)*((25[0-5]|2[0-4][0-9]|[0-1]{1}[0-9]{2}|[1-9]{1}[0-9]{1}|[1-9])\\\\.(25[0-5]|2[0-4][0-9]|[0-1]{1}[0-9]{2}|[1-9]{1}[0-9]{1}|[1-9]|0)\\\\.(25[0-5]|2[0-4][0-9]|[0-1]{1}[0-9]{2}|[1-9]{1}[0-9]{1}|[1-9]|0)\\\\.(25[0-5]|2[0-4][0-9]|[0-1]{1}[0-9]{2}|[1-9]{1}[0-9]{1}|[0-9])|localhost|([a-zA-Z0-9\\\\-]+\\\\.)*[a-zA-Z0-9\\\\-]+(\\\\.(com|edu|gov|int|mil|net|org|biz|arpa|info|name|pro|aero|coop|museum|hu|[a-zA-Z]{2})){0,1})(\\\\:[0-9]+)*((\\\\#|/)($|[a-zA-Z0-9\\\\.\\\\,\\\\?\\\\\\'\\\\\\\\\\\\+&%\\\\$#\\\\=~_\\\\-]+))*$',\r\n                name: 'Url',\r\n                displayName: 'URL',\r\n                description: 'Type a URL to this field to represent a link to that URL.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                defaultValue: 'http://',\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the Memo\r\n     * @returns {Schema}\r\n     */\r\n    export function MemoCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-Memo,DisplayName',\r\n            Description: '$Ctd-Memo,Description',\r\n            Icon: 'Document',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: true,\r\n            AllowedChildTypes: [],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.DateTimeFieldSetting({\r\n                dateTimeMode: FieldSettings.DateTimeMode.DateAndTime,\r\n                name: 'Date',\r\n                displayName: 'Date',\r\n                description: 'Please set the due date of the memo.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                defaultValue: '[Script:jScript] DateTime.UtcNow; [/Script]',\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ChoiceFieldSetting({\r\n                allowExtraValue: true,\r\n                allowMultiple: false,\r\n                options: [\r\n                    {Value: 'generic', Text: 'Generic', Enabled: true, Selected: true },\r\n                    {Value: 'iso', Text: 'ISO', Enabled: true, Selected: false },\r\n                    {Value: 'iaudit', Text: 'Internal audit', Enabled: true, Selected: false }\r\n                ],\r\n                displayChoice: FieldSettings.DisplayChoice.DropDown,\r\n                enumTypeName: '',\r\n                name: 'MemoType',\r\n                displayName: 'Memo type',\r\n                description: 'Type of the memo.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ReferenceFieldSetting({\r\n                allowMultiple: true,\r\n                name: 'SeeAlso',\r\n                displayName: 'See also...',\r\n                description: 'A list of content this memo pertains to.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the Portlet\r\n     * @returns {Schema}\r\n     */\r\n    export function PortletCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-Portlet,DisplayName',\r\n            Description: '$Ctd-Portlet,Description',\r\n            Icon: 'FormItem',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: [],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'TypeName',\r\n                displayName: 'Fully qualified type name',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ReferenceFieldSetting({\r\n                allowMultiple: false,\r\n                name: 'ImageRef',\r\n                displayName: 'Thumbnail image of portlet (reference)',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.BinaryFieldSetting({\r\n                name: 'ImageData',\r\n                displayName: 'Thumbnail image of portlet (binarydata)',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.NullFieldSetting({\r\n                name: 'PortletImage',\r\n                displayName: 'Thumbnail image of portlet',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0,\r\n                controlHint: 'sn:Image'\r\n            }));\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the Post\r\n     * @returns {Schema}\r\n     */\r\n    export function PostCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-Post,DisplayName',\r\n            Description: '$Ctd-Post,Description',\r\n            Icon: 'File',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: ['Post', 'Comment', 'Like', 'Folder'],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.IntegerFieldSetting({\r\n                name: 'JournalId',\r\n                displayName: 'Journal Id',\r\n                description: 'Id of the corresponding journal item. 0 if the post is not derived from a journalitem.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Advanced,\r\n                visibleEdit: FieldSettings.FieldVisibility.Advanced,\r\n                visibleNew: FieldSettings.FieldVisibility.Advanced,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.IntegerFieldSetting({\r\n                name: 'PostType',\r\n                displayName: 'Post type',\r\n                description: 'Type of post item ie. Manual, Created, Modified, etc.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Advanced,\r\n                visibleEdit: FieldSettings.FieldVisibility.Advanced,\r\n                visibleNew: FieldSettings.FieldVisibility.Advanced,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ReferenceFieldSetting({\r\n                allowMultiple: false,\r\n                name: 'SharedContent',\r\n                displayName: 'Shared Content',\r\n                description: 'The shared Content if it has been attached to the post.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Advanced,\r\n                visibleEdit: FieldSettings.FieldVisibility.Advanced,\r\n                visibleNew: FieldSettings.FieldVisibility.Advanced,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.LongTextFieldSetting({\r\n                name: 'PostDetails',\r\n                displayName: 'Post details',\r\n                description: 'Contains details of journal posts.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the SliderItem\r\n     * @returns {Schema}\r\n     */\r\n    export function SliderItemCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-SliderItem,SliderItem-DisplayName',\r\n            Description: '$Ctd-SliderItem,SliderItem-Description',\r\n            Icon: 'Image',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: [],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ReferenceFieldSetting({\r\n                allowMultiple: false,\r\n                allowedTypes: ['Image','Video'],\r\n                name: 'Background',\r\n                displayName: 'Background',\r\n                description: 'Choose a photo or video as the background of your Slider Item',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'YouTubeBackground',\r\n                displayName: 'YouTube video link',\r\n                description: 'If you would like to specify a YouTube video as the background for you Slider Item, please paste its link here. Note, that in order for the YouTube video to serve as the background, you will need to leave the Background field empty',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ChoiceFieldSetting({\r\n                allowExtraValue: false,\r\n                allowMultiple: false,\r\n                options: [\r\n                    {Value: 'top', Text: 'Top', Enabled: true, Selected: false },\r\n                    {Value: 'middle', Text: 'Middle', Enabled: true, Selected: false },\r\n                    {Value: 'bottom', Text: 'Bottom', Enabled: true, Selected: false }\r\n                ],\r\n                displayChoice: FieldSettings.DisplayChoice.DropDown,\r\n                enumTypeName: '',\r\n                name: 'VerticalAlignment',\r\n                displayName: 'Vertical alignment',\r\n                description: 'Align text vertically',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ChoiceFieldSetting({\r\n                allowExtraValue: false,\r\n                allowMultiple: false,\r\n                options: [\r\n                    {Value: 'left', Text: 'Left', Enabled: true, Selected: false },\r\n                    {Value: 'center', Text: 'Center', Enabled: true, Selected: false },\r\n                    {Value: 'right', Text: 'Right', Enabled: true, Selected: false }\r\n                ],\r\n                displayChoice: FieldSettings.DisplayChoice.DropDown,\r\n                enumTypeName: '',\r\n                name: 'HorizontalAlignment',\r\n                displayName: 'Horzontal alignment',\r\n                description: 'Align text horizontally',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.HyperLinkFieldSetting({\r\n                name: 'OuterCallToActionButton',\r\n                displayName: 'Call-to-action external link',\r\n                description: 'Set the behavior of the button',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.LongTextFieldSetting({\r\n                name: 'InnerCallToActionButton',\r\n                displayName: 'Call-to-action internal link',\r\n                description: 'Set the behavior of the button',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0,\r\n                controlHint: 'sn:ButtonList'\r\n            }));\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the SurveyItem\r\n     * @returns {Schema}\r\n     */\r\n    export function SurveyItemCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-SurveyItem,DisplayName',\r\n            Description: '$Ctd-SurveyItem,Description',\r\n            Icon: 'FormItem',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: [],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ReferenceFieldSetting({\r\n                name: 'EvaluatedBy',\r\n                displayName: 'Evaluated by',\r\n                description: 'The user who has evaluated the survey.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.DateTimeFieldSetting({\r\n                dateTimeMode: FieldSettings.DateTimeMode.DateAndTime,\r\n                name: 'EvaluatedAt',\r\n                displayName: 'Evaluated at',\r\n                description: 'The date and time of the evaluation.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.LongTextFieldSetting({\r\n                name: 'Evaluation',\r\n                displayName: 'Evaluation',\r\n                description: 'The evaluation text of the survey.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the SurveyListItem\r\n     * @returns {Schema}\r\n     */\r\n    export function SurveyListItemCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-SurveyListItem,DisplayName',\r\n            Description: '$Ctd-SurveyListItem,Description',\r\n            Icon: 'FormItem',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: [],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the Task\r\n     * @returns {Schema}\r\n     */\r\n    export function TaskCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-Task,DisplayName',\r\n            Description: '$Ctd-Task,Description',\r\n            Icon: 'FormItem',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: [],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.DateTimeFieldSetting({\r\n                dateTimeMode: FieldSettings.DateTimeMode.DateAndTime,\r\n                name: 'StartDate',\r\n                displayName: 'Start date',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.DateTimeFieldSetting({\r\n                dateTimeMode: FieldSettings.DateTimeMode.DateAndTime,\r\n                name: 'DueDate',\r\n                displayName: 'Due date',\r\n                readOnly: false,\r\n                compulsory: true,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ReferenceFieldSetting({\r\n                allowMultiple: true,\r\n                allowedTypes: ['User'],\r\n                selectionRoots: ['/Root/IMS','/Root'],\r\n                name: 'AssignedTo',\r\n                displayName: 'Assigned to',\r\n                description: 'List of internal stakeholders.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ChoiceFieldSetting({\r\n                allowExtraValue: false,\r\n                allowMultiple: false,\r\n                options: [\r\n                    {Value: '1', Text: 'Urgent', Enabled: true, Selected: false },\r\n                    {Value: '2', Text: 'Normal', Enabled: true, Selected: true },\r\n                    {Value: '3', Text: 'Not urgent', Enabled: true, Selected: false }\r\n                ],\r\n                displayChoice: FieldSettings.DisplayChoice.DropDown,\r\n                enumTypeName: '',\r\n                name: 'Priority',\r\n                displayName: 'Priority',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ChoiceFieldSetting({\r\n                allowExtraValue: false,\r\n                allowMultiple: false,\r\n                options: [\r\n                    {Value: 'pending', Text: 'Pending', Enabled: true, Selected: false },\r\n                    {Value: 'active', Text: 'Active', Enabled: true, Selected: true },\r\n                    {Value: 'completed', Text: 'Completed', Enabled: true, Selected: false },\r\n                    {Value: 'deferred', Text: 'Deferred', Enabled: true, Selected: false },\r\n                    {Value: 'waiting', Text: 'Waiting', Enabled: true, Selected: false }\r\n                ],\r\n                displayChoice: FieldSettings.DisplayChoice.DropDown,\r\n                enumTypeName: '',\r\n                name: 'Status',\r\n                displayName: 'Status',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.IntegerFieldSetting({\r\n                minValue: 0,\r\n                maxValue: 100,\r\n                showAsPercentage: true,\r\n                name: 'TaskCompletion',\r\n                displayName: 'Completion',\r\n                description: 'Completion percentage of the task.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.IntegerFieldSetting({\r\n                name: 'RemainingDays',\r\n                displayName: 'Remaining days',\r\n                description: 'Number of remaining days.',\r\n                readOnly: true,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'DueText',\r\n                displayName: 'DueText',\r\n                readOnly: true,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'DueCssClass',\r\n                displayName: 'Due style',\r\n                description: 'Css class',\r\n                readOnly: true,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the ApprovalWorkflowTask\r\n     * @returns {Schema}\r\n     */\r\n    export function ApprovalWorkflowTaskCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-ApprovalWorkflowTask,DisplayName',\r\n            Description: '$Ctd-ApprovalWorkflowTask,Description',\r\n            Icon: 'FormItem',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: true,\r\n            AllowedChildTypes: [],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'Comment',\r\n                displayName: 'Comment',\r\n                description: 'Type the reason for your decision here.',\r\n                readOnly: false,\r\n                compulsory: true,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ChoiceFieldSetting({\r\n                allowExtraValue: false,\r\n                allowMultiple: false,\r\n                options: [\r\n                    {Value: 'yes', Text: 'Approved', Enabled: true, Selected: false },\r\n                    {Value: 'no', Text: 'Rejected', Enabled: true, Selected: false }\r\n                ],\r\n                displayChoice: FieldSettings.DisplayChoice.DropDown,\r\n                enumTypeName: '',\r\n                name: 'Result',\r\n                displayName: 'Answer',\r\n                description: 'Select your answer here.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ReferenceFieldSetting({\r\n                allowMultiple: false,\r\n                name: 'ContentToApprove',\r\n                displayName: 'Content to approve',\r\n                description: 'Ctd-ApprovalWorkflowTasken-USContentToApprove-Descriptione',\r\n                readOnly: true,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the ExpenseClaimWorkflowTask\r\n     * @returns {Schema}\r\n     */\r\n    export function ExpenseClaimWorkflowTaskCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-ExpenseClaimWorkflowTask,DisplayName',\r\n            Description: '$Ctd-ExpenseClaimWorkflowTask,Description',\r\n            Icon: 'FormItem',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: true,\r\n            AllowedChildTypes: [],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.LongTextFieldSetting({\r\n                name: 'Reason',\r\n                displayName: 'Reject reason',\r\n                description: 'The reason why the Expense Claim was rejected.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ReferenceFieldSetting({\r\n                allowMultiple: false,\r\n                name: 'ExpenseClaim',\r\n                displayName: 'Expense Claim',\r\n                description: 'The expense claim list.',\r\n                readOnly: true,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.IntegerFieldSetting({\r\n                name: 'Sum',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the VotingItem\r\n     * @returns {Schema}\r\n     */\r\n    export function VotingItemCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-VotingItem,DisplayName',\r\n            Description: '$Ctd-VotingItem,Description',\r\n            Icon: 'FormItem',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: [],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the WebContent\r\n     * @returns {Schema}\r\n     */\r\n    export function WebContentCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-WebContent,DisplayName',\r\n            Description: '$Ctd-WebContent,Description',\r\n            Icon: 'WebContent',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: [],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.DateTimeFieldSetting({\r\n                dateTimeMode: FieldSettings.DateTimeMode.DateAndTime,\r\n                name: 'ReviewDate',\r\n                displayName: 'Review date',\r\n                description: '',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.DateTimeFieldSetting({\r\n                dateTimeMode: FieldSettings.DateTimeMode.DateAndTime,\r\n                name: 'ArchiveDate',\r\n                displayName: 'Archive date',\r\n                description: '',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the Article\r\n     * @returns {Schema}\r\n     */\r\n    export function ArticleCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-Article,DisplayName',\r\n            Description: '$Ctd-Article,Description',\r\n            Icon: 'WebContent',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: [],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'Subtitle',\r\n                displayName: 'Subtitle',\r\n                description: 'A secondary headline. Displayed in the article pages.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.LongTextFieldSetting({\r\n                name: 'Lead',\r\n                displayName: 'Lead',\r\n                description: 'Short lead of article.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0,\r\n                controlHint: 'sn:RichText'\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.LongTextFieldSetting({\r\n                name: 'Body',\r\n                displayName: 'Body',\r\n                description: 'Body.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0,\r\n                controlHint: 'sn:RichText'\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.NullFieldSetting({\r\n                name: 'Pinned',\r\n                displayName: 'Highlights',\r\n                description: 'Content is always showing on the main page\\'s [Highlights] collection.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.LongTextFieldSetting({\r\n                name: 'Keywords',\r\n                displayName: 'Keywords',\r\n                description: 'Keywords',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'Author',\r\n                displayName: 'Author',\r\n                description: 'Author',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ReferenceFieldSetting({\r\n                allowMultiple: false,\r\n                name: 'ImageRef',\r\n                displayName: 'Cover image (reference)',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.BinaryFieldSetting({\r\n                name: 'ImageData',\r\n                displayName: 'Cover image (binarydata)',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.NullFieldSetting({\r\n                name: 'Image',\r\n                displayName: 'Cover image (composite)',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0,\r\n                controlHint: 'sn:Image'\r\n            }));\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the HTMLContent\r\n     * @returns {Schema}\r\n     */\r\n    export function HTMLContentCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-HTMLContent,DisplayName',\r\n            Description: '$Ctd-HTMLContent,Description',\r\n            Icon: 'WebContent',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: [],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.LongTextFieldSetting({\r\n                name: 'HTMLFragment',\r\n                displayName: 'HTML fragment',\r\n                description: 'Write your HTML code in the text area.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the WebContentDemo\r\n     * @returns {Schema}\r\n     */\r\n    export function WebContentDemoCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-WebContentDemo,DisplayName',\r\n            Description: '$Ctd-WebContentDemo,Description',\r\n            Icon: 'WebContent',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: [],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'Subtitle',\r\n                displayName: 'Subtitle',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ReferenceFieldSetting({\r\n                name: 'RelatedImage',\r\n                displayName: 'Related Image',\r\n                description: '',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.LongTextFieldSetting({\r\n                name: 'Header',\r\n                displayName: 'Header',\r\n                description: '',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0,\r\n                controlHint: 'sn:RichText'\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.LongTextFieldSetting({\r\n                name: 'Body',\r\n                displayName: 'Body',\r\n                description: '',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0,\r\n                controlHint: 'sn:RichText'\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.HyperLinkFieldSetting({\r\n                name: 'Details',\r\n                displayName: 'Details',\r\n                description: 'Details page link.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ChoiceFieldSetting({\r\n                allowExtraValue: true,\r\n                allowMultiple: false,\r\n                options: [\r\n                    {Value: 'English', Text: 'English', Enabled: true, Selected: true }\r\n                ],\r\n                displayChoice: FieldSettings.DisplayChoice.DropDown,\r\n                enumTypeName: '',\r\n                name: 'Language',\r\n                displayName: 'Language',\r\n                description: 'Choose a language.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.LongTextFieldSetting({\r\n                name: 'Keywords',\r\n                displayName: 'Keywords',\r\n                description: '',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'Author',\r\n                displayName: 'Author',\r\n                description: '',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the NotificationConfig\r\n     * @returns {Schema}\r\n     */\r\n    export function NotificationConfigCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-NotificationConfig,DisplayName',\r\n            Description: '$Ctd-NotificationConfig,Description',\r\n            Icon: 'Content',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: [],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'Subject',\r\n                displayName: 'Subject',\r\n                description: 'Subject of the email to be sent as notification. Provided \"{FieldName}\" entities will be replaced with referenced Field values of the content triggering notification.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.LongTextFieldSetting({\r\n                name: 'Body',\r\n                displayName: 'Body',\r\n                description: 'Body of the email to be sent as notification. Provided \"{FieldName}\" entities will be replaced with referenced Field values of the content triggering notification.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'SenderAddress',\r\n                displayName: 'Address of sender',\r\n                description: 'Email address of the sender of the email to be sent as notification.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the PublicRegistrationConfig\r\n     * @returns {Schema}\r\n     */\r\n    export function PublicRegistrationConfigCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-PublicRegistrationConfig,DisplayName',\r\n            Description: '$Ctd-PublicRegistrationConfig,Description',\r\n            Icon: 'PubReg',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: [],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ReferenceFieldSetting({\r\n                allowMultiple: true,\r\n                allowedTypes: ['Group'],\r\n                name: 'SecurityGroups',\r\n                displayName: 'Security groups',\r\n                description: '',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ReferenceFieldSetting({\r\n                allowMultiple: false,\r\n                allowedTypes: ['Domain'],\r\n                name: 'DefaultDomainPath',\r\n                displayName: 'Default domain path',\r\n                description: 'Default domain path where the registered user is created.',\r\n                icon: 'DefaultDomainPath',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'UserTypeName',\r\n                displayName: 'Specific contenttype name',\r\n                description: 'Contentype name of the user type, which is inherited from the User contenttype.',\r\n                icon: 'UserTypeName',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.LongTextFieldSetting({\r\n                name: 'DuplicateErrorMessage',\r\n                displayName: 'Duplicate error message',\r\n                description: 'This text is displayed to the end user, when he or she tries to give a username which is in use.',\r\n                icon: 'DuplicateErrorMessage',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.NullFieldSetting({\r\n                name: 'IsBodyHtml',\r\n                displayName: 'Use html in mail messages.',\r\n                description: 'This setting tells that, the email which is sent by the PublicRegistration portlet is configured to use html in the mail body.',\r\n                icon: 'IsBodyHtml',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.NullFieldSetting({\r\n                name: 'ActivationEnabled',\r\n                displayName: 'Use activation',\r\n                description: 'Turn on/off activation process. If it is turned off, the PublicRegistration portlet will not send an activation email with activation link.',\r\n                icon: 'ActivationEnabled',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.LongTextFieldSetting({\r\n                name: 'ActivationEmailTemplate',\r\n                displayName: 'Activation email body template',\r\n                description: 'The text of the body of the activation email which will be sent to the user. The \\'{0}\\' formatting setting will hold the constructed activation link.',\r\n                icon: 'ActivationEmailTemplate',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.LongTextFieldSetting({\r\n                name: 'ActivationSuccessTemplate',\r\n                displayName: 'Activation successful text',\r\n                description: 'This text will be diplayed, after the end user activation process is successfull.',\r\n                icon: 'ActivationSuccessTemplate',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.LongTextFieldSetting({\r\n                name: 'AlreadyActivatedMessage',\r\n                displayName: 'Already Activated Message',\r\n                description: 'This text is displayed to the end user, when the user is alredy activated.',\r\n                icon: 'AlreadyActivatedMessage',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.LongTextFieldSetting({\r\n                name: 'MailSubjectTemplate',\r\n                displayName: 'Activation email subject template',\r\n                description: 'Subject text of the activation email will be sent to the end user.',\r\n                icon: 'MailSubjectTemplate',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'MailFrom',\r\n                displayName: 'Mail From',\r\n                description: '',\r\n                icon: 'MailFrom',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'AdminEmailAddress',\r\n                displayName: 'Admin Email Address',\r\n                description: 'List of email addresses of the administrators',\r\n                icon: 'AdminEmailAddress',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.LongTextFieldSetting({\r\n                name: 'RegistrationSuccessTemplate',\r\n                displayName: 'Registration successfull text',\r\n                description: 'This text is displayed to the end user, when the registration process is successful.',\r\n                icon: 'RegistrationSuccessTemplate',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.LongTextFieldSetting({\r\n                name: 'ResetPasswordTemplate',\r\n                displayName: 'Reset password mail body',\r\n                description: 'This text is sent to the end user via email during resetting password.',\r\n                icon: 'ResetPasswordTemplate',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'ResetPasswordSubjectTemplate',\r\n                displayName: 'Reset password subject template',\r\n                description: 'The subject text of the email which is sent to the end user during resetting password.',\r\n                icon: 'ResetPasswordSubjectTemplate',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.LongTextFieldSetting({\r\n                name: 'ResetPasswordSuccessfulTemplate',\r\n                displayName: 'Reset Password Successful Template ',\r\n                description: 'This text is displayed to the end user, when his/her password reset was succesful.',\r\n                icon: 'ResetPasswordSuccessfulTemplate',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'ChangePasswordUserInterfacePath',\r\n                displayName: 'Change password user interface path',\r\n                description: 'Repository path of the user interface (user control) which is displayen, when the user wants to change his/her password.',\r\n                icon: 'ChangePasswordUserInterfacePath',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'ChangePasswordSuccessfulMessage',\r\n                displayName: 'ChangePasswordSuccessfulMessage',\r\n                description: 'This text is displayed to the end user, his/her password change was succesful.',\r\n                icon: 'ChangePasswordSuccessfulMessage',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'ForgottenPasswordUserInterfacePath',\r\n                displayName: 'Reset password user interface path.',\r\n                description: 'Repository path of the user interface (usercontrol) which will be displayed, when the user forgets his/her password.',\r\n                icon: 'ForgottenPasswordUserInterfacePath',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'NewRegistrationContentView',\r\n                displayName: 'Create new registration contentview',\r\n                description: 'Repository path of the new contentview. If it\\'s not set, the default InlineNew is used.',\r\n                icon: 'NewRegistrationContentView',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'EditProfileContentView',\r\n                displayName: 'Edit profile contentview path',\r\n                description: 'Repository path of the edit profile contentview (if it is not given, the default InlineEdit is used).',\r\n                icon: 'EditProfileContentView',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.NullFieldSetting({\r\n                name: 'AutoGeneratePassword',\r\n                displayName: 'Auto generate password',\r\n                description: 'NOT WORKING!',\r\n                icon: 'AutoGeneratePassword',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.NullFieldSetting({\r\n                name: 'DisableCreatedUser',\r\n                displayName: 'Disable created user',\r\n                description: '',\r\n                icon: 'DisableCreatedUser',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.NullFieldSetting({\r\n                name: 'IsUniqueEmail',\r\n                displayName: 'Unique email',\r\n                description: '',\r\n                icon: 'UniqueEmail',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.NullFieldSetting({\r\n                name: 'AutomaticLogon',\r\n                displayName: 'Automatic logon',\r\n                description: '',\r\n                icon: 'AutomaticLogon',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ReferenceFieldSetting({\r\n                name: 'ChangePasswordPagePath',\r\n                displayName: 'Change password page path',\r\n                description: 'Repository path of the page that contains the public registration protlet with Registration mode.',\r\n                icon: 'ChangePasswordPagePath',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.LongTextFieldSetting({\r\n                name: 'ChangePasswordRestrictedText',\r\n                displayName: 'ChangePasswordRestrictedText',\r\n                description: 'This text is displayed when a user tries to view the \"change password\" page and he/she is not logged in, OR the user has changed his/her password but is still trying to reset the password with the link sent by email.',\r\n                icon: 'ChangePasswordRestrictedText',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.LongTextFieldSetting({\r\n                name: 'AlreadyRegisteredUserMessage',\r\n                displayName: 'Already Registered User Message',\r\n                description: 'This text is displayed to the end user, when a user is alredy registered with the given username.',\r\n                icon: 'AlreadyRegisteredUserMessage',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.LongTextFieldSetting({\r\n                name: 'UpdateProfileSuccessTemplate',\r\n                displayName: 'UpdateProfileSuccessTemplate',\r\n                description: 'This text is displayed to the end user, when his/her profile update was succesfull.',\r\n                icon: 'UpdateProfileSuccessTemplate',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.LongTextFieldSetting({\r\n                name: 'EmailNotValid',\r\n                displayName: 'Email Not Valid',\r\n                description: 'This text is displayed to the end user, when the given email address is not valid.',\r\n                icon: 'EmailNotValid',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.LongTextFieldSetting({\r\n                name: 'NoEmailGiven',\r\n                displayName: 'No Email Given',\r\n                description: 'This text is displayed to the end user, when email address is not given.',\r\n                icon: 'NoEmailGiven',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.NullFieldSetting({\r\n                name: 'ActivateByAdmin',\r\n                displayName: 'Activate by admin',\r\n                description: 'If set, the user registration will be approved by admin.',\r\n                icon: 'ActivateByAdmin',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'ActivateEmailSubject',\r\n                displayName: 'Activate Email Subject',\r\n                description: 'Subject of the activation email.',\r\n                icon: 'ActivateEmailSubject',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.LongTextFieldSetting({\r\n                name: 'ActivateEmailTemplate',\r\n                displayName: 'Activate Email Template',\r\n                description: 'Template of the activation email.',\r\n                icon: 'ActivateEmailTemplate',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ReferenceFieldSetting({\r\n                allowMultiple: true,\r\n                allowedTypes: ['User'],\r\n                name: 'ActivateAdmins',\r\n                displayName: 'Activate admins',\r\n                description: 'The list of administrators who can approve request of registrations.',\r\n                icon: 'ActivateAdminList',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the Query\r\n     * @returns {Schema}\r\n     */\r\n    export function QueryCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-Query,DisplayName',\r\n            Description: '$Ctd-Query,Description',\r\n            Icon: 'Query',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: true,\r\n            AllowedChildTypes: [],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.LongTextFieldSetting({\r\n                name: 'Query',\r\n                displayName: 'Query',\r\n                description: 'Query text.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0,\r\n                controlHint: 'sn:QueryBuilder'\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ChoiceFieldSetting({\r\n                allowExtraValue: false,\r\n                allowMultiple: false,\r\n                options: [\r\n                    {Value: 'Public', Text: 'Public', Enabled: true, Selected: true },\r\n                    {Value: 'Private', Text: 'Private', Enabled: true, Selected: false }\r\n                ],\r\n                displayChoice: FieldSettings.DisplayChoice.RadioButtons,\r\n                enumTypeName: '',\r\n                name: 'QueryType',\r\n                displayName: 'Query type',\r\n                description: 'Public queries are stored under the workspace, private queries are stored under the user profile.',\r\n                readOnly: true,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the Subscription\r\n     * @returns {Schema}\r\n     */\r\n    export function SubscriptionCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-Subscription,DisplayName',\r\n            Description: '$Ctd-Subscription,Description',\r\n            Icon: 'Content',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: [],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'ContentPath',\r\n                displayName: 'ContentPath',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'UserPath',\r\n                displayName: 'UserPath',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'UserEmail',\r\n                displayName: 'Notification address',\r\n                description: 'Notification emails will be sent to this address.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.NumberFieldSetting({\r\n                name: 'UserId',\r\n                displayName: 'UserId',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'UserName',\r\n                displayName: 'UserName',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.NullFieldSetting({\r\n                name: 'IsActive',\r\n                displayName: 'Active notification',\r\n                description: 'Defines whether the portal sends notification emails or not.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                defaultValue: 'true',\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ChoiceFieldSetting({\r\n                allowExtraValue: false,\r\n                allowMultiple: false,\r\n                options: [\r\n                    {Value: '0', Text: 'Immediately', Enabled: true, Selected: true },\r\n                    {Value: '1', Text: 'Daily', Enabled: true, Selected: false },\r\n                    {Value: '2', Text: 'Weekly', Enabled: true, Selected: false },\r\n                    {Value: '3', Text: 'Monthly', Enabled: true, Selected: false }\r\n                ],\r\n                displayChoice: FieldSettings.DisplayChoice.DropDown,\r\n                enumTypeName: '',\r\n                name: 'Frequency',\r\n                displayName: 'Frequency',\r\n                description: '\\            Defines the frequency of the notification<br />\\            <br /><i>Immediately:</i> immediate email when a content changes.\\            <br /><i>Daily:</i> one email per day with the summary of changes.\\            <br /><i>Weekly:</i> one email per week with the summary of changes.\\            <br /><i>Monthly:</i>  one email per month with the summary of changes.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0,\r\n                controlHint: 'sn:RadioButtonGroup'\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ChoiceFieldSetting({\r\n                allowExtraValue: false,\r\n                allowMultiple: false,\r\n                options: [\r\n                    {Value: 'en', Text: 'English', Enabled: true, Selected: true },\r\n                    {Value: 'hu', Text: 'Hungarian', Enabled: true, Selected: false }\r\n                ],\r\n                displayChoice: FieldSettings.DisplayChoice.DropDown,\r\n                enumTypeName: '',\r\n                name: 'Language',\r\n                displayName: 'Language',\r\n                description: 'Defines the language of the notification.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the Tag\r\n     * @returns {Schema}\r\n     */\r\n    export function TagCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-Tag,DisplayName',\r\n            Description: '$Ctd-Tag,Description',\r\n            Icon: 'Content',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: [],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'Description2',\r\n                displayName: 'Description',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.LongTextFieldSetting({\r\n                name: 'BlackListPath',\r\n                displayName: 'Blacklist path',\r\n                description: 'List of paths where tag blacklisted is.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the User\r\n     * @returns {Schema}\r\n     */\r\n    export function UserCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-User,DisplayName',\r\n            Description: '$Ctd-User,Description',\r\n            Icon: 'User',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: ['Image'],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                maxLength: 100,\r\n                name: 'LoginName',\r\n                displayName: 'Login name',\r\n                description: 'The name that the user has to type in on login forms (in some cases along with the domain name). It has to be unique under a domain.',\r\n                readOnly: false,\r\n                compulsory: true,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'JobTitle',\r\n                displayName: 'Job title',\r\n                description: '',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.NullFieldSetting({\r\n                name: 'Enabled',\r\n                displayName: 'Enabled',\r\n                description: 'User account is enabled.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'Domain',\r\n                displayName: 'Domain',\r\n                description: 'The domain of the user.',\r\n                readOnly: true,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                regex: '^[a-zA-Z0-9._%+-]+@(?:[a-zA-Z0-9-]+\\\\.)+[a-zA-Z]{2,}$',\r\n                name: 'Email',\r\n                displayName: 'E-mail',\r\n                description: 'The e-mail of the user.',\r\n                readOnly: false,\r\n                compulsory: true,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                regex: '[^<]+',\r\n                name: 'FullName',\r\n                displayName: 'Full name',\r\n                description: 'Full name of the user (e.g. John Smith).',\r\n                readOnly: false,\r\n                compulsory: true,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ReferenceFieldSetting({\r\n                allowMultiple: false,\r\n                name: 'ImageRef',\r\n                displayName: 'Cover image (reference)',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.BinaryFieldSetting({\r\n                name: 'ImageData',\r\n                displayName: 'Cover image (binarydata)',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.NullFieldSetting({\r\n                name: 'Avatar',\r\n                displayName: 'Avatar',\r\n                description: 'Avatar image of user.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0,\r\n                controlHint: 'sn:Image'\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.PasswordFieldSetting({\r\n                reenterTitle: 'Re-enter password',\r\n                reenterDescription: 'Re-enter password.',\r\n                passwordHistoryLength: 0,\r\n                name: 'Password',\r\n                displayName: 'Password',\r\n                description: 'User password.',\r\n                readOnly: false,\r\n                compulsory: true,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'SyncGuid',\r\n                displayName: 'SyncGuid',\r\n                description: 'GUID of corresponding AD object.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Advanced,\r\n                visibleEdit: FieldSettings.FieldVisibility.Advanced,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.DateTimeFieldSetting({\r\n                dateTimeMode: FieldSettings.DateTimeMode.DateAndTime,\r\n                name: 'LastSync',\r\n                displayName: 'LastSync',\r\n                description: 'Date of last synchronization.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Advanced,\r\n                visibleEdit: FieldSettings.FieldVisibility.Advanced,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.CaptchaFieldSetting({\r\n                name: 'Captcha',\r\n                displayName: 'Captcha text',\r\n                description: 'Captcha text entered by the user.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ReferenceFieldSetting({\r\n                allowMultiple: false,\r\n                allowedTypes: ['User'],\r\n                selectionRoots: ['/Root/IMS'],\r\n                name: 'Manager',\r\n                displayName: 'Manager',\r\n                description: 'Manager of the user.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'Department',\r\n                displayName: 'Department',\r\n                description: 'Department of employee.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'Languages',\r\n                displayName: 'Languages',\r\n                description: 'Spoken languages.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                regex: '(^\\\\d*([-\\\\s\\\\+\\\\(\\\\)]\\\\d*)*$)?',\r\n                name: 'Phone',\r\n                displayName: 'Phone',\r\n                description: 'Phone number. (e.g. +123456789 or 1234).',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ChoiceFieldSetting({\r\n                allowExtraValue: false,\r\n                allowMultiple: false,\r\n                options: [\r\n                    {Value: '...', Text: '...', Enabled: true, Selected: false },\r\n                    {Value: 'Female', Text: 'Female', Enabled: true, Selected: false },\r\n                    {Value: 'Male', Text: 'Male', Enabled: true, Selected: false }\r\n                ],\r\n                displayChoice: FieldSettings.DisplayChoice.DropDown,\r\n                enumTypeName: '',\r\n                name: 'Gender',\r\n                displayName: 'Gender',\r\n                description: 'Select one.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Advanced,\r\n                visibleEdit: FieldSettings.FieldVisibility.Advanced,\r\n                visibleNew: FieldSettings.FieldVisibility.Advanced,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ChoiceFieldSetting({\r\n                allowExtraValue: false,\r\n                allowMultiple: false,\r\n                options: [\r\n                    {Value: '...', Text: '...', Enabled: true, Selected: false },\r\n                    {Value: 'Single', Text: 'Single', Enabled: true, Selected: false },\r\n                    {Value: 'Married', Text: 'Married', Enabled: true, Selected: false }\r\n                ],\r\n                displayChoice: FieldSettings.DisplayChoice.DropDown,\r\n                enumTypeName: '',\r\n                name: 'MaritalStatus',\r\n                displayName: 'Marital status',\r\n                description: 'Select one.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Advanced,\r\n                visibleEdit: FieldSettings.FieldVisibility.Advanced,\r\n                visibleNew: FieldSettings.FieldVisibility.Advanced,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.DateTimeFieldSetting({\r\n                dateTimeMode: FieldSettings.DateTimeMode.Date,\r\n                name: 'BirthDate',\r\n                displayName: 'Birth date',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Advanced,\r\n                visibleEdit: FieldSettings.FieldVisibility.Advanced,\r\n                visibleNew: FieldSettings.FieldVisibility.Advanced,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.LongTextFieldSetting({\r\n                textType: FieldSettings.TextType.LongText,\r\n                name: 'Education',\r\n                displayName: 'Education',\r\n                description: 'List of educations - e.g. high school, university.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Advanced,\r\n                visibleEdit: FieldSettings.FieldVisibility.Advanced,\r\n                visibleNew: FieldSettings.FieldVisibility.Advanced,\r\n                defaultOrder: 0,\r\n                controlHint: 'sn:EducationEditor'\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'TwitterAccount',\r\n                displayName: 'Twitter account',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Advanced,\r\n                visibleEdit: FieldSettings.FieldVisibility.Advanced,\r\n                visibleNew: FieldSettings.FieldVisibility.Advanced,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'FacebookURL',\r\n                displayName: 'Facebook URL',\r\n                description: 'http://www.facebook.com/USERNAME.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Advanced,\r\n                visibleEdit: FieldSettings.FieldVisibility.Advanced,\r\n                visibleNew: FieldSettings.FieldVisibility.Advanced,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'LinkedInURL',\r\n                displayName: 'LinkedIn URL',\r\n                description: 'http://www.linkedin.com/USERNAME.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Advanced,\r\n                visibleEdit: FieldSettings.FieldVisibility.Advanced,\r\n                visibleNew: FieldSettings.FieldVisibility.Advanced,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ChoiceFieldSetting({\r\n                allowExtraValue: false,\r\n                allowMultiple: false,\r\n                options: [\r\n                    {Value: 'en', Text: 'English', Enabled: true, Selected: true },\r\n                    {Value: 'hu', Text: 'Hungarian', Enabled: true, Selected: false }\r\n                ],\r\n                displayChoice: FieldSettings.DisplayChoice.DropDown,\r\n                enumTypeName: '',\r\n                name: 'Language',\r\n                displayName: 'Selected language',\r\n                description: 'Language used to display texts on the site, if it is available.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ReferenceFieldSetting({\r\n                allowMultiple: true,\r\n                allowedTypes: ['Workspace','DocumentWorkspace','ProjectWorkspace','SalesWorkspace'],\r\n                name: 'FollowedWorkspaces',\r\n                displayName: 'Followed workspaces',\r\n                description: 'List of workspaces followed by the user.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Advanced,\r\n                visibleEdit: FieldSettings.FieldVisibility.Advanced,\r\n                visibleNew: FieldSettings.FieldVisibility.Advanced,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'ProfilePath',\r\n                displayName: 'Profile path',\r\n                description: 'Path of the user\\'s personal workspace.',\r\n                readOnly: true,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the RegisteredUser\r\n     * @returns {Schema}\r\n     */\r\n    export function RegisteredUserCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-RegisteredUser,DisplayName',\r\n            Description: '$Ctd-RegisteredUser,Description',\r\n            Icon: 'RegisteredUser',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: [],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'ResetKey',\r\n                displayName: 'Reset key',\r\n                description: 'Reset key guid used by the reset password link.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'ActivationId',\r\n                displayName: 'Activation',\r\n                description: 'Activation guid used by the registered user activation links.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.NullFieldSetting({\r\n                name: 'Activated',\r\n                displayName: 'Activated',\r\n                description: 'User is activated by the activation email. (or you can activate user by enabling this option).',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'SecurityQuestion',\r\n                displayName: 'Question',\r\n                description: 'Password recovery information entered by the user.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'SecurityAnswer',\r\n                displayName: 'Answer',\r\n                description: 'Password recovery answer to the end user\\'s question.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the UserSearch\r\n     * @returns {Schema}\r\n     */\r\n    export function UserSearchCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-UserSearch,DisplayName',\r\n            Description: '$Ctd-UserSearch,Description',\r\n            Icon: 'User',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: [],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'Search',\r\n                displayName: 'Search',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the WikiArticle\r\n     * @returns {Schema}\r\n     */\r\n    export function WikiArticleCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-WikiArticle,DisplayName',\r\n            Description: '$Ctd-WikiArticle,Description',\r\n            Icon: 'WikiArticle',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: false,\r\n            AllowedChildTypes: [],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.LongTextFieldSetting({\r\n                name: 'WikiArticleText',\r\n                displayName: 'Wiki article text',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0,\r\n                controlHint: 'sn:WikiEditor'\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.LongTextFieldSetting({\r\n                name: 'ReferencedWikiTitles',\r\n                displayName: 'Referenced wiki titles',\r\n                readOnly: true,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the Workflow\r\n     * @returns {Schema}\r\n     */\r\n    export function WorkflowCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-Workflow,DisplayName',\r\n            Description: '$Ctd-Workflow,Description',\r\n            Icon: 'workflow',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: true,\r\n            AllowedChildTypes: [],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'WorkflowDefinitionVersion',\r\n                displayName: 'Workflow definition version',\r\n                description: 'Stores the version for a running workflow instance.',\r\n                readOnly: true,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'WorkflowInstanceGuid',\r\n                displayName: 'Workflow instance GUID',\r\n                description: 'Stores the instance GUID for a running workflow instance.',\r\n                readOnly: true,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'WorkflowTypeName',\r\n                displayName: 'Workflow type name',\r\n                description: 'Name of the workflow definition this is an instance of.',\r\n                readOnly: true,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'WorkflowHostType',\r\n                displayName: 'Workflow host type string',\r\n                description: 'The host type identifier string for resuming this workflow instance.',\r\n                readOnly: true,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Hide,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.NullFieldSetting({\r\n                name: 'WorkflowStarted',\r\n                displayName: 'Workflow started',\r\n                description: 'False for pre-run and template workflow instances.',\r\n                readOnly: true,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Advanced,\r\n                visibleEdit: FieldSettings.FieldVisibility.Advanced,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ChoiceFieldSetting({\r\n                allowExtraValue: false,\r\n                allowMultiple: false,\r\n                options: [\r\n                    {Value: '0', Text: 'Created', Enabled: true, Selected: false },\r\n                    {Value: '1', Text: 'Running', Enabled: true, Selected: false },\r\n                    {Value: '2', Text: 'Aborted', Enabled: true, Selected: false },\r\n                    {Value: '3', Text: 'Completed', Enabled: true, Selected: false }\r\n                ],\r\n                displayChoice: FieldSettings.DisplayChoice.DropDown,\r\n                enumTypeName: 'SenseNet.Workflow.WorkflowStatusEnum',\r\n                name: 'WorkflowStatus',\r\n                displayName: 'Workflow status',\r\n                description: 'The status of the .NET workflow represented by this content.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.NullFieldSetting({\r\n                name: 'AllowManualStart',\r\n                displayName: 'Allow manual start',\r\n                description: 'Check to allow this workflow to be started manually.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.NullFieldSetting({\r\n                name: 'AutostartOnPublished',\r\n                displayName: 'Autostart on Published',\r\n                description: 'Check to allow this workflow to start automatically when a content is published in the list.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.NullFieldSetting({\r\n                name: 'AutostartOnCreated',\r\n                displayName: 'Autostart on Created',\r\n                description: 'Check to allow this workflow to start automatically when a content is created in the list.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.NullFieldSetting({\r\n                name: 'AutostartOnChanged',\r\n                displayName: 'Autostart on Changed',\r\n                description: 'Check to allow this workflow to start automatically when a content is changed in the list.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.NullFieldSetting({\r\n                name: 'ContentWorkflow',\r\n                displayName: 'Content workflow',\r\n                description: 'True for workflow types that are related to one content (e.g. approval or printing). Related content must be an existing content.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Advanced,\r\n                visibleEdit: FieldSettings.FieldVisibility.Advanced,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.NullFieldSetting({\r\n                name: 'AbortOnRelatedContentChange',\r\n                displayName: 'Abort on related content change',\r\n                description: 'If set to true workflow will be automatically aborted whenever the Related Content changes.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Advanced,\r\n                visibleEdit: FieldSettings.FieldVisibility.Advanced,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ReferenceFieldSetting({\r\n                allowMultiple: false,\r\n                allowedTypes: ['GenericContent'],\r\n                name: 'RelatedContent',\r\n                displayName: 'Related content',\r\n                description: 'The content that is related to the workflow. Only used in content workflows.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.LongTextFieldSetting({\r\n                name: 'SystemMessages',\r\n                displayName: 'System messages',\r\n                description: 'Messages from the workflow system. E.g. aborting / terminating reason.',\r\n                readOnly: true,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Advanced,\r\n                visibleEdit: FieldSettings.FieldVisibility.Advanced,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'OwnerSiteUrl',\r\n                displayName: 'Owner site url',\r\n                description: 'The url of site where the workflow was created on.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Advanced,\r\n                visibleEdit: FieldSettings.FieldVisibility.Hide,\r\n                visibleNew: FieldSettings.FieldVisibility.Hide,\r\n                defaultOrder: 0\r\n            }));\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the ApprovalWorkflow\r\n     * @returns {Schema}\r\n     */\r\n    export function ApprovalWorkflowCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-ApprovalWorkflow,DisplayName',\r\n            Description: '$Ctd-ApprovalWorkflow,Description',\r\n            Icon: 'workflow',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: true,\r\n            AllowedChildTypes: [],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ReferenceFieldSetting({\r\n                allowMultiple: false,\r\n                allowedTypes: ['User'],\r\n                selectionRoots: ['/Root/IMS'],\r\n                name: 'FirstLevelApprover',\r\n                displayName: 'First level approver',\r\n                description: 'The user who need to approve the selected content.',\r\n                readOnly: false,\r\n                compulsory: true,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'FirstLevelTimeFrame',\r\n                displayName: 'First level approve time frame',\r\n                description: 'Time frame that first level approver has for approving the content (timespan format: \\'[d.]hh:mm:ss\\', or a single number - e.g. \\'3\\' - for days).',\r\n                readOnly: false,\r\n                compulsory: true,\r\n                defaultValue: '3',\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Advanced,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ReferenceFieldSetting({\r\n                allowMultiple: true,\r\n                allowedTypes: ['User'],\r\n                selectionRoots: ['/Root/IMS'],\r\n                name: 'SecondLevelApprover',\r\n                displayName: 'Second level approvers',\r\n                description: 'Users who can approve the selected content if first level approvers did not approve it in the given time frame.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'SecondLevelTimeFrame',\r\n                displayName: 'Second level approve time frame',\r\n                description: 'Time frame that second level approvers have for approving the content (timespan format: \\'[d.]hh:mm:ss\\', or a single number - e.g. \\'3\\' - for days).',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                defaultValue: '5',\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Advanced,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.NullFieldSetting({\r\n                name: 'WaitForAll',\r\n                displayName: 'Wait for all',\r\n                description: 'If this option is set to true, all second level approvers should approve the content. If false, one approver is enough.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                defaultValue: '1',\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Advanced,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the DocumentPreviewWorkflow\r\n     * @returns {Schema}\r\n     */\r\n    export function DocumentPreviewWorkflowCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-DocumentPreviewWorkflow,DisplayName',\r\n            Description: '$Ctd-DocumentPreviewWorkflow,Description',\r\n            Icon: 'workflow',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: true,\r\n            AllowedChildTypes: [],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.IntegerFieldSetting({\r\n                name: 'StartIndex',\r\n                displayName: 'Start index',\r\n                description: '0-based index of the page where the workflow starts generating preview images. The number of images comes from settings.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'ContentVersion',\r\n                displayName: 'Content version',\r\n                description: 'The exact version number (e.g. V2.3.P) of the content that the preview images should be generated for.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the ExpenseClaimWorkflow\r\n     * @returns {Schema}\r\n     */\r\n    export function ExpenseClaimWorkflowCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-ExpenseClaimWorkflow,DisplayName',\r\n            Description: '$Ctd-ExpenseClaimWorkflow,Description',\r\n            Icon: 'workflow',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: true,\r\n            AllowedChildTypes: [],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ReferenceFieldSetting({\r\n                allowMultiple: false,\r\n                allowedTypes: ['User'],\r\n                selectionRoots: ['/Root/IMS'],\r\n                name: 'CEO',\r\n                displayName: 'CEO',\r\n                description: 'The CEO of the department.',\r\n                readOnly: false,\r\n                compulsory: true,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.IntegerFieldSetting({\r\n                name: 'BudgetLimit',\r\n                displayName: 'Budget Limit',\r\n                description: 'Set a limit for your money that you are able to spend.',\r\n                readOnly: false,\r\n                compulsory: true,\r\n                defaultValue: '1000',\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'FinanceEmail',\r\n                displayName: 'Finance e-mail',\r\n                description: 'The e-mail address of a member of the finance who will receive a message of the approved expense claim.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the ForgottenPasswordWorkflow\r\n     * @returns {Schema}\r\n     */\r\n    export function ForgottenPasswordWorkflowCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-ForgottenPasswordWorkflow,DisplayName',\r\n            Description: '$Ctd-ForgottenPasswordWorkflow,Description',\r\n            Icon: 'workflow',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: true,\r\n            AllowedChildTypes: [],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                regex: '^[a-zA-Z0-9._%+-]+@(?:[a-zA-Z0-9-]+\\\\.)+[a-zA-Z]{2,4}$',\r\n                name: 'EmailForPassword',\r\n                displayName: 'Email address',\r\n                description: 'Please provide your email address here. If a user exists with that address, we will send you a confimation email with a link for resetting your password.',\r\n                readOnly: false,\r\n                compulsory: true,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the MailProcessorWorkflow\r\n     * @returns {Schema}\r\n     */\r\n    export function MailProcessorWorkflowCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-MailProcessorWorkflow,DisplayName',\r\n            Description: '$Ctd-MailProcessorWorkflow,Description',\r\n            Icon: 'workflow',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: true,\r\n            AllowedChildTypes: [],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        return schema;\r\n    }\r\n    /**\r\n     * Method that returns the Content Type Definition of the RegistrationWorkflow\r\n     * @returns {Schema}\r\n     */\r\n    export function RegistrationWorkflowCTD(): Schema {\r\n        let options: ISchemaOptions = {\r\n            DisplayName: '$Ctd-RegistrationWorkflow,DisplayName',\r\n            Description: '$Ctd-RegistrationWorkflow,Description',\r\n            Icon: 'workflow',\r\n            AllowIndexing: true,\r\n            AllowIncrementalNaming: true,\r\n            AllowedChildTypes: [],\r\n            FieldSettings: []\r\n        };\r\n\r\n        let schema = new Schema(options);\r\n\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'FullName',\r\n                displayName: 'Full name',\r\n                description: 'Please enter your full name here.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'UserName',\r\n                displayName: 'User name',\r\n                description: 'Please enter the username you would like.',\r\n                readOnly: false,\r\n                compulsory: true,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                regex: '^[a-zA-Z0-9._%+-]+@(?:[a-zA-Z0-9-]+\\\\.)+[a-zA-Z]{2,4}$',\r\n                name: 'Email',\r\n                displayName: 'E-mail',\r\n                description: 'Type your e-mail address here.',\r\n                readOnly: false,\r\n                compulsory: true,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ShortTextFieldSetting({\r\n                name: 'InitialPassword',\r\n                displayName: 'Initial password',\r\n                description: 'Please enter the password you would like.',\r\n                readOnly: false,\r\n                compulsory: true,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        schema.FieldSettings.push(\r\n            new FieldSettings.ChoiceFieldSetting({\r\n                allowExtraValue: false,\r\n                allowMultiple: false,\r\n                options: [\r\n                    {Value: 'client', Text: 'Prospective enterprise client', Enabled: true, Selected: false },\r\n                    {Value: 'media', Text: 'Technical journalist or media worker', Enabled: true, Selected: false },\r\n                    {Value: 'community', Text: 'Open source developer or advocate', Enabled: true, Selected: false },\r\n                    {Value: 'public', Text: 'None of the above', Enabled: true, Selected: false }\r\n                ],\r\n                displayChoice: FieldSettings.DisplayChoice.DropDown,\r\n                enumTypeName: '',\r\n                name: 'RegistrationType',\r\n                displayName: 'Registration type',\r\n                description: 'Please select which one of the following describes you best.',\r\n                readOnly: false,\r\n                compulsory: false,\r\n                visibleBrowse: FieldSettings.FieldVisibility.Show,\r\n                visibleEdit: FieldSettings.FieldVisibility.Show,\r\n                visibleNew: FieldSettings.FieldVisibility.Show,\r\n                defaultOrder: 0\r\n            }));\r\n        return schema;\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}