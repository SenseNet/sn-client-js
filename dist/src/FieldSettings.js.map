{"version":3,"sources":["src/FieldSettings.ts"],"names":[],"mappings":"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","file":"src/FieldSettings.js","sourcesContent":["import { Fields } from './Fields';\r\n/**\r\n * Module for FieldSettings.\r\n *\r\n * FieldSetting object is the implementation of the configuration element in a Sense/Net Content Type Definition.\r\n * The FieldSetting of a Field contains properties that define the behavior of the Field - for example a Field can be configured as read only or compulsory to fill.\r\n * FieldSettings helps us to autogenerate type and schema TS files from Sense/Net CTDs and use these files to reach all the configuration options of the Content Types fields on\r\n * client-side e.g. for validation.\r\n *\r\n * This module also contains some FieldSetting related enums to use them as types in properties e.g. visibitily or datetime mode options.\r\n */\r\nexport module FieldSettings {\r\n    /**\r\n     * Enum for Field visibility values.\r\n     */\r\n    export enum FieldVisibility { Show, Hide, Advanced }\r\n    /**\r\n     * Enum for Field output method values.\r\n     */\r\n    export enum OutputMethod { Default, Raw, Text, Html }\r\n    /**\r\n     * Enum for Choice Field control values.\r\n     */\r\n    export enum DisplayChoice { DropDown, RadioButtons, CheckBoxes }\r\n    /**\r\n     * Enum for DateTime Field mode values.\r\n     */\r\n    export enum DateTimeMode { None, Date, DateAndTime }\r\n    /**\r\n     * Enum for DateTime Field precision values.\r\n     */\r\n    export enum DateTimePrecision { Millisecond, Second, Minute, Hour, Day }\r\n    /**\r\n     * Enum for LongText field editor values.\r\n     */\r\n    export enum TextType { LongText, RichText, AdvancedRichText }\r\n    /**\r\n     * Enum for HyperLink field href values.\r\n     */\r\n    export enum UrlFormat { Hyperlink, Picture }\r\n\r\n    export class FieldSetting {\r\n        Name: string = 'Content';\r\n        DisplayName?: string;\r\n        Description?: string;\r\n        Icon?: string;\r\n        ReadOnly?: boolean;\r\n        Compulsory?: boolean;\r\n        DefaultValue?: string;\r\n        OutputMethod?: OutputMethod;\r\n        VisibleBrowse?: FieldVisibility;\r\n        VisibleNew?: FieldVisibility;\r\n        VisibleEdit?: FieldVisibility;\r\n        FieldIndex?: number;\r\n        DefaultOrder?: number;\r\n        ControlHint?: string;\r\n\r\n        constructor(options: IFieldSettingOptions) {\r\n            this.Name = options.name;\r\n            this.DisplayName = options.displayName;\r\n            this.Icon = options.icon;\r\n            this.ReadOnly = options.readOnly;\r\n            this.Compulsory = options.compulsory;\r\n            this.DefaultValue = options.defaultValue;\r\n            this.OutputMethod = options.outputMethod;\r\n            this.VisibleBrowse = options.visibleBrowse;\r\n            this.VisibleEdit = options.visibleEdit;\r\n            this.VisibleNew = options.visibleNew;\r\n            this.FieldIndex = options.fieldIndex;\r\n            this.DefaultOrder = options.defaultOrder;\r\n            this.ControlHint = options.controlHint;\r\n\r\n        }\r\n    }\r\n\r\n    export interface IFieldSettingOptions {\r\n        name?: string;\r\n        displayName?: string;\r\n        description?: string;\r\n        icon?: string;\r\n        readOnly?: boolean;\r\n        compulsory?: boolean;\r\n        defaultValue?: string;\r\n        outputMethod?: OutputMethod;\r\n        visibleBrowse?: FieldVisibility;\r\n        visibleNew?: FieldVisibility;\r\n        visibleEdit?: FieldVisibility;\r\n        fieldIndex?: number;\r\n        defaultOrder?: number;\r\n        controlHint?: string;\r\n    }\r\n\r\n\r\n    // Used in ContentType, GenericContent, File, Image, ViewBase, ExpenseClaim, TrashBag, TrashBin, CalendarEvent, EventRegistrationFormItem, ForumEntry, Post, Task, ExpenseClaimWorkflowTask, DocumentPreviewWorkflow, ExpenseClaimWorkflow\r\n    export class IntegerFieldSetting extends FieldSetting {\r\n        MinValue: number;\r\n        MaxValue: number;\r\n        ShowAsPercentage: boolean;\r\n        Step: number;\r\n\r\n        constructor(options: IIntegerFieldSettingOptions) {\r\n            super(options);\r\n            this.MinValue = options.minValue;\r\n            this.MaxValue = options.maxValue;\r\n            this.ShowAsPercentage = options.showAsPercentage;\r\n            this.Step = options.step;\r\n        }\r\n    }\r\n\r\n    export interface IIntegerFieldSettingOptions extends IFieldSettingOptions {\r\n        minValue?: number;\r\n        maxValue?: number;\r\n        showAsPercentage?: boolean;\r\n        step?: number;\r\n    }\r\n\r\n    // Used in ContentType, GenericContent, Settings, IndexingSettings, ViewBase, ListView, WorkflowDefinition, ContentList, Survey, Voting, SurveyList, Skin, Workspace, Blog, SalesWorkspace, Site, BlogPost, CalendarEvent, ConfirmationItem, CustomListItem, ExpenseClaimItem, Portlet, Article, PublicRegistrationConfig, Subscription, User, RegisteredUser, Workflow, ApprovalWorkflow\r\n    export class NullFieldSetting extends FieldSetting {\r\n\r\n        constructor(options: INullFieldSettingOptions) {\r\n            super(options);\r\n        }\r\n    }\r\n\r\n    export interface INullFieldSettingOptions extends IFieldSettingOptions {\r\n    }\r\n\r\n    // \r\n    export class TextFieldSetting extends FieldSetting {\r\n        MinLength: number;\r\n        MaxLength: number;\r\n\r\n        constructor(options: ITextFieldSettingOptions) {\r\n            super(options);\r\n            this.MinLength = options.minLength;\r\n            this.MaxLength = options.maxLength;\r\n        }\r\n    }\r\n\r\n    export interface ITextFieldSettingOptions extends IFieldSettingOptions {\r\n        minLength?: number;\r\n        maxLength?: number;\r\n    }\r\n\r\n    // Used in ContentType, GenericContent, File, Contract, OrderForm, ListView, ADFolder, ContentList, Form, Survey, SurveyList, Device, Domain, Email, OrganizationalUnit, TrashBag, Group, CalendarEvent, Car, EventRegistrationFormItem, Link, Portlet, SliderItem, Task, ApprovalWorkflowTask, Article, WebContentDemo, NotificationConfig, PublicRegistrationConfig, Subscription, Tag, User, RegisteredUser, UserSearch, Workflow, ApprovalWorkflow, DocumentPreviewWorkflow, ExpenseClaimWorkflow, ForgottenPasswordWorkflow, RegistrationWorkflow\r\n    export class ShortTextFieldSetting extends TextFieldSetting {\r\n        Regex: string;\r\n\r\n        constructor(options: IShortTextFieldSettingOptions) {\r\n            super(options);\r\n            this.Regex = options.regex;\r\n        }\r\n    }\r\n\r\n    export interface IShortTextFieldSettingOptions extends ITextFieldSettingOptions {\r\n        regex?: string;\r\n    }\r\n\r\n    // Used in ContentType, GenericContent, File, Contract, HtmlTemplate, Image, OrderForm, ViewBase, ListView, Video, ContentList, Aspect, Form, SurveyList, Email, KPIDatasource, SmartFolder, SalesWorkspace, BlogPost, CalendarEvent, Post, SliderItem, SurveyItem, ExpenseClaimWorkflowTask, Article, HTMLContent, WebContentDemo, NotificationConfig, PublicRegistrationConfig, Query, Tag, User, WikiArticle, Workflow\r\n    export class LongTextFieldSetting extends TextFieldSetting {\r\n        Rows: number;\r\n        TextType: TextType;\r\n        AppendModifications: boolean;\r\n\r\n        constructor(options: ILongTextFieldSettingOptions) {\r\n            super(options);\r\n            this.Rows = options.rows;\r\n            this.TextType = options.textType;\r\n            this.AppendModifications = options.appendModifications;\r\n        }\r\n    }\r\n\r\n    export interface ILongTextFieldSettingOptions extends ITextFieldSettingOptions {\r\n        rows?: number;\r\n        textType?: TextType;\r\n        appendModifications?: boolean;\r\n    }\r\n\r\n    // Used in ContentType, File, ExpenseClaimItem, Portlet, Article, User\r\n    export class BinaryFieldSetting extends FieldSetting {\r\n        IsText: boolean;\r\n\r\n        constructor(options: IBinaryFieldSettingOptions) {\r\n            super(options);\r\n            this.IsText = options.isText;\r\n        }\r\n    }\r\n\r\n    export interface IBinaryFieldSettingOptions extends IFieldSettingOptions {\r\n        isText?: boolean;\r\n    }\r\n\r\n    // Used in ContentType, GenericContent, ContentLink, Contract, PageTemplate, ViewBase, ContentList, EventList, Survey, Voting, SurveyList, ImageLibrary, TrashBag, Workspace, Site, UserProfile, Group, CalendarEvent, ExpenseClaimItem, ForumEntry, Memo, Portlet, Post, SliderItem, SurveyItem, Task, ApprovalWorkflowTask, ExpenseClaimWorkflowTask, Article, WebContentDemo, PublicRegistrationConfig, User, Workflow, ApprovalWorkflow, ExpenseClaimWorkflow\r\n    export class ReferenceFieldSetting extends FieldSetting {\r\n        AllowMultiple: boolean;\r\n        AllowedTypes: string[];\r\n        SelectionRoots: string[];\r\n        Query: string;\r\n        FieldName: string;\r\n\r\n        constructor(options: IReferenceFieldSettingOptions) {\r\n            super(options);\r\n            this.AllowMultiple = options.allowMultiple;\r\n            this.AllowedTypes = options.allowedTypes;\r\n            this.SelectionRoots = options.selectionRoots;\r\n            this.Query = options.query;\r\n            this.FieldName = options.fieldName;\r\n        }\r\n    }\r\n\r\n    export interface IReferenceFieldSettingOptions extends IFieldSettingOptions {\r\n        allowMultiple?: boolean;\r\n        allowedTypes?: string[];\r\n        selectionRoots?: string[];\r\n        query?: string;\r\n        fieldName?: string;\r\n    }\r\n\r\n    // Used in ContentType, GenericContent, Image, ADFolder, Domain, Email, OrganizationalUnit, TrashBag, Workspace, SalesWorkspace, Group, BlogPost, CalendarEvent, Car, ExpenseClaimItem, Memo, SurveyItem, Task, WebContent, User\r\n    export class DateTimeFieldSetting extends FieldSetting {\r\n        DateTimeMode: DateTimeMode;\r\n        Precision: DateTimePrecision;\r\n\r\n        constructor(options: IDateTimeFieldSettingOptions) {\r\n            super(options);\r\n            this.DateTimeMode = options.dateTimeMode;\r\n            this.Precision = options.precision;\r\n        }\r\n    }\r\n\r\n    export interface IDateTimeFieldSettingOptions extends IFieldSettingOptions {\r\n        dateTimeMode?: DateTimeMode;\r\n        precision?: DateTimePrecision;\r\n    }\r\n\r\n    // Used in GenericContent, Contract, ViewBase, WorkflowDefinition, ContentList, SmartFolder, ContentRotator, Site, CalendarEvent, Car, Memo, SliderItem, Task, ApprovalWorkflowTask, WebContentDemo, Query, Subscription, User, Workflow, RegistrationWorkflow\r\n    export class ChoiceFieldSetting extends ShortTextFieldSetting {\r\n        AllowExtraValue: boolean;\r\n        AllowMultiple: boolean;\r\n        Options: Fields.ChoiceOption[];\r\n        DisplayChoice: DisplayChoice;\r\n        EnumTypeName: string;\r\n\r\n        constructor(options: IChoiceFieldSettingOptions) {\r\n            super(options);\r\n            this.AllowExtraValue = options.allowExtraValue;\r\n            this.AllowMultiple = options.allowMultiple;\r\n            this.Options = options.options;\r\n            this.DisplayChoice = options.displayChoice;\r\n            this.EnumTypeName = options.enumTypeName;\r\n        }\r\n    }\r\n\r\n    export interface IChoiceFieldSettingOptions extends IShortTextFieldSettingOptions {\r\n        allowExtraValue?: boolean;\r\n        allowMultiple?: boolean;\r\n        options?: Fields.ChoiceOption[];\r\n        displayChoice?: DisplayChoice;\r\n        enumTypeName?: string;\r\n    }\r\n\r\n    // Used in GenericContent, File, Resource, ProjectWorkspace, SalesWorkspace, Car, Subscription\r\n    export class NumberFieldSetting extends FieldSetting {\r\n        MinValue: number;\r\n        MaxValue: number;\r\n        Digits: number;\r\n        ShowAsPercentage: boolean;\r\n        Step: number;\r\n\r\n        constructor(options: INumberFieldSettingOptions) {\r\n            super(options);\r\n            this.MinValue = options.minValue;\r\n            this.MaxValue = options.maxValue;\r\n            this.Digits = options.digits;\r\n            this.ShowAsPercentage = options.showAsPercentage;\r\n            this.Step = options.step;\r\n        }\r\n    }\r\n\r\n    export interface INumberFieldSettingOptions extends IFieldSettingOptions {\r\n        minValue?: number;\r\n        maxValue?: number;\r\n        digits?: number;\r\n        showAsPercentage?: boolean;\r\n        step?: number;\r\n    }\r\n\r\n    // Used in GenericContent\r\n    export class RatingFieldSetting extends ShortTextFieldSetting {\r\n        Range: number;\r\n        Split: number;\r\n\r\n        constructor(options: IRatingFieldSettingOptions) {\r\n            super(options);\r\n            this.Range = options.range;\r\n            this.Split = options.split;\r\n        }\r\n    }\r\n\r\n    export interface IRatingFieldSettingOptions extends IShortTextFieldSettingOptions {\r\n        range?: number;\r\n        split?: number;\r\n    }\r\n\r\n    // Used in SalesWorkspace, ExpenseClaimItem\r\n    export class CurrencyFieldSetting extends NumberFieldSetting {\r\n        Format: string;\r\n\r\n        constructor(options: ICurrencyFieldSettingOptions) {\r\n            super(options);\r\n            this.Format = options.format;\r\n        }\r\n    }\r\n\r\n    export interface ICurrencyFieldSettingOptions extends INumberFieldSettingOptions {\r\n        format?: string;\r\n    }\r\n\r\n    // Used in Car\r\n    export class ColorFieldSetting extends TextFieldSetting {\r\n        Palette: string;\r\n\r\n        constructor(options: IColorFieldSettingOptions) {\r\n            super(options);\r\n            this.Palette = options.palette;\r\n        }\r\n    }\r\n\r\n    export interface IColorFieldSettingOptions extends ITextFieldSettingOptions {\r\n        palette?: string;\r\n    }\r\n\r\n    // Used in SliderItem, WebContentDemo\r\n    export class HyperLinkFieldSetting extends FieldSetting {\r\n        UrlFormat: UrlFormat;\r\n\r\n        constructor(options: IHyperLinkFieldSettingOptions) {\r\n            super(options);\r\n            this.UrlFormat = options.urlFormat;\r\n        }\r\n    }\r\n\r\n    export interface IHyperLinkFieldSettingOptions extends IFieldSettingOptions {\r\n        urlFormat?: UrlFormat;\r\n    }\r\n\r\n    // Used in User\r\n    export class PasswordFieldSetting extends ShortTextFieldSetting {\r\n        ReenterTitle: string;\r\n        ReenterDescription: string;\r\n        PasswordHistoryLength: number;\r\n\r\n        constructor(options: IPasswordFieldSettingOptions) {\r\n            super(options);\r\n            this.ReenterTitle = options.reenterTitle;\r\n            this.ReenterDescription = options.reenterDescription;\r\n            this.PasswordHistoryLength = options.passwordHistoryLength;\r\n        }\r\n    }\r\n\r\n    export interface IPasswordFieldSettingOptions extends IShortTextFieldSettingOptions {\r\n        reenterTitle?: string;\r\n        reenterDescription?: string;\r\n        passwordHistoryLength?: number;\r\n    }\r\n\r\n    // Used in User\r\n    export class CaptchaFieldSetting extends FieldSetting {\r\n\r\n        constructor(options: ICaptchaFieldSettingOptions) {\r\n            super(options);\r\n        }\r\n    }\r\n\r\n    export interface ICaptchaFieldSettingOptions extends IFieldSettingOptions {\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}